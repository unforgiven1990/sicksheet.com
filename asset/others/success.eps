%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Happy young people taking photo via mobile phone.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 5/7/2020
%%BoundingBox: 0 0 3600 2000
%%HiResBoundingBox: 0 0 3599.9996 2000
%%CropBox: 0 0 3599.9996 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Happy young people taking photo via mobile phone</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Happy young people taking photo via mobile phone flat vector illustration. Cheerful group of characters having fun and posing for picture. Digital technology and friendship concept</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>vector</rdf:li>
               <rdf:li>happy</rdf:li>
               <rdf:li>friendship</rdf:li>
               <rdf:li>day</rdf:li>
               <rdf:li>group</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>smiling</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>people</rdf:li>
               <rdf:li>photo</rdf:li>
               <rdf:li>man</rdf:li>
               <rdf:li>portrait</rdf:li>
               <rdf:li>girl</rdf:li>
               <rdf:li>mobile</rdf:li>
               <rdf:li>young</rdf:li>
               <rdf:li>character</rdf:li>
               <rdf:li>fun</rdf:li>
               <rdf:li>boy</rdf:li>
               <rdf:li>camera</rdf:li>
               <rdf:li>phone</rdf:li>
               <rdf:li>making</rdf:li>
               <rdf:li>picture</rdf:li>
               <rdf:li>self</rdf:li>
               <rdf:li>technology</rdf:li>
               <rdf:li>flat</rdf:li>
               <rdf:li>concept</rdf:li>
               <rdf:li>person</rdf:li>
               <rdf:li>male</rdf:li>
               <rdf:li>woman</rdf:li>
               <rdf:li>female</rdf:li>
               <rdf:li>adult</rdf:li>
               <rdf:li>taking</rdf:li>
               <rdf:li>star</rdf:li>
               <rdf:li>like</rdf:li>
               <rdf:li>love</rdf:li>
               <rdf:li>like</rdf:li>
               <rdf:li>heart</rdf:li>
               <rdf:li>selfie</rdf:li>
               <rdf:li>posing</rdf:li>
               <rdf:li>waving</rdf:li>
               <rdf:li>hand</rdf:li>
               <rdf:li>cheerful</rdf:li>
               <rdf:li>successful</rdf:li>
               <rdf:li>energy</rdf:li>
               <rdf:li>smartphone</rdf:li>
               <rdf:li>social media</rdf:li>
               <rdf:li>sharing</rdf:li>
               <rdf:li>networking</rdf:li>
               <rdf:li>communication</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2020-05-07T23:31:44+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-05-07T23:31:45+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-05-07T23:31:45+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>144</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAkAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9L4qg9X1bT9I0y51PUJR&#xA;BZWkZlnlNTRV8ANyT0AHXCBasH8s/nh5W13zBDobWt7pl3dqr2DX0SxrOsi84ytGYj1E+JK7N2PT&#xA;JyxEC0W9EytLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqWRa7&#xA;FNEk0NpdSRSKHjkWLZlYVBFT3GGlX/pj/lyu/wDkV/bjSq2nahb6ha/WYOQT1JYirqVYPDI0UgIP&#xA;g6EYkKisCuxVIvPHlhPNHlTUtBaX0DexhUmpUK6MJEJA6jmgr7ZKMqNqXlPlb8nfOcnm3Q9U8xrp&#xA;9rb+XlgSOeyaRproWiJHbh+R4gKIhU0XvtvtbLIKNdWNPc8oZOxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KoLUtJtdRRUnMi8fstE7RsPiV61X/ACoxkZRBb8GoljNiviL7x+lSs9BtrS5W4inuWILH&#xA;hJPI6HkADVWJr0rgEACzyauU48JEf9KA3rmg2GtWsdre+p6UcizKInaM81BC149QK1odstjIx5OH&#xA;KIlzQMHk2yhmgm+vX8rQPHIoluWkUmIIBVWqKHhvT+Y+1JHIfJiMY80z1fS7bVdOm0+65CCcAScK&#xA;BqBg2xINOmQjKjbOUbFJSvkfTFbn9c1AyBzIsj3crlSRTbmWGy/D8iQeuT8Q+TDwx5plo2jxaVat&#xA;bx3FxdBmDmS7laaTZFjA5NvSiD6a5GUrZRjSF1Hyppt/fteyS3EU7qquYJWi5BQVALLRqfF9mtK7&#xA;0qTUiZApBgCbUbbyZZW92lwt7esI5RPHA8waJWBXYIVpSiU8eu9d8JyFAxhkGVtjBtS8m3OoW1kJ&#xA;YZ7e+sbMWUN5a3CRsooFZ1PHlvTYE09uuWCSKVU8qXUcunvH+kVGnkFUOo8hIA5ektQS1T19tsHE&#xA;rIfL1ndWmnNHdKqTSXV5cFFbkAtxdSzIK0G/GQVyJKUzwK7FVK5ura1t3uLqZILeIcpJpWCIo8WZ&#xA;qAYqoJrGkvLbQpe27TXqerZxiVC00YHLnEK1deO9Vw0qMwK7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWH/m9BNP+WnmGGCNpZXtGCRoCzE8hsANz&#xA;koc0F4FoGifmToPmTyv6NvLetbaLd3ugSGFiI3u9OllNu1duUc7EBG/iBl5IIKETp/nn87H8qalK&#xA;bq+k43VoLmb6ozXdtE/qiYx8oolIZlTYE8dulScBjG1T7y9+ZfnqK5tL67n1TVtIttdubG+RLJFu&#xA;mgNvGbdZII1qjcyWoDX9WAwC2kep+e/zv/Q/lmdbm8t1uLeaSW8FqW53KXk6cZljhkO0SIAnGm9c&#xA;IjHdWafm/wCc/Oel6xodhYajdWH17Sp5rxLC1W5c3CISvFHHNRzHEsD8I3yEIhJYhrfnj88ls9Fe&#xA;dtRsrmTT0ltVtbISC6uTclAJ9vhZoaMVp4fD8VcmIxRunmsa1+cB0vzbrn6VubSbR2tYLTSIrVGB&#xA;luHg9Zo2o3JY6uOjfPIgR2CoDzrrv51aBqVpp0WqajeNHaRzWF3aWCul7dTzc3SYDlx9NXKBd9lX&#xA;4RyrhiIlX0Pp0l5Jp9rJexrFePFG1zEpqqylQXUHwDVygskTirsVdirsVdirsVdirsVdiqnLPHGw&#xA;VqlyrMqgEkheoHvv0wE0zjAndtJVdiorUAMag0+KvfpXbEFBiQ3JIkUbSOaIgLMetANz0xJpEYkm&#xA;goWGoW19CZYDsDRlNKg+9CfoyMJiQ2bc2CWM1JbPqllBOsMkgDtWtN+NKU5U6VyynDnqIRlRKJ9S&#xA;PmE5DmRyCV3oNq0+nA22LpbLLxoq0LsQAPnlGbNwbD6i248fFz5Lm9WORY5FALCoINcY5ZcQjIc1&#xA;MBVgrsva3Yq7FXYq7FVskkcUbSysEjQFndiAqqBUkk9AMVS6PzR5akXlHq1k6/DutxER8Z4p0b9p&#xA;th44aKoS/wDOWk2up6fYRMl217cy2k0kM0HG3khQuwlDSK1e3EAkd+1SIqpaNJ5F0uLVNS0y9s4o&#xA;L26N1ql0LpXjNzLRaszOyoWoPhFB7Ym1TKLzH5elkEUWqWkkhaRQizxFi0K85RQN1Rd28B1wUVSq&#xA;5byBdeYNM12a9s31iGJ4dKuPrYBaOYlGEaCQJJyNRXicO9UqaN5k8urLJE2qWgliZ1ljM8QZWi/v&#xA;Aw5VBSvxV6YKKog6ppi2H6RN5ANP4h/rhkT0eJNA3qV40964KVDv5k8upBBO+q2awXRItZWuIgkp&#xA;U0IjYtRqHbbDRVA6H578s65rOpaPp14s19pbBLhKgcia1Me9XC0oxAoMJiQrIMirsVdirsVdirsV&#xA;diqGOoWS3y2JlAu2T1Fh3qV8fwyHiR4uG920YJ8HHXpurXqblZOLgOhrR12pv3r/AAyuJyCVEWO/&#xA;9f7EERIsc0JqdldXNvJClzJG0zAIyBQIwDyqaUbt45LJAkVbdp80YSBMQa+38e5R0LSvqNokbSM6&#xA;hmlMhZ0+MmhBj/lovc/RkcOPhFNmt1PiSJqunQ7e9EpaXj6jNPcTVs/T9KCzWhQhqF3kqtS21BvQ&#xA;CvjmUTHhqt3AFiV2vs7Cy06FxF+7jJ5OWOwH9mUxgIjZyMuaeUi9yorb6dqTreKSzRniCDSjKa7+&#xA;/wA8lGYI2cXUaOp3LmrwWNtbzTXJ+K4narzuF502CoCAvwigoP44SUY8IBJ5yPX8dEFoWtDV45SY&#xA;eCxGhJ6VO4pmPjmMg3Ds9ZpPAI35pkxRJkBBq4IViSem9N8NRjMbc3FsmJ8lK01K1uzcegWZbaRo&#xA;pHKkKXT7XEn7XE7GnfMmcTEWfe0xN8leKVJYxIleLdKimVY8gnHiHJnOJiaK/JsXYq7FWO/mH5Zu&#xA;/M/kzVdBtLgWtzfRBYpmqFDK6vxbiCeLceLUHQ5KJo2peCaP+VXnB9V1/QorexsNUtLbS7i3aETC&#xA;xke3ZW/vHUsXYfE+32q9t8uMxzY0yhfyR87XFybzULjSpLi41XUdTu4o5LoQkX8CpwX92HpzBr8V&#xA;eP7Vcj4gTST2/wDzj155j0SezNxphEWoW15baczSNBMsKyLIJ5liikIPMcQd6V3Bw+ILRSG8lflj&#xA;51urdr/SBZWOoaTresWs1vdLPHbGG8tILdngAXmUUc+NT4e+GUwtKuqf846+f7uysLQ3mlsLCxEM&#xA;Mis6MsyzPJT1PQMjqQ57rSvtuBlC0nyfkHq95rY1XWU0uaS51+bVNRRHmYPYzkMbdS0Sknly2O3v&#xA;g8RNI66/JfzPc/kxZ+Sn1G2TVrG6a6R0aRrWRTJIwiZiiuB+95fY+0MHGOK1pi11/wA46ecDoWm2&#xA;1q+n/XoJppZmuJ5JVj9cxjiqm39JowIySvAEMdiRtkvFFop6D5E/LTV/LXn/AFrV5IdNl0zUkDw3&#xA;USul3HIQPUREpwVHerN8XhkJSsJp6blaXYq7FXYq7FXYq7FUtmtodtQe1SPUgpjRxRm3PStN9h/t&#xA;ZTlEY+r+Jv02bJKPBIkQ5kdEBoWrXU121tIu5JZia1CovGnzqBlODKTKi7DW6WMYcQ/H43TO41CW&#xA;K4Maxco04h2rv8XhlebWShkoRuIq/i4WPAJRsncoySNJY3jcVRwVYVI2IodxmwcSQBFFj15q00Go&#xA;pZ25ogKxgMCCtSq09x8NfpzDyZiJ0Hb6fRR8HiPQfr/HwRGqaon1p9NeL1BIAo4kgktxoKjcHr+G&#xA;Sy5fVwtem0x4PEBqv2pd5Xt/qWtX2nvMxEPxRR/stWnxn/K4kZDTx4ZmLldoz8TDDIBz5/qZTJFH&#xA;LG0cih42FGVhUEfLMwi3SRkYmxzY55YeO01bU9LUcUWQyQj/ACQaU+4jMXAalKLt+0AZ4oZT3UWP&#xA;33nrzBpf5sx+XdTSIaBqFuG0t0jIZ3oC/NyW+JSrbbDj2rmdMAQ4hzB3dRhgZTMT1BrzI3IZ/Dbr&#xA;bIkNrFHFbIAFiQcAorvxCin0ZTOUzK+f3piI0r5Ni7FXYq7FVC8u4rS3a4mr6SFfUYfsqWALnwVa&#xA;8mPYYQLQTSRnz3oqW8Us0d1DJKjuLd4H5r6bMjKxXkgYMlKcvCvXJ+EWHihfN550KKJXczh35hIv&#xA;QkDlo2RSu4AG8i0qd/ox8Ir4oUbj8wvL0EojkFzyJUClvJvyYKD06fEMIxFByhVHnvy8YZJuc/CG&#xA;nqD6vOWWqNJuoSv2I2P0YPCKfFClF+YfluRgqtcVJFAbeWvE/tU41A+eHwpI8WKvd+d/L9rLLE8r&#xA;u8JXl6cbMCGT1AymlGXj3GAYyUnIA6787aHazSQSev6sTtG4EEnGqcuX7wgR9IyftdMRjJU5AFWw&#xA;83aPf3sVnbmYzyg0DQyIFonOjlgONV3FcBxkC0jICaTrIM3Yq7FXYq7FXYq7FXYqpRwBWMjnnKdi&#xA;9OgqdgN6dcphio8R3l3/AKmcp2KGweXefdT1Xy355s9UilkNlMqym3Bojcf3cyU6EkfFv3OXRhHn&#xA;W7qtbqssJx9R4O7o9EvdZ0S10dteupo006KEXBu2HSMiqkd6muwG5O2R8KMpXQt2Izem79Lzfy7/&#xA;AM5C6Nrfmy20SPSpobW9lEFtfPIpYuxonOEL8IY+DmmZEsJAtxoaoSlVJ3+ZU+t2+p6P+iysbXBc&#xA;NNwDMpiKsCSailCe2YmSMB6pdHIOfUGUcOI0J8/0/Yj42s0hn8x6vcm1hjaoYEgbbCg3r/KKCuYk&#xA;Ig/vJGnfZshjWDGL2eZeZfzv0+285wny7YTalcsyRskjCEM5Hp8BtITUU8MzsWk4/wB7fDFwsuv8&#xA;OH5Yx45eR79+7vTn/ldfmq41H9Ex6BHp+rRjlLbXDmfmrVo0bRmJSu3WpynUZZQAlGpRPVs0ejhk&#xA;JjPijOPTb797Tbyh5jn1fzYJLiD6re8mW4t96U9I7iu9PhrmLhmZZLdnq8UYaUwvly+bI/PFhYSm&#xA;xu5YUe6gdvQkZVZl26qSKgivbxOX6o0BTgdkiyQRYG/uLK8y3UOxV2KuxV2Kpfr0/oaTcyfW3sSF&#xA;AF3HF67xlmABEfF+W58MlEbsZHZhi6wtxZRs3mm8CXMirGRZGNhTiHSqqCCCeVSfGlRl3DvyaeLb&#xA;msTXoEumE/m24jUTSxMxs2CvQMzIleYUR0oGK126tWuPD/RXi/pI221mo9R/MtyzTSm3hEliAnqc&#xA;kNCI0B+EzohPIVFf9bAY+X2pEvP7FHT9Uggf1m823M9rZyKJoGtHLElWdldnR3oViYjwwmP9FRL+&#xA;k0+ruGYnzVdqqAlmOmuqqohO+8VDyb4wSfYeIeH+j9qOLz+xUTU0T63KPMtwqPOsCPJZciHj5FkQ&#xA;KoNPjA6AfDt1JwcPkni80HPrK0jlbzhcxpGW+sf7j5UJRqDiBw2NZYwD1679ckI/0ftYmX9L7Hfp&#xA;u19ZfQ833SwW6xJIPqUkpklWL0yVZlYsWqHZeJFd+uPD/RXi/pJ7a6L5kurMTxeYrqAz82IntoCy&#xA;8gVBAGy02Ipt9+VmUQeTYIyPVO9KsdStFkW8v2vw3Eo7xrGymlGA4bcT1Fd/fISIPIM4gjmUwyLJ&#xA;2KuxV2KuxV2KuxVhP5s6I2oeWTdRIXn05/WFBU+k3wyfQNmPyyUS4HaGLix2OcXlk2oXev8AkW48&#xA;mCQrdeqk+mEsAspVuZtmJoAWNSlTTlQGmWRNG3B02e4+Gfh+plPlDRNFt7CwXTrMQuRGnqSRLHce&#xA;ojAVmoAfUV138DmpyZJ+L6j1e8w4MP5f0DYx51v8fNl/nHVIvVZWp6VkrPI/vSrfcBh1EzKXCGrR&#xA;Y44sZyy7j8g8w89+eLN/y90sT3KfXEup/Uslceo1ORjPD7XEK9OXTMqejlMRjHk6vsztWIE8uT6j&#xA;e3x5fcw/8lo9AvNWu57uMvr0Jae2kZvg9N6K5Vf5lY9T2OX9p8cIAR+jk2di+HkySlIfvefz/H2s&#xA;v1fW9JT8z9ItDwF1FazrPOD8S+ovKONuw2Ut9OYWPBKWnlLpe36XYajW48eqiDQ2on38h+O9PYzE&#xA;fzE0MoPjJUs1NiKtTfvg0Udiejr+38sfFxQ/iBJ+B2/QzfzlKXvLaAblULU93NP+NchqzuA7TsiN&#xA;QlLz+7+1luZ7oXYq7FXYq7FXYq7FWiqkgkAlTVSexpTb78VbxV2KuxV2KrXRHUq6hlPVSKg4quxV&#xA;2KuxV2KuxV2KuxV2KuxV2KtEAggioOxBxV4d+ZPkr9A34vrJaaXdseCj/dUnUx/I9V+7tlkS6DW6&#xA;XwzY+kp15FudV1axE1seeo2soiecqHKtJUxyyADod6k9aEk1OYGbERkEg9P2Vrxl0ksUjU4g/HuY&#xA;5F+Y1nNq15oOsKYdbjLxy81HpyTb8k8A3iDt4eGDVaOcYnJHcfa5vY3aMc4jhyipcvI1+OSSaj5H&#xA;8s37tJLaCOVtzJEzIfuB4/hmFi7Tzw5Ssee7v83YWkyfwcP9Xb7OX2I3yJ5D0nRtZnvbeWWUtAYh&#xA;FNxYAMyknYL/AC5fl7SnnjwyAcTF2Lj0s/EgZb7boXUvJNk/m+bXDcyidZlkSKMKqD0wFCnYmlFo&#xA;cY9qzxw8OMRQa8/s5i1JM8kpevur9ILLrG9abUoLiXis1vVreQChVh/ZmLg1MwaHVy9f2TppEZZj&#xA;eHW6282Z6boup6jPDe3TkwNxcSSNyZ06jiN9jmZDBORuTrsuvwwhw497HTkzLNg6B2KuxV2KuxVj&#xA;f5i3d1aeTdQuLWZ7edPR4TRMUcVnQGjKQRUGmU6gkQNOz7GxxnqoRkARvsf6peX6Lqd/e6dLJdea&#xA;bu0vBMkaLJdyKqxtSshUks/XotKdTmDCRI3kfm9bqNPCEwI4YyjX80c+7yVo7m9N1JG/nC6WGOKM&#xA;iRbgkvNIjVRKzqOKyLTkxGxqaDfDZv6iwOOHCCMEbs/w9P8AS9346KvK6DmE+eJvVJQxyC4k9IIx&#xA;oebers2/QV9/hqwNn+ew4YVf5eNf1Rf+5/Hv2SnV9a1uyS0+reZLu8eaL1Lgx3MpVHJPwfar08d/&#xA;bK5TkP4i5eDS4pmXFijGjt6R+p7tpju+m2juxZ2hjLMTUklRUk5tY8g+f5xU5Ad5ROFqdirsVdir&#xA;sVdirsVdirsVdirsVdirsVY95/06K+8oanHIKmGFriM9w0I9Tb6FIwjm42rhxYpfN5z+SurG082m&#xA;yZqR6hC8dO3qR/vFP/Aqw+nJSdV2dkrJXe8e/O7TbjT/AM0vMEcyFfXuPrMRPRknUSAjYfzU+ebP&#xA;AbgHLzCplb+XnmbVzrNvpUs5ns5w4CyVYpwjZxwY7j7PTpmp7W0ePwzkAqQ/W9H7P9pZvHjhJ4oS&#xA;vn0oE7PVYpZInDxsVYdxnLg091KIIorfidiTUsakn8ScnjhxyA7y0avUDBhlkPKESfkF4UDOiw6P&#xA;Hj3A3fG+0faLV6sGM5VA/wAMdh+s/EvX/K9wJ/L1g4/ZhWP6Y/g/41yyXN22hnxYYny+7ZNcDlux&#xA;V2KuxV2KobUdOstSs5LK+iE1rLT1IiSAeLBhuCD1AyMogii24c08UhOBqQST/lXPkr/q1p/wcv8A&#xA;zVlf5eHc538s6r+efs/U7/lXPkr/AKtaf8HL/wA1Y/l4dy/yzqv55+z9Tv8AlXPkr/q1p/wcv/NW&#xA;P5eHcv8ALOq/nn7P1O/5Vz5K/wCrWn/By/8ANWP5eHcv8s6r+efs/UyGKNIo0ijHFEUKi+AAoBlw&#xA;dbKRJsr8UOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpN5xcp5T1gjqbOZfoZCD+vCGjUn93L3F4L5Wv&#xA;jYeZNLvK0EN1Eznp8HMBh/wNcsLzuCXDMHzeqfn5+XNh5n8rvqiII9Y0lecNyo3aCtZI38VFeY8N&#xA;6dTWWHMYHyd/q4+ji7ngHk/8ufN9vqNprpsfU0eB39W8jkjZVopU1Xl6g3Yfs49o5oywSA5/tcjs&#xA;D1anHIcrP3F6NnHvpydeVdOW9vLrn9iC0nck9KlCg/4lXM7s+F5b7nQ+0c60co/z9v0pSSAKk0Hj&#xA;nRPijP8A8ttcsLi0n0pbmN7y2Yy+gGBYRPTen+tWvzGRyYyNyHp+x5HwzE9CzXKnbOxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVIfPfP/B+rcK8jbsNutDSv4YRzcfV/&#xA;3Uvc+ftOjeXULaKMcneVFUDuSwAyZNB5yAJkAH0/qOq6aLd4pgZ45laN4wNirChBJp2zXZtfjgO9&#xA;7KGllPZ5Tp2nan5c8q61b3Kj6ne3Kppx5BiRVg7sF+zVEWle+DUagTwcQ/iZez2hnj1JjLlE2PP8&#xA;bMdzSPoaLh1t9L0TWzGeMlxaelGw6hnkWPb/AGMjHNz2EBLUCJ6/o3ec9p4n8txDofvecZ6C+cJb&#xA;Z6zqGl60up6dM0F3bycopF9tqEdwRsQeuYWWIlYPJyIEjk+m/wAvvP2n+b9J9eMCDUYKLe2dalW/&#xA;nTuUbsfozRZ8BxnydliyCQZXlDY7FXYqxj/Ftx/yzp95zN/KjvcL80e53+Lbj/lnT7zj+VHev5o9&#xA;zv8AFtx/yzp95x/KjvX80e53+Lbj/lnT7zj+VHev5o9zv8W3H/LOn3nH8qO9fzR7nf4tuP8AlnT7&#xA;zj+VHev5o9zv8W3H/LOn3nH8qO9fzR7nf4tuP+WdPvOP5Ud6/mj3O/xbcf8ALOn3nH8qO9fzR7nf&#xA;4tuP+WdPvOP5Ud6/mj3O/wAW3H/LOn3nH8qO9fzR7nf4tuP+WdPvOP5Ud6/mj3O/xbcf8s6fecfy&#xA;o71/NHud/i24/wCWdPvOP5Ud6/mj3O/xbcf8s6fecfyo71/NHud/i24/5Z0+84/lR3r+aPc7/Ftx&#xA;/wAs6fecfyo71/NHud/i24/5Z0+84/lR3r+aPc7/ABbcf8s6fecfyo71/NHud/i24/5Z0+84/lR3&#xA;r+aPc7/Ftx/yzp95x/KjvX80e5CHVrQ3H1j9HwrOOkqgBvv41zGzdm8Z+ohsx6wR/hFuuNa9YAGG&#xA;lN/tf2ZiZOwhL+P7P2uTDtUj+H7Uk8z202u2VvZNO1tbQO0pRRy5ORQE1p9nenzzM0vZwxQ4eK/g&#xA;67XZzqCD9LHx5IKig1KYDwA/5uy06CB5gfJrjqNREUMuQD+sf1rJPIaujqdQkpIAr1QGoBDU6+Kj&#xA;MjT4RikJBplGcjcpGXv3UB+W1rUVvnI7jgP65sfzZ7k8CO80/l/5b1ub6zaW40m5JrIbbeJ/EmI7&#xA;A+6kZiY5SjzNt0pg9KUPKXkaTyzrkGrWWpyM0VVlhMYCyxt9pGo3T+OHKeONFYT4TYek/wCLbj/l&#xA;nT7zmH+VHe3/AJo9zv8AFtx/yzp95x/KjvX80e53+Lbj/lnT7zj+VHev5o9yQ5luK7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqlvmOKCX&#xA;RrhJ0uZIzwJWyBNxUSKQYwN9jufbAWUebFUc2kKXcEXmO4k5kx20rPQgOq0ZaEKtJqgU6L7ZH5tn&#xA;PuWrZqoCg+ZZJ1jBZpGajgoJPTdqcGpz4UpseVO5wfNb9yjbqk91DaPdeZInh3uTzKorvUqrEKWo&#xA;TFRe3xDx2fmp+CteOs4nnp5kti9I1KghkNxM6gRg9loOjfZ498fmo+CyOziEJm5eZ1ZZnX0l5ByH&#xA;IetSqnifUr12NfDH5rf9Vu94OR6h8zRq0cUaqgrxYKTy35guPTFTueXjXH5qP81q6cTTmdYvM6TO&#xA;CFKpsjM+/FTsBvQ0NOIHscfmo/zXXzW2n+tDOfMsisWt1C0kSQmdDyRh8JMh6VNSvLbH5qN+519D&#xA;cepZGIeZETgOUMTkKqhTCFcgGjUj5nruR/NUPzUfBW9FZ5eYPmaHjGZFBO3JmSKo5c/jA+Lj0py2&#xA;w/NH+lZXoVys+nR8YruIRBU/09Ss7fArcm5dftUPvXJBrkN0wwodirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdiqF1SzlvdPntYrmSzllXilzCaOh61GApBopXceUxPF6b6tqABdZJOMy&#xA;jnxH2W+Dp0+7wrgpkJ+SpH5akVnLavqL8wQQZloK8aFaJtTj+JxpHF5KD+UZWlVhrWoiOvKRPVX4&#xA;mAoDUKPAVrXGk8fkutPKb27xuda1Ob06njJOvFmZizFgEANa/wCe2NKZ+QXQeV7iK5glfWr+eKEq&#xA;zQyyIQ7I5ccqKNux+XXGl4/Jp/KZegbWdSMYIPD11PQCm5Sv7NcaXj8gjNL0ZrCaWU391eGVVUrc&#xA;yBwpWu6gBaVrhAYmVplhQ7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FVO4SZ4WWGT0pD9l6Vp9BwKHIkwary8x4cQMVQV9ZavLDKtrqHoSt/dOYlbhv4H7VPxxSCExwod&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqZ/wCG9c/5&#xA;ZG+9f65T48O9t8Cfc7/Deuf8sjfev9cfHh3r4E+53+G9c/5ZG+9f64+PDvXwJ9zv8N65/wAsjfev&#xA;9cfHh3r4E+53+G9c/wCWRvvX+uPjw718Cfc7/Deuf8sjfev9cfHh3r4E+53+G9c/5ZG+9f64+PDv&#xA;XwJ9zv8ADeuf8sjfev8AXHx4d6+BPud/hvXP+WRvvX+uPjw718Cfc7/Deuf8sjfev9cfHh3r4E+5&#xA;3+G9c/5ZG+9f64+PDvXwJ9zv8N65/wAsjfev9cfHh3r4E+53+G9c/wCWRvvX+uPjw718Cfc7/Deu&#xA;f8sjfev9cfHh3r4E+53+G9c/5ZG+9f64+PDvXwJ9zv8ADeuf8sjfev8AXHx4d6+BPud/hvXP+WRv&#xA;vX+uPjw718Cfc7/Deuf8sjfev9cfHh3r4E+53+G9c/5ZG+9f64+PDvXwJ9zv8N65/wAsjfev9cfH&#xA;h3r4E+53+G9c/wCWRvvX+uPjw718Cfc7/Deuf8sjfev9cfHh3r4E+53+G9c/5ZG+9f64+PDvXwJ9&#xA;zv8ADeuf8sjfev8AXHx4d6+BPud/hvXP+WRvvX+uPjw718Cfc7/Deuf8sjfev9cfHh3r4E+53+G9&#xA;c/5ZG+9f64+PDvXwJ9zv8N65/wAsjfev9cfHh3r4E+53+G9c/wCWRvvX+uPjw718Cfc7/Deuf8sj&#xA;fev9cfHh3r4E+53+G9c/5ZG+9f64+PDvXwJ9zv8ADeuf8sjfev8AXHx4d6+BPuf/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:D5A75AADA190EA11B919ED7EADC366B3</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:D5A75AADA190EA11B919ED7EADC366B3</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:859bc250-5973-da43-8788-55443cf51876</stRef:instanceID>
            <stRef:documentID>xmp.did:859bc250-5973-da43-8788-55443cf51876</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c37189fe-6080-5043-8e66-852840c9c917</stEvt:instanceID>
                  <stEvt:when>2020-02-18T22:17:46+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4ac1f816-8f3a-204d-be3a-423fdeea8630</stEvt:instanceID>
                  <stEvt:when>2020-03-23T22:12:20+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:cddc090d-00c4-494b-a8a7-50b6fa11e086</stEvt:instanceID>
                  <stEvt:when>2020-04-04T11:59:14+06:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge 2019 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:859bc250-5973-da43-8788-55443cf51876</stEvt:instanceID>
                  <stEvt:when>2020-04-19T19:46:01+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D5A75AADA190EA11B919ED7EADC366B3</stEvt:instanceID>
                  <stEvt:when>2020-05-07T23:31:45+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>3600.000000</stDim:w>
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=204 B=127</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>126</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=70 G=110 B=182</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>70</xmpG:red>
                           <xmpG:green>110</xmpG:green>
                           <xmpG:blue>182</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=239 G=239 B=239</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>239</xmpG:red>
                           <xmpG:green>239</xmpG:green>
                           <xmpG:blue>239</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=244 G=140 B=127</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>244</xmpG:red>
                           <xmpG:green>140</xmpG:green>
                           <xmpG:blue>126</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=156 B=141</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>140</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=183 G=87 B=66</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>182</xmpG:red>
                           <xmpG:green>86</xmpG:green>
                           <xmpG:blue>66</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=244 G=116 B=88</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>244</xmpG:red>
                           <xmpG:green>116</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=164 B=145</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>163</xmpG:green>
                           <xmpG:blue>144</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=250 G=224 B=178</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>223</xmpG:green>
                           <xmpG:blue>177</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=204 B=127 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>246</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>126</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=150 G=217 B=201 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>149</xmpG:red>
                           <xmpG:green>216</xmpG:green>
                           <xmpG:blue>200</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=80 G=191 B=165</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>80</xmpG:red>
                           <xmpG:green>191</xmpG:green>
                           <xmpG:blue>165</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=60 G=143 B=124 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>59</xmpG:red>
                           <xmpG:green>142</xmpG:green>
                           <xmpG:blue>124</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=24 G=70 B=85 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>24</xmpG:red>
                           <xmpG:green>70</xmpG:green>
                           <xmpG:blue>84</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=19 G=55 B=91</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>19</xmpG:red>
                           <xmpG:green>54</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=53 G=83 B=137 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>52</xmpG:red>
                           <xmpG:green>82</xmpG:green>
                           <xmpG:blue>137</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=70 G=110 B=182 2</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>70</xmpG:red>
                           <xmpG:green>110</xmpG:green>
                           <xmpG:blue>182</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
3600 2000 li
3600 0 li
cp
clp
3600 2000 mo
0 2000 li
0 0 li
3600 0 li
3600 2000 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.945098 .945098 .945098 rgb
f
2117.98 114.014 mo
2117.98 147.596 li
2112.52 147.596 li
2112.52 133.299 li
2094.81 133.299 li
2094.81 147.596 li
2089.34 147.596 li
2089.34 114.014 li
2094.81 114.014 li
2094.81 128.262 li
2112.52 128.262 li
2112.52 114.014 li
2117.98 114.014 li
cp
.886275 .278431 .294118 rgb
f
2135.75 128.646 mo
2131.44 128.646 2128.46 131.572 2128.46 136.082 cv
2128.46 140.592 2131.44 143.518 2135.75 143.518 cv
2140.02 143.518 2143 140.592 2143 136.082 cv
2143 131.572 2140.02 128.646 2135.75 128.646 cv
cp
2135.75 123.945 mo
2142.23 123.945 2148.23 128.119 2148.23 136.082 cv
2148.23 144.045 2142.23 148.219 2135.75 148.219 cv
2129.32 148.219 2123.28 144.045 2123.28 136.082 cv
2123.28 128.119 2129.32 123.945 2135.75 123.945 cv
cp
f
2153.23 147.596 mo
2153.23 124.568 li
2157.79 124.568 li
2157.79 127.447 li
2159.04 126.055 2161.72 123.945 2165.46 123.945 cv
2168.92 123.945 2171.32 125.385 2172.66 127.639 cv
2174.68 125.623 2177.36 123.945 2180.72 123.945 cv
2186.81 123.945 2189.45 128.455 2189.45 133.203 cv
2189.45 147.596 li
2184.32 147.596 li
2184.32 133.348 li
2184.32 130.373 2182.54 128.502 2179.76 128.502 cv
2177.22 128.502 2175.25 130.182 2174.05 131.621 cv
2174.1 132.148 2174.15 132.676 2174.15 133.203 cv
2174.15 147.596 li
2169.02 147.596 li
2169.02 133.348 li
2169.02 130.373 2167.24 128.502 2164.46 128.502 cv
2161.68 128.502 2159.57 130.518 2158.37 132.053 cv
2158.37 147.596 li
2153.23 147.596 li
cp
f
2206.12 128.215 mo
2202.67 128.215 2199.55 130.277 2199.36 134.162 cv
2212.12 134.162 li
2212.41 132.148 2211.16 128.215 2206.12 128.215 cv
cp
2205.88 123.945 mo
2215.05 123.945 2218.21 131.332 2216.73 138.002 cv
2199.41 138.002 li
2199.98 142.127 2204.01 143.854 2208.23 143.854 cv
2211.02 143.854 2213.56 143.182 2215.52 142.223 cv
2215.52 146.637 li
2213.41 147.645 2210.49 148.219 2207.27 148.219 cv
2200.22 148.219 2194.23 144.189 2194.23 136.082 cv
2194.23 127.734 2200.56 123.945 2205.88 123.945 cv
cp
f
2329.69 135.555 mo
2342.74 135.555 li
2336.84 121.211 li
2336.65 120.682 2336.46 120.154 2336.21 119.34 cv
2335.98 120.154 2335.78 120.682 2335.59 121.211 cv
2329.69 135.555 li
cp
2319.04 147.596 mo
2333.24 114.014 li
2339.24 114.014 li
2353.39 147.596 li
2347.63 147.596 li
2344.66 140.352 li
2327.82 140.352 li
2324.84 147.596 li
2319.04 147.596 li
cp
.156863 .317647 .45098 rgb
f
2369.38 128.455 mo
2365.84 128.455 2363.15 130.758 2362.04 133.252 cv
2362.04 138.865 li
2363.15 141.406 2365.84 143.709 2369.38 143.709 cv
2373.56 143.709 2376.53 140.592 2376.53 136.082 cv
2376.53 131.572 2373.56 128.455 2369.38 128.455 cv
cp
2362.04 114.014 mo
2362.04 127.543 li
2363.62 125.768 2366.31 123.945 2370.34 123.945 cv
2377.25 123.945 2381.76 129.461 2381.76 136.082 cv
2381.76 142.703 2377.25 148.219 2370.34 148.219 cv
2366.02 148.219 2363.29 146.205 2361.47 143.95 cv
2361.47 147.596 li
2356.91 147.596 li
2356.91 114.014 li
2362.04 114.014 li
cp
f
2397.8 128.646 mo
2393.48 128.646 2390.51 131.572 2390.51 136.082 cv
2390.51 140.592 2393.48 143.518 2397.8 143.518 cv
2402.07 143.518 2405.04 140.592 2405.04 136.082 cv
2405.04 131.572 2402.07 128.646 2397.8 128.646 cv
cp
2397.8 123.945 mo
2404.28 123.945 2410.27 128.119 2410.27 136.082 cv
2410.27 144.045 2404.28 148.219 2397.8 148.219 cv
2391.37 148.219 2385.33 144.045 2385.33 136.082 cv
2385.33 128.119 2391.37 123.945 2397.8 123.945 cv
cp
f
2437.11 124.568 mo
2437.11 147.596 li
2432.55 147.596 li
2432.55 144.43 li
2430.87 146.443 2428.04 148.219 2424.53 148.219 cv
2418.44 148.219 2415.04 144.285 2415.04 138.816 cv
2415.04 124.568 li
2420.17 124.568 li
2420.17 138.145 li
2420.17 141.887 2422.14 143.662 2425.54 143.662 cv
2428.47 143.662 2430.68 141.695 2431.97 139.825 cv
2431.97 124.568 li
2437.11 124.568 li
cp
f
2450.31 116.365 mo
2450.31 124.568 li
2458.66 124.568 li
2458.66 129.078 li
2450.31 129.078 li
2450.31 139.633 li
2450.31 142.654 2451.71 143.662 2454.68 143.662 cv
2456.36 143.662 2457.89 143.326 2459.33 142.75 cv
2459.33 147.164 li
2457.6 147.787 2455.4 148.172 2453.14 148.172 cv
2448.68 148.172 2445.23 145.965 2445.23 140.592 cv
2445.23 129.078 li
2441.1 129.078 li
2441.1 124.568 li
2445.23 124.568 li
2445.23 117.611 li
2450.31 116.365 li
cp
f
2574.41 113.391 mo
2578.25 113.391 2582.18 114.35 2584.91 115.934 cv
2584.91 121.162 li
2582.18 119.34 2578.44 118.332 2574.84 118.379 cv
2570.76 118.379 2568.17 119.581 2568.17 122.457 cv
2568.17 129.701 2587.36 126.775 2587.36 138.768 cv
2587.36 145.82 2581.36 148.268 2574.65 148.219 cv
2570.14 148.219 2566.06 147.164 2562.75 145.293 cv
2562.75 139.92 li
2566.39 142.271 2570.43 143.23 2574.26 143.23 cv
2578.58 143.23 2581.8 142.223 2581.8 139.057 cv
2581.8 131.285 2562.6 134.451 2562.6 122.553 cv
2562.6 116.365 2568.07 113.391 2574.41 113.391 cv
cp
f
2602.49 128.215 mo
2599.03 128.215 2595.91 130.277 2595.72 134.162 cv
2608.48 134.162 li
2608.77 132.148 2607.52 128.215 2602.49 128.215 cv
cp
2602.25 123.945 mo
2611.41 123.945 2614.58 131.332 2613.09 138.002 cv
2595.77 138.002 li
2596.35 142.127 2600.37 143.854 2604.6 143.854 cv
2607.38 143.854 2609.93 143.182 2611.89 142.223 cv
2611.89 146.637 li
2609.78 147.645 2606.86 148.219 2603.64 148.219 cv
2596.59 148.219 2590.59 144.189 2590.59 136.082 cv
2590.59 127.734 2596.92 123.945 2602.25 123.945 cv
cp
f
2632.58 124.088 mo
2632.58 129.125 li
2628.46 128.551 2624.86 130.373 2623.47 133.635 cv
2623.47 147.596 li
2618.33 147.596 li
2618.33 124.568 li
2622.89 124.568 li
2622.89 128.357 li
2624.66 125.527 2628.41 123.705 2632.58 124.088 cv
cp
f
2658.98 124.568 mo
2649.09 147.596 li
2643.67 147.596 li
2633.84 124.568 li
2639.4 124.568 li
2646.41 142.031 li
2653.36 124.568 li
2658.98 124.568 li
cp
f
2662.83 147.596 mo
2662.83 124.568 li
2667.96 124.568 li
2667.96 147.596 li
2662.83 147.596 li
cp
2665.42 120.154 mo
2663.74 120.154 2662.25 119.196 2662.25 117.084 cv
2662.25 115.07 2663.74 114.063 2665.42 114.063 cv
2667.1 114.063 2668.54 115.07 2668.54 117.084 cv
2668.54 119.196 2667.1 120.154 2665.42 120.154 cv
cp
f
2685.77 123.945 mo
2688.36 123.945 2690.85 124.52 2692.87 125.721 cv
2692.87 130.422 li
2691.19 129.223 2688.84 128.502 2686.49 128.502 cv
2682.41 128.502 2678.28 130.66 2678.28 136.082 cv
2678.28 141.311 2682.27 143.662 2686.39 143.662 cv
2688.84 143.662 2691.28 142.941 2693.1 141.887 cv
2693.1 146.637 li
2690.9 147.691 2688.41 148.219 2685.48 148.219 cv
2679.34 148.219 2673.05 144.477 2673.05 136.273 cv
2673.05 127.688 2679.62 123.945 2685.77 123.945 cv
cp
f
2708.33 128.215 mo
2704.87 128.215 2701.75 130.277 2701.56 134.162 cv
2714.32 134.162 li
2714.61 132.148 2713.36 128.215 2708.33 128.215 cv
cp
2708.09 123.945 mo
2717.25 123.945 2720.41 131.332 2718.93 138.002 cv
2701.61 138.002 li
2702.19 142.127 2706.21 143.854 2710.44 143.854 cv
2713.22 143.854 2715.76 143.182 2717.73 142.223 cv
2717.73 146.637 li
2715.62 147.645 2712.69 148.219 2709.48 148.219 cv
2702.43 148.219 2696.43 144.189 2696.43 136.082 cv
2696.43 127.734 2702.76 123.945 2708.09 123.945 cv
cp
f
2732.14 123.945 mo
2735.3 123.945 2738.18 124.76 2740.44 125.912 cv
2740.44 130.422 li
2738.52 129.125 2735.21 128.166 2732.47 128.166 cv
2730.41 128.166 2728.2 128.791 2728.2 130.66 cv
2728.2 135.123 2742.07 133.061 2742.07 141.456 cv
2742.07 146.541 2737.36 148.219 2732.14 148.219 cv
2728.78 148.219 2725.37 147.404 2723.12 146.012 cv
2723.12 141.456 li
2725.52 143.039 2729.02 143.902 2731.89 143.902 cv
2734.77 143.902 2736.89 143.422 2736.89 141.551 cv
2736.89 137.281 2722.97 139.057 2722.97 130.805 cv
2722.97 125.768 2727.58 123.945 2732.14 123.945 cv
cp
f
2863.33 113.391 mo
2866.69 113.391 2870 114.159 2872.87 115.598 cv
2872.87 120.922 li
2870.52 119.291 2867.41 118.428 2864.24 118.428 cv
2857.81 118.428 2851.14 122.217 2851.1 131.092 cv
2851.1 139.344 2857.91 143.182 2864.34 143.182 cv
2867.79 143.182 2870.91 142.271 2873.12 140.592 cv
2873.12 146.012 li
2870.28 147.404 2866.93 148.219 2863.38 148.219 cv
2854.69 148.219 2845.48 142.559 2845.53 131.092 cv
2845.53 119.146 2854.5 113.391 2863.33 113.391 cv
cp
f
2888.73 128.646 mo
2884.41 128.646 2881.43 131.572 2881.43 136.082 cv
2881.43 140.592 2884.41 143.518 2888.73 143.518 cv
2892.99 143.518 2895.97 140.592 2895.97 136.082 cv
2895.97 131.572 2892.99 128.646 2888.73 128.646 cv
cp
2888.73 123.945 mo
2895.2 123.945 2901.2 128.119 2901.2 136.082 cv
2901.2 144.045 2895.2 148.219 2888.73 148.219 cv
2882.3 148.219 2876.25 144.045 2876.25 136.082 cv
2876.25 128.119 2882.3 123.945 2888.73 123.945 cv
cp
f
2918.77 123.945 mo
2924.57 123.945 2928.27 127.879 2928.27 133.348 cv
2928.27 147.596 li
2923.14 147.596 li
2923.14 134.02 li
2923.14 130.277 2920.84 128.502 2917.77 128.502 cv
2914.84 128.502 2912.63 130.469 2911.33 132.34 cv
2911.33 147.596 li
2906.2 147.596 li
2906.2 124.568 li
2910.76 124.568 li
2910.76 127.734 li
2912.44 125.721 2915.27 123.945 2918.77 123.945 cv
cp
f
2941 116.365 mo
2941 124.568 li
2949.34 124.568 li
2949.34 129.078 li
2941 129.078 li
2941 139.633 li
2941 142.654 2942.39 143.662 2945.36 143.662 cv
2947.04 143.662 2948.58 143.326 2950.02 142.75 cv
2950.02 147.164 li
2948.29 147.787 2946.08 148.172 2943.83 148.172 cv
2939.37 148.172 2935.91 145.965 2935.91 140.592 cv
2935.91 129.078 li
2931.79 129.078 li
2931.79 124.568 li
2935.91 124.568 li
2935.91 117.611 li
2941 116.365 li
cp
f
2957.7 140.832 mo
2957.7 143.086 2959.72 144.238 2962.02 144.238 cv
2964.47 144.238 2966.87 143.326 2968.69 141.504 cv
2968.69 137.617 li
2967.3 137.33 2965.33 137.041 2963.7 137.041 cv
2960.77 137.041 2957.7 137.953 2957.7 140.832 cv
cp
2975.5 143.95 mo
2976.03 143.95 2976.56 143.807 2977.04 143.662 cv
2977.04 147.355 li
2976.08 147.74 2974.93 147.932 2973.77 147.932 cv
2971.66 147.932 2969.98 147.115 2969.17 145.244 cv
2966.91 147.068 2964.09 148.219 2960.49 148.219 cv
2956.31 148.219 2952.43 145.916 2952.43 141.168 cv
2952.43 135.266 2957.89 133.443 2962.69 133.443 cv
2964.66 133.443 2966.87 133.73 2968.69 134.115 cv
2968.69 133.299 li
2968.69 130.422 2966.58 128.406 2962.65 128.406 cv
2959.24 128.406 2956.41 129.27 2954.34 130.182 cv
2954.34 125.48 li
2956.17 124.855 2959.48 123.945 2963.17 123.945 cv
2969.69 123.945 2973.82 127.063 2973.82 134.02 cv
2973.82 142.271 li
2973.82 143.566 2974.59 143.95 2975.5 143.95 cv
cp
f
2991.87 123.945 mo
2994.46 123.945 2996.96 124.52 2998.98 125.721 cv
2998.98 130.422 li
2997.3 129.223 2994.94 128.502 2992.59 128.502 cv
2988.52 128.502 2984.39 130.66 2984.39 136.082 cv
2984.39 141.311 2988.37 143.662 2992.5 143.662 cv
2994.94 143.662 2997.39 142.941 2999.21 141.887 cv
2999.21 146.637 li
2997.01 147.691 2994.51 148.219 2991.59 148.219 cv
2985.44 148.219 2979.16 144.477 2979.16 136.273 cv
2979.16 127.688 2985.73 123.945 2991.87 123.945 cv
cp
f
3010.98 116.365 mo
3010.98 124.568 li
3019.33 124.568 li
3019.33 129.078 li
3010.98 129.078 li
3010.98 139.633 li
3010.98 142.654 3012.37 143.662 3015.34 143.662 cv
3017.02 143.662 3018.56 143.326 3020 142.75 cv
3020 147.164 li
3018.27 147.787 3016.07 148.172 3013.81 148.172 cv
3009.35 148.172 3005.89 145.965 3005.89 140.592 cv
3005.89 129.078 li
3001.77 129.078 li
3001.77 124.568 li
3005.89 124.568 li
3005.89 117.611 li
3010.98 116.365 li
cp
f
3210.2 113.391 mo
3214.04 113.391 3217.97 114.35 3220.71 115.934 cv
3220.71 121.162 li
3217.97 119.34 3214.23 118.332 3210.63 118.379 cv
3206.55 118.379 3203.96 119.581 3203.96 122.457 cv
3203.96 129.701 3223.16 126.775 3223.16 138.768 cv
3223.16 145.82 3217.16 148.268 3210.44 148.219 cv
3205.93 148.219 3201.85 147.164 3198.54 145.293 cv
3198.54 139.92 li
3202.19 142.271 3206.22 143.23 3210.06 143.23 cv
3214.37 143.23 3217.59 142.223 3217.59 139.057 cv
3217.59 131.285 3198.4 134.451 3198.4 122.553 cv
3198.4 116.365 3203.87 113.391 3210.2 113.391 cv
cp
.168627 .180392 .286275 rgb
f
3227.92 147.596 mo
3227.92 124.568 li
3233.05 124.568 li
3233.05 147.596 li
3227.92 147.596 li
cp
3230.51 120.154 mo
3228.83 120.154 3227.34 119.196 3227.34 117.084 cv
3227.34 115.07 3228.83 114.063 3230.51 114.063 cv
3232.19 114.063 3233.63 115.07 3233.63 117.084 cv
3233.63 119.196 3232.19 120.154 3230.51 120.154 cv
cp
f
3250.47 128.455 mo
3246.35 128.455 3243.32 131.572 3243.32 136.082 cv
3243.32 140.592 3246.35 143.709 3250.47 143.709 cv
3254.07 143.709 3256.71 141.551 3257.81 139.201 cv
3257.81 133.252 li
3256.71 130.758 3254.07 128.455 3250.47 128.455 cv
cp
3249.56 123.945 mo
3253.88 123.945 3256.61 125.959 3258.39 128.166 cv
3258.39 124.568 li
3262.99 124.568 li
3262.99 147.309 li
3262.99 155.607 3256.66 158.773 3250.09 158.773 cv
3246.59 158.773 3243.32 158.006 3240.59 156.615 cv
3240.59 151.914 li
3243.23 153.449 3246.3 154.264 3249.42 154.264 cv
3253.98 154.264 3257.86 152.633 3257.86 147.451 cv
3257.86 144.525 li
3256.28 146.396 3253.59 148.219 3249.56 148.219 cv
3242.6 148.219 3238.14 142.703 3238.14 136.082 cv
3238.14 129.461 3242.6 123.945 3249.56 123.945 cv
cp
f
3282.01 123.945 mo
3287.81 123.945 3291.51 127.879 3291.51 133.348 cv
3291.51 147.596 li
3286.37 147.596 li
3286.37 134.02 li
3286.37 130.277 3284.07 128.502 3281 128.502 cv
3278.07 128.502 3275.87 130.469 3274.57 132.34 cv
3274.57 147.596 li
3269.44 147.596 li
3269.44 124.568 li
3274 124.568 li
3274 127.734 li
3275.68 125.721 3278.51 123.945 3282.01 123.945 cv
cp
f
3330.82 124.568 mo
3330.82 147.596 li
3326.26 147.596 li
3326.26 144.43 li
3324.58 146.443 3321.75 148.219 3318.25 148.219 cv
3312.16 148.219 3308.75 144.285 3308.75 138.816 cv
3308.75 124.568 li
3313.88 124.568 li
3313.88 138.145 li
3313.88 141.887 3315.85 143.662 3319.26 143.662 cv
3322.18 143.662 3324.39 141.695 3325.68 139.825 cv
3325.68 124.568 li
3330.82 124.568 li
cp
f
3349.73 128.455 mo
3346.18 128.455 3343.5 130.758 3342.39 133.252 cv
3342.39 138.865 li
3343.5 141.406 3346.18 143.709 3349.73 143.709 cv
3353.91 143.709 3356.88 140.592 3356.88 136.082 cv
3356.88 131.572 3353.91 128.455 3349.73 128.455 cv
cp
3350.69 123.945 mo
3357.6 123.945 3362.11 129.461 3362.11 136.082 cv
3362.11 142.703 3357.6 148.219 3350.69 148.219 cv
3346.66 148.219 3343.98 146.443 3342.39 144.621 cv
3342.39 158.15 li
3337.26 158.15 li
3337.26 124.568 li
3341.82 124.568 li
3341.82 128.166 li
3343.64 125.959 3346.37 123.945 3350.69 123.945 cv
cp
f
3400 83.3438 mo
3160 83.3438 li
3160 183.344 li
3400 183.344 li
3400 83.3438 li
cp
3396 87.3438 mo
3396 179.344 li
3164 179.344 li
3164 87.3438 li
3396 87.3438 li
cp
f
320 128.463 mo
320 161.6 293.136 188.463 260 188.463 cv
226.863 188.463 200 161.6 200 128.463 cv
200 95.3262 226.863 68.4629 260 68.4629 cv
293.136 68.4629 320 95.3262 320 128.463 cv
cp
f
255.177 99.4634 mo
255.177 137.676 li
278.035 137.676 li
278.035 149.463 li
241.964 149.463 li
241.964 99.4634 li
255.177 99.4634 li
cp
.945098 .945098 .945098 rgb
f
3600 2000 mo
0 2000 li
0 1400 li
3600 1400 li
3600 2000 li
.631373 .772549 .886275 rgb
f
300 1845.64 mo
208.019 1845.64 li
205.873 1843.64 li
208.03 1841.64 li
300 1841.64 li
300 1845.64 li
.380392 .454902 .556863 rgb
f
217.591 1860 mo
199.999 1843.64 li
217.591 1827.28 li
220.32 1830.21 li
208.03 1841.64 li
205.873 1843.64 li
208.019 1845.64 li
220.32 1857.07 li
217.591 1860 li
f
350 1841.64 mo
350 1845.64 li
445.681 1845.64 li
445.681 1841.64 li
350 1841.64 li
cp
.133333 .141176 .231373 rgb
f
432.408 1827.29 mo
429.68 1830.21 li
444.127 1843.64 li
429.68 1857.07 li
432.408 1860 li
450 1843.64 li
432.408 1827.29 li
cp
f
200 1026.66 mo
680 1026.66 li
680 1146.66 li
200 1146.66 li
200 1026.66 li
cp
.886275 .278431 .294118 rgb
f
297.039 1060.01 mo
301.839 1060.01 306.58 1061.04 310.613 1062.96 cv
310.613 1070.07 li
307.219 1067.89 302.676 1066.73 298.064 1066.73 cv
289.291 1066.73 280.455 1071.54 280.455 1083.25 cv
280.455 1096.06 289.742 1099.84 297.869 1099.84 cv
300.367 1099.84 302.801 1099.39 304.595 1098.55 cv
304.595 1081.59 li
311.701 1081.59 li
311.701 1103.48 li
307.412 1105.41 302.355 1106.5 297.421 1106.5 cv
285.001 1106.5 272.966 1099.96 272.966 1083.25 cv
272.966 1067.44 285.001 1060.01 297.039 1060.01 cv
cp
1 1 1 rgb
f
333.58 1079.8 mo
328.969 1079.8 324.809 1082.55 324.551 1087.73 cv
341.583 1087.73 li
341.966 1085.05 340.301 1079.8 333.58 1079.8 cv
cp
333.258 1074.1 mo
345.486 1074.1 349.714 1083.96 347.73 1092.86 cv
324.617 1092.86 li
325.383 1098.36 330.763 1100.67 336.398 1100.67 cv
340.111 1100.67 343.502 1099.77 346.128 1098.49 cv
346.128 1104.38 li
343.313 1105.73 339.406 1106.5 335.117 1106.5 cv
325.703 1106.5 317.701 1101.12 317.701 1090.3 cv
317.701 1079.16 326.15 1074.1 333.258 1074.1 cv
cp
f
363.723 1063.98 mo
363.723 1074.93 li
374.863 1074.93 li
374.863 1080.95 li
363.723 1080.95 li
363.723 1095.04 li
363.723 1099.07 365.578 1100.41 369.547 1100.41 cv
371.787 1100.41 373.835 1099.96 375.757 1099.2 cv
375.757 1105.09 li
373.451 1105.92 370.507 1106.43 367.5 1106.43 cv
361.542 1106.43 356.933 1103.48 356.933 1096.32 cv
356.933 1080.95 li
351.429 1080.95 li
351.429 1074.93 li
356.933 1074.93 li
356.933 1065.65 li
363.723 1063.98 li
cp
f
407.048 1074.1 mo
411.273 1074.1 415.117 1075.19 418.123 1076.72 cv
418.123 1082.74 li
415.564 1081.01 411.146 1079.73 407.496 1079.73 cv
404.744 1079.73 401.798 1080.57 401.798 1083.06 cv
401.798 1089.02 420.3 1086.26 420.3 1097.47 cv
420.3 1104.25 414.027 1106.5 407.048 1106.5 cv
402.566 1106.5 398.019 1105.41 395.012 1103.55 cv
395.012 1097.47 li
398.21 1099.58 402.884 1100.73 406.728 1100.73 cv
410.568 1100.73 413.384 1100.09 413.384 1097.6 cv
413.384 1091.9 394.818 1094.27 394.818 1083.25 cv
394.818 1076.53 400.966 1074.1 407.048 1074.1 cv
cp
f
435.527 1063.98 mo
435.527 1074.93 li
446.666 1074.93 li
446.666 1080.95 li
435.527 1080.95 li
435.527 1095.04 li
435.527 1099.07 437.383 1100.41 441.351 1100.41 cv
443.594 1100.41 445.645 1099.96 447.564 1099.2 cv
447.564 1105.09 li
445.257 1105.92 442.314 1106.43 439.303 1106.43 cv
433.349 1106.43 428.738 1103.48 428.738 1096.32 cv
428.738 1080.95 li
423.232 1080.95 li
423.232 1074.93 li
428.738 1074.93 li
428.738 1065.65 li
435.527 1063.98 li
cp
f
457.796 1096.64 mo
457.796 1099.64 460.482 1101.18 463.558 1101.18 cv
466.824 1101.18 470.023 1099.96 472.457 1097.53 cv
472.457 1092.35 li
470.599 1091.96 467.976 1091.58 465.8 1091.58 cv
461.894 1091.58 457.796 1092.79 457.796 1096.64 cv
cp
481.55 1100.8 mo
482.251 1100.8 482.957 1100.61 483.598 1100.41 cv
483.598 1105.34 li
482.316 1105.86 480.781 1106.11 479.246 1106.11 cv
476.428 1106.11 474.185 1105.02 473.098 1102.53 cv
470.089 1104.96 466.313 1106.5 461.507 1106.5 cv
455.938 1106.5 450.751 1103.42 450.751 1097.08 cv
450.751 1089.21 458.051 1086.78 464.453 1086.78 cv
467.08 1086.78 470.023 1087.16 472.457 1087.67 cv
472.457 1086.58 li
472.457 1082.74 469.64 1080.05 464.39 1080.05 cv
459.845 1080.05 456.066 1081.21 453.314 1082.42 cv
453.314 1076.15 li
455.748 1075.32 460.166 1074.1 465.096 1074.1 cv
473.8 1074.1 479.308 1078.26 479.308 1087.54 cv
479.308 1098.55 li
479.308 1100.29 480.334 1100.8 481.55 1100.8 cv
cp
f
507.335 1074.29 mo
507.335 1081.01 li
501.832 1080.25 497.029 1082.68 495.169 1087.03 cv
495.169 1105.66 li
488.32 1105.66 li
488.32 1074.93 li
494.402 1074.93 li
494.402 1079.99 li
496.773 1076.21 501.768 1073.78 507.335 1074.29 cv
cp
f
521.539 1063.98 mo
521.539 1074.93 li
532.681 1074.93 li
532.681 1080.95 li
521.539 1080.95 li
521.539 1095.04 li
521.539 1099.07 523.398 1100.41 527.367 1100.41 cv
529.609 1100.41 531.656 1099.96 533.578 1099.2 cv
533.578 1105.09 li
531.273 1105.92 528.328 1106.43 525.316 1106.43 cv
519.363 1106.43 514.751 1103.48 514.751 1096.32 cv
514.751 1080.95 li
509.248 1080.95 li
509.248 1074.93 li
514.751 1074.93 li
514.751 1065.65 li
521.539 1063.98 li
cp
f
553.093 1079.8 mo
548.482 1079.8 544.32 1082.55 544.066 1087.73 cv
561.098 1087.73 li
561.48 1085.05 559.816 1079.8 553.093 1079.8 cv
cp
552.773 1074.1 mo
565.001 1074.1 569.228 1083.96 567.244 1092.86 cv
544.13 1092.86 li
544.898 1098.36 550.277 1100.67 555.91 1100.67 cv
559.623 1100.67 563.017 1099.77 565.644 1098.49 cv
565.644 1104.38 li
562.824 1105.73 558.917 1106.5 554.63 1106.5 cv
545.216 1106.5 537.214 1101.12 537.214 1090.3 cv
537.214 1079.16 545.666 1074.1 552.773 1074.1 cv
cp
f
588.742 1080.12 mo
583.232 1080.12 579.201 1084.28 579.201 1090.3 cv
579.201 1096.32 583.232 1100.48 588.742 1100.48 cv
593.542 1100.48 597.064 1097.4 598.535 1094.01 cv
598.535 1086.52 li
597.064 1083.19 593.542 1080.12 588.742 1080.12 cv
cp
605.451 1060.84 mo
605.451 1105.66 li
599.303 1105.66 li
599.303 1100.8 li
596.936 1103.8 593.285 1106.5 587.523 1106.5 cv
578.242 1106.5 572.285 1099.13 572.285 1090.3 cv
572.285 1081.46 578.242 1074.1 587.523 1074.1 cv
592.9 1074.1 596.486 1076.47 598.599 1078.9 cv
598.599 1060.84 li
605.451 1060.84 li
cp
f
232.093 746.939 mo
232.093 768.24 li
232.093 777.834 225.521 781.098 218.085 781.098 cv
210.602 781.098 204.029 777.834 204.029 768.24 cv
204.029 746.939 li
208.06 746.939 li
208.06 768.049 li
208.06 774.861 212.281 777.26 218.085 777.26 cv
223.844 777.26 228.064 774.861 228.064 768.049 cv
228.064 746.939 li
232.093 746.939 li
cp
.156863 .317647 .45098 rgb
f
244.779 749.387 mo
244.779 757.494 li
253.99 757.494 li
253.99 761.045 li
244.779 761.045 li
244.779 772.942 li
244.779 776.443 246.363 777.5 249.72 777.5 cv
251.543 777.5 253.271 777.068 254.807 776.443 cv
254.807 779.994 li
253.078 780.617 250.824 781.049 248.617 781.049 cv
244.156 781.049 240.99 778.65 240.99 773.613 cv
240.99 761.045 li
236.672 761.045 li
236.672 757.494 li
240.99 757.494 li
240.99 750.346 li
244.779 749.387 li
cp
f
281.207 760.469 mo
277.273 760.469 273.626 762.818 273.339 767.328 cv
288.259 767.328 li
288.596 764.883 287.06 760.469 281.207 760.469 cv
cp
280.967 756.918 mo
289.843 756.918 293.105 764.162 291.666 770.688 cv
273.339 770.688 li
273.82 775.533 278.186 777.547 282.837 777.547 cv
285.669 777.547 288.451 776.779 290.417 775.676 cv
290.417 779.418 li
288.309 780.521 285.285 781.098 282.264 781.098 cv
275.451 781.098 269.502 777.211 269.502 769.008 cv
269.502 760.947 275.498 756.918 280.967 756.918 cv
cp
f
309.14 756.918 mo
314.658 756.918 318.736 760.709 318.736 766.322 cv
318.736 780.521 li
314.898 780.521 li
314.898 766.801 li
314.898 762.482 312.259 760.469 308.708 760.469 cv
305.302 760.469 302.762 762.771 301.227 765.074 cv
301.227 780.521 li
297.388 780.521 li
297.388 757.494 li
300.842 757.494 li
300.842 760.9 li
302.377 758.885 305.447 756.918 309.14 756.918 cv
cp
f
325.66 780.521 mo
325.66 757.494 li
329.498 757.494 li
329.498 780.521 li
325.66 780.521 li
cp
327.578 752.602 mo
326.236 752.602 325.084 751.785 325.084 750.154 cv
325.084 748.57 326.236 747.707 327.578 747.707 cv
328.922 747.707 330.072 748.57 330.072 750.154 cv
330.072 751.785 328.922 752.602 327.578 752.602 cv
cp
f
336.701 780.521 mo
336.701 757.494 li
340.154 757.494 li
340.154 760.564 li
341.402 759.221 344.136 756.918 348.021 756.918 cv
351.476 756.918 354.02 758.406 355.41 760.805 cv
357.472 758.693 360.302 756.918 363.804 756.918 cv
369.513 756.918 372.583 760.947 372.583 766.322 cv
372.583 780.521 li
368.746 780.521 li
368.746 766.225 li
368.746 762.723 366.732 760.469 363.373 760.469 cv
360.255 760.469 357.953 762.627 356.658 764.258 cv
356.754 764.93 356.8 765.602 356.8 766.322 cv
356.8 780.521 li
352.962 780.521 li
352.962 766.225 li
352.962 762.723 350.949 760.469 347.589 760.469 cv
344.184 760.469 341.785 763.012 340.539 764.643 cv
340.539 780.521 li
336.701 780.521 li
cp
f
398.376 777.787 mo
401.303 777.787 404.228 776.588 406.244 774.43 cv
406.244 770.207 li
404.613 769.871 402.262 769.535 400.39 769.535 cv
397.033 769.535 393.387 770.543 393.387 773.9 cv
393.387 776.588 395.834 777.787 398.376 777.787 cv
cp
411.857 777.5 mo
412.433 777.5 413.056 777.355 413.632 777.164 cv
413.632 780.281 li
412.72 780.617 411.712 780.809 410.753 780.809 cv
408.882 780.809 407.203 780.041 406.531 778.027 cv
404.228 779.945 401.303 781.098 397.56 781.098 cv
393.482 781.098 389.453 778.938 389.453 774.094 cv
389.453 768.145 394.921 766.322 399.863 766.322 cv
401.878 766.322 404.326 766.609 406.244 767.042 cv
406.244 766.225 li
406.244 762.771 403.893 760.469 399.671 760.469 cv
396.121 760.469 393.291 761.332 391.275 762.195 cv
391.275 758.454 li
393.1 757.83 396.265 756.918 400.055 756.918 cv
406.195 756.918 410.082 760.277 410.082 766.705 cv
410.082 775.725 li
410.082 777.115 410.85 777.5 411.857 777.5 cv
cp
f
427.845 760.469 mo
423.385 760.469 419.738 763.73 419.738 769.008 cv
419.738 774.285 423.385 777.547 427.845 777.547 cv
431.97 777.547 435.041 774.861 436.338 771.887 cv
436.338 766.129 li
435.041 763.154 431.97 760.469 427.845 760.469 cv
cp
440.176 746.939 mo
440.176 780.521 li
436.72 780.521 li
436.72 776.684 li
434.658 779.035 431.828 781.098 427.414 781.098 cv
420.841 781.098 415.9 775.916 415.9 769.008 cv
415.9 762.1 420.841 756.918 427.414 756.918 cv
431.828 756.918 434.658 758.98 436.338 760.947 cv
436.338 746.939 li
440.176 746.939 li
cp
f
459.242 780.521 mo
459.242 757.494 li
462.695 757.494 li
462.695 760.564 li
463.943 759.221 466.677 756.918 470.563 756.918 cv
474.017 756.918 476.561 758.406 477.951 760.805 cv
480.013 758.693 482.844 756.918 486.345 756.918 cv
492.054 756.918 495.125 760.947 495.125 766.322 cv
495.125 780.521 li
491.287 780.521 li
491.287 766.225 li
491.287 762.723 489.273 760.469 485.914 760.469 cv
482.796 760.469 480.494 762.627 479.199 764.258 cv
479.295 764.93 479.342 765.602 479.342 766.322 cv
479.342 780.521 li
475.504 780.521 li
475.504 766.225 li
475.504 762.723 473.49 760.469 470.13 760.469 cv
466.724 760.469 464.326 763.012 463.08 764.643 cv
463.08 780.521 li
459.242 780.521 li
cp
f
502.058 780.521 mo
502.058 757.494 li
505.896 757.494 li
505.896 780.521 li
502.058 780.521 li
cp
503.976 752.602 mo
502.635 752.602 501.482 751.785 501.482 750.154 cv
501.482 748.57 502.635 747.707 503.976 747.707 cv
505.32 747.707 506.47 748.57 506.47 750.154 cv
506.47 751.785 505.32 752.602 503.976 752.602 cv
cp
f
524.851 756.918 mo
530.369 756.918 534.447 760.709 534.447 766.322 cv
534.447 780.521 li
530.609 780.521 li
530.609 766.801 li
530.609 762.482 527.97 760.469 524.419 760.469 cv
521.013 760.469 518.473 762.771 516.937 765.074 cv
516.937 780.521 li
513.099 780.521 li
513.099 757.494 li
516.552 757.494 li
516.552 760.9 li
518.088 758.885 521.158 756.918 524.851 756.918 cv
cp
f
541.369 780.521 mo
541.369 757.494 li
545.207 757.494 li
545.207 780.521 li
541.369 780.521 li
cp
543.287 752.602 mo
541.943 752.602 540.792 751.785 540.792 750.154 cv
540.792 748.57 541.943 747.707 543.287 747.707 cv
544.63 747.707 545.783 748.57 545.783 750.154 cv
545.783 751.785 544.63 752.602 543.287 752.602 cv
cp
f
552.41 780.521 mo
552.41 757.494 li
555.863 757.494 li
555.863 760.564 li
557.111 759.221 559.845 756.918 563.73 756.918 cv
567.186 756.918 569.728 758.406 571.119 760.805 cv
573.181 758.693 576.011 756.918 579.513 756.918 cv
585.223 756.918 588.292 760.947 588.292 766.322 cv
588.292 780.521 li
584.455 780.521 li
584.455 766.225 li
584.455 762.723 582.441 760.469 579.082 760.469 cv
575.965 760.469 573.662 762.627 572.367 764.258 cv
572.462 764.93 572.51 765.602 572.51 766.322 cv
572.51 780.521 li
568.671 780.521 li
568.671 766.225 li
568.671 762.723 566.658 760.469 563.298 760.469 cv
559.892 760.469 557.494 763.012 556.248 764.643 cv
556.248 780.521 li
552.41 780.521 li
cp
f
602.134 777.787 mo
605.06 777.787 607.986 776.588 610.001 774.43 cv
610.001 770.207 li
608.371 769.871 606.02 769.535 604.148 769.535 cv
600.791 769.535 597.144 770.543 597.144 773.9 cv
597.144 776.588 599.591 777.787 602.134 777.787 cv
cp
615.615 777.5 mo
616.191 777.5 616.814 777.355 617.39 777.164 cv
617.39 780.281 li
616.479 780.617 615.47 780.809 614.511 780.809 cv
612.64 780.809 610.96 780.041 610.289 778.027 cv
607.986 779.945 605.06 781.098 601.318 781.098 cv
597.24 781.098 593.21 778.938 593.21 774.094 cv
593.21 768.145 598.679 766.322 603.621 766.322 cv
605.636 766.322 608.083 766.609 610.001 767.042 cv
610.001 766.225 li
610.001 762.771 607.65 760.469 603.429 760.469 cv
599.878 760.469 597.048 761.332 595.033 762.195 cv
595.033 758.454 li
596.857 757.83 600.023 756.918 603.813 756.918 cv
609.953 756.918 613.839 760.277 613.839 766.705 cv
613.839 775.725 li
613.839 777.115 614.607 777.5 615.615 777.5 cv
cp
f
652.285 757.494 mo
642.113 780.521 li
638.084 780.521 li
627.914 757.494 li
632.183 757.494 li
640.1 776.203 li
648.015 757.494 li
652.285 757.494 li
cp
f
665.779 760.469 mo
661.845 760.469 658.199 762.818 657.912 767.328 cv
672.832 767.328 li
673.167 764.883 671.633 760.469 665.779 760.469 cv
cp
665.541 756.918 mo
674.416 756.918 677.677 764.162 676.238 770.688 cv
657.912 770.688 li
658.392 775.533 662.757 777.547 667.41 777.547 cv
670.242 777.547 673.023 776.779 674.99 775.676 cv
674.99 779.418 li
672.88 780.521 669.857 781.098 666.836 781.098 cv
660.023 781.098 654.074 777.211 654.074 769.008 cv
654.074 760.947 660.07 756.918 665.541 756.918 cv
cp
f
693.712 756.918 mo
699.23 756.918 703.308 760.709 703.308 766.322 cv
703.308 780.521 li
699.47 780.521 li
699.47 766.801 li
699.47 762.482 696.832 760.469 693.281 760.469 cv
689.875 760.469 687.333 762.771 685.799 765.074 cv
685.799 780.521 li
681.961 780.521 li
681.961 757.494 li
685.414 757.494 li
685.414 760.9 li
686.949 758.885 690.02 756.918 693.712 756.918 cv
cp
f
710.232 780.521 mo
710.232 757.494 li
714.07 757.494 li
714.07 780.521 li
710.232 780.521 li
cp
712.15 752.602 mo
710.806 752.602 709.656 751.785 709.656 750.154 cv
709.656 748.57 710.806 747.707 712.15 747.707 cv
713.494 747.707 714.646 748.57 714.646 750.154 cv
714.646 751.785 713.494 752.602 712.15 752.602 cv
cp
f
728.277 777.787 mo
731.203 777.787 734.128 776.588 736.144 774.43 cv
736.144 770.207 li
734.513 769.871 732.162 769.535 730.291 769.535 cv
726.934 769.535 723.287 770.543 723.287 773.9 cv
723.287 776.588 725.734 777.787 728.277 777.787 cv
cp
741.757 777.5 mo
742.333 777.5 742.957 777.355 743.533 777.164 cv
743.533 780.281 li
742.621 780.617 741.613 780.809 740.654 780.809 cv
738.783 780.809 737.103 780.041 736.431 778.027 cv
734.128 779.945 731.203 781.098 727.46 781.098 cv
723.382 781.098 719.354 778.938 719.354 774.094 cv
719.354 768.145 724.822 766.322 729.763 766.322 cv
731.779 766.322 734.224 766.609 736.144 767.042 cv
736.144 766.225 li
736.144 762.771 733.793 760.469 729.572 760.469 cv
726.021 760.469 723.191 761.332 721.178 762.195 cv
721.178 758.454 li
723 757.83 726.166 756.918 729.955 756.918 cv
736.095 756.918 739.982 760.277 739.982 766.705 cv
739.982 775.725 li
739.982 777.115 740.75 777.5 741.757 777.5 cv
cp
f
747.385 780.521 mo
747.385 757.494 li
750.837 757.494 li
750.837 760.564 li
752.085 759.221 754.82 756.918 758.705 756.918 cv
762.16 756.918 764.703 758.406 766.094 760.805 cv
768.156 758.693 770.986 756.918 774.488 756.918 cv
780.197 756.918 783.267 760.947 783.267 766.322 cv
783.267 780.521 li
779.429 780.521 li
779.429 766.225 li
779.429 762.723 777.416 760.469 774.057 760.469 cv
770.939 760.469 768.636 762.627 767.342 764.258 cv
767.438 764.93 767.484 765.602 767.484 766.322 cv
767.484 780.521 li
763.646 780.521 li
763.646 766.225 li
763.646 762.723 761.632 760.469 758.273 760.469 cv
754.867 760.469 752.469 763.012 751.223 764.643 cv
751.223 780.521 li
747.385 780.521 li
cp
f
787.561 787.717 mo
790.199 776.684 li
794.277 776.684 li
790.677 787.717 li
787.561 787.717 li
cp
f
823.169 760.469 mo
818.709 760.469 815.062 763.73 815.062 769.008 cv
815.062 774.285 818.709 777.547 823.169 777.547 cv
827.294 777.547 830.365 774.861 831.662 771.887 cv
831.662 766.129 li
830.365 763.154 827.294 760.469 823.169 760.469 cv
cp
822.738 756.918 mo
827.152 756.918 829.982 758.98 832.044 761.332 cv
832.044 757.494 li
835.5 757.494 li
835.5 791.076 li
831.662 791.076 li
831.662 777.068 li
829.982 779.035 827.152 781.098 822.738 781.098 cv
816.166 781.098 811.224 775.916 811.224 769.008 cv
811.224 762.1 816.166 756.918 822.738 756.918 cv
cp
f
863.676 757.494 mo
863.676 780.521 li
860.22 780.521 li
860.22 777.115 li
858.685 779.131 855.615 781.098 851.921 781.098 cv
845.923 781.098 842.326 777.307 842.326 771.693 cv
842.326 757.494 li
846.164 757.494 li
846.164 771.215 li
846.164 775.533 848.324 777.547 852.354 777.547 cv
855.76 777.547 858.302 775.244 859.838 772.942 cv
859.838 757.494 li
863.676 757.494 li
cp
f
870.886 780.521 mo
870.886 757.494 li
874.724 757.494 li
874.724 780.521 li
870.886 780.521 li
cp
872.804 752.602 mo
871.462 752.602 870.311 751.785 870.311 750.154 cv
870.311 748.57 871.462 747.707 872.804 747.707 cv
874.148 747.707 875.298 748.57 875.298 750.154 cv
875.298 751.785 874.148 752.602 872.804 752.602 cv
cp
f
889.361 756.918 mo
892.432 756.918 895.357 757.734 897.516 758.885 cv
897.516 762.531 li
895.598 761.283 892.382 760.373 889.601 760.373 cv
887.105 760.373 884.466 761.188 884.466 763.443 cv
884.466 768.432 899.099 766.322 899.099 774.621 cv
899.099 779.418 894.589 781.098 889.601 781.098 cv
886.338 781.098 882.835 780.234 880.677 778.842 cv
880.677 775.1 li
883.029 776.684 886.531 777.547 889.408 777.547 cv
892.671 777.547 895.261 777.02 895.261 774.717 cv
895.261 769.871 880.582 771.791 880.582 763.539 cv
880.582 758.789 885.042 756.918 889.361 756.918 cv
cp
f
927.998 756.918 mo
933.515 756.918 937.593 760.709 937.593 766.322 cv
937.593 780.521 li
933.755 780.521 li
933.755 766.801 li
933.755 762.482 931.117 760.469 927.566 760.469 cv
924.16 760.469 921.619 762.771 920.083 765.074 cv
920.083 780.521 li
916.246 780.521 li
916.246 757.494 li
919.699 757.494 li
919.699 760.9 li
921.234 758.885 924.304 756.918 927.998 756.918 cv
cp
f
955.119 760.564 mo
950.417 760.564 946.675 763.684 946.675 769.008 cv
946.675 774.332 950.417 777.451 955.119 777.451 cv
959.82 777.451 963.563 774.332 963.563 769.008 cv
963.563 763.684 959.82 760.564 955.119 760.564 cv
cp
955.119 756.918 mo
961.404 756.918 967.4 761.141 967.4 769.008 cv
967.4 776.875 961.404 781.098 955.119 781.098 cv
948.883 781.098 942.837 776.875 942.837 769.008 cv
942.837 761.141 948.883 756.918 955.119 756.918 cv
cp
f
980.369 756.918 mo
983.439 756.918 986.365 757.734 988.523 758.885 cv
988.523 762.531 li
986.605 761.283 983.39 760.373 980.609 760.373 cv
978.113 760.373 975.475 761.188 975.475 763.443 cv
975.475 768.432 990.107 766.322 990.107 774.621 cv
990.107 779.418 985.597 781.098 980.609 781.098 cv
977.345 781.098 973.844 780.234 971.685 778.842 cv
971.685 775.1 li
974.037 776.684 977.539 777.547 980.416 777.547 cv
983.679 777.547 986.27 777.02 986.27 774.717 cv
986.27 769.871 971.589 771.791 971.589 763.539 cv
971.589 758.789 976.05 756.918 980.369 756.918 cv
cp
f
1000.63 749.387 mo
1000.63 757.494 li
1009.84 757.494 li
1009.84 761.045 li
1000.63 761.045 li
1000.63 772.942 li
1000.63 776.443 1002.21 777.5 1005.57 777.5 cv
1007.39 777.5 1009.12 777.068 1010.65 776.443 cv
1010.65 779.994 li
1008.92 780.617 1006.67 781.049 1004.46 781.049 cv
1000 781.049 996.835 778.65 996.835 773.613 cv
996.835 761.045 li
992.517 761.045 li
992.517 757.494 li
996.835 757.494 li
996.835 750.346 li
1000.63 749.387 li
cp
f
1028.36 757.014 mo
1028.36 760.852 li
1023.86 760.324 1020.21 762.482 1018.82 766.178 cv
1018.82 780.521 li
1014.98 780.521 li
1014.98 757.494 li
1018.43 757.494 li
1018.43 761.573 li
1020.26 758.549 1024.33 756.678 1028.36 757.014 cv
cp
f
1053.61 757.494 mo
1053.61 780.521 li
1050.15 780.521 li
1050.15 777.115 li
1048.62 779.131 1045.55 781.098 1041.85 781.098 cv
1035.86 781.098 1032.26 777.307 1032.26 771.693 cv
1032.26 757.494 li
1036.1 757.494 li
1036.1 771.215 li
1036.1 775.533 1038.26 777.547 1042.28 777.547 cv
1045.69 777.547 1048.23 775.244 1049.77 772.942 cv
1049.77 757.494 li
1053.61 757.494 li
cp
f
1060.72 780.521 mo
1060.72 757.494 li
1064.18 757.494 li
1064.18 760.564 li
1065.42 759.221 1068.16 756.918 1072.04 756.918 cv
1075.5 756.918 1078.04 758.406 1079.43 760.805 cv
1081.49 758.693 1084.32 756.918 1087.83 756.918 cv
1093.53 756.918 1096.6 760.947 1096.6 766.322 cv
1096.6 780.521 li
1092.77 780.521 li
1092.77 766.225 li
1092.77 762.723 1090.75 760.469 1087.39 760.469 cv
1084.28 760.469 1081.97 762.627 1080.68 764.258 cv
1080.77 764.93 1080.82 765.602 1080.82 766.322 cv
1080.82 780.521 li
1076.98 780.521 li
1076.98 766.225 li
1076.98 762.723 1074.97 760.469 1071.61 760.469 cv
1068.2 760.469 1065.81 763.012 1064.56 764.643 cv
1064.56 780.521 li
1060.72 780.521 li
cp
f
213.671 818.068 mo
209.738 818.068 206.092 820.418 205.804 824.928 cv
220.725 824.928 li
221.06 822.482 219.525 818.068 213.671 818.068 cv
cp
213.431 814.518 mo
222.309 814.518 225.57 821.762 224.131 828.287 cv
205.804 828.287 li
206.285 833.131 210.65 835.146 215.302 835.146 cv
218.135 835.146 220.916 834.379 222.883 833.276 cv
222.883 837.018 li
220.773 838.121 217.75 838.697 214.729 838.697 cv
207.916 838.697 201.966 834.811 201.966 826.607 cv
201.966 818.549 207.962 814.518 213.431 814.518 cv
cp
f
248.277 815.094 mo
239.833 826.271 li
248.755 838.121 li
244.343 838.121 li
237.626 829.006 li
230.861 838.121 li
226.449 838.121 li
235.42 826.271 li
226.927 815.094 li
231.341 815.094 li
237.626 823.586 li
243.863 815.094 li
248.277 815.094 li
cp
f
261.96 818.068 mo
258.027 818.068 254.381 820.418 254.094 824.928 cv
269.014 824.928 li
269.349 822.482 267.814 818.068 261.96 818.068 cv
cp
261.72 814.518 mo
270.598 814.518 273.859 821.762 272.42 828.287 cv
254.094 828.287 li
254.574 833.131 258.939 835.146 263.591 835.146 cv
266.423 835.146 269.205 834.379 271.172 833.276 cv
271.172 837.018 li
269.062 838.121 266.039 838.697 263.017 838.697 cv
256.205 838.697 250.256 834.811 250.256 826.607 cv
250.256 818.549 256.251 814.518 261.72 814.518 cv
cp
f
291.527 814.613 mo
291.527 818.451 li
287.018 817.924 283.371 820.084 281.98 823.777 cv
281.98 838.121 li
278.142 838.121 li
278.142 815.094 li
281.595 815.094 li
281.595 819.172 li
283.42 816.148 287.496 814.277 291.527 814.613 cv
cp
f
305.736 814.518 mo
308.328 814.518 310.869 815.094 312.837 816.389 cv
312.837 820.131 li
311.109 818.787 308.664 818.068 306.216 818.068 cv
301.756 818.068 297.102 820.563 297.102 826.607 cv
297.102 832.508 301.611 835.146 306.121 835.146 cv
308.615 835.146 311.158 834.428 313.076 833.276 cv
313.076 837.113 li
310.917 838.17 308.471 838.697 305.594 838.697 cv
299.548 838.697 293.263 834.906 293.263 826.703 cv
293.263 818.309 299.74 814.518 305.736 814.518 cv
cp
f
318.607 838.121 mo
318.607 815.094 li
322.445 815.094 li
322.445 838.121 li
318.607 838.121 li
cp
320.525 810.201 mo
319.181 810.201 318.031 809.385 318.031 807.754 cv
318.031 806.17 319.181 805.307 320.525 805.307 cv
321.869 805.307 323.021 806.17 323.021 807.754 cv
323.021 809.385 321.869 810.201 320.525 810.201 cv
cp
f
334.971 806.986 mo
334.971 815.094 li
344.181 815.094 li
344.181 818.645 li
334.971 818.645 li
334.971 830.542 li
334.971 834.043 336.555 835.1 339.912 835.1 cv
341.734 835.1 343.462 834.666 344.998 834.043 cv
344.998 837.594 li
343.269 838.217 341.015 838.648 338.809 838.648 cv
334.347 838.648 331.181 836.25 331.181 831.212 cv
331.181 818.645 li
326.863 818.645 li
326.863 815.094 li
331.181 815.094 li
331.181 807.945 li
334.971 806.986 li
cp
f
356.33 835.387 mo
359.255 835.387 362.182 834.188 364.197 832.029 cv
364.197 827.807 li
362.566 827.471 360.214 827.135 358.343 827.135 cv
354.986 827.135 351.339 828.143 351.339 831.5 cv
351.339 834.188 353.787 835.387 356.33 835.387 cv
cp
369.811 835.1 mo
370.386 835.1 371.009 834.955 371.586 834.764 cv
371.586 837.881 li
370.673 838.217 369.666 838.408 368.707 838.408 cv
366.836 838.408 365.156 837.641 364.484 835.627 cv
362.182 837.545 359.255 838.697 355.513 838.697 cv
351.435 838.697 347.406 836.537 347.406 831.693 cv
347.406 825.744 352.875 823.92 357.816 823.92 cv
359.832 823.92 362.279 824.209 364.197 824.641 cv
364.197 823.824 li
364.197 820.371 361.845 818.068 357.625 818.068 cv
354.074 818.068 351.244 818.932 349.229 819.795 cv
349.229 816.053 li
351.052 815.43 354.218 814.518 358.007 814.518 cv
364.148 814.518 368.035 817.877 368.035 824.305 cv
368.035 833.324 li
368.035 834.715 368.802 835.1 369.811 835.1 cv
cp
f
380.57 806.986 mo
380.57 815.094 li
389.781 815.094 li
389.781 818.645 li
380.57 818.645 li
380.57 830.542 li
380.57 834.043 382.154 835.1 385.511 835.1 cv
387.333 835.1 389.063 834.666 390.597 834.043 cv
390.597 837.594 li
388.869 838.217 386.615 838.648 384.408 838.648 cv
379.947 838.648 376.781 836.25 376.781 831.212 cv
376.781 818.645 li
372.462 818.645 li
372.462 815.094 li
376.781 815.094 li
376.781 807.945 li
380.57 806.986 li
cp
f
395.021 838.121 mo
395.021 815.094 li
398.859 815.094 li
398.859 838.121 li
395.021 838.121 li
cp
396.939 810.201 mo
395.595 810.201 394.445 809.385 394.445 807.754 cv
394.445 806.17 395.595 805.307 396.939 805.307 cv
398.283 805.307 399.436 806.17 399.436 807.754 cv
399.436 809.385 398.283 810.201 396.939 810.201 cv
cp
f
416.757 818.164 mo
412.057 818.164 408.314 821.283 408.314 826.607 cv
408.314 831.932 412.057 835.051 416.757 835.051 cv
421.458 835.051 425.201 831.932 425.201 826.607 cv
425.201 821.283 421.458 818.164 416.757 818.164 cv
cp
416.757 814.518 mo
423.042 814.518 429.039 818.74 429.039 826.607 cv
429.039 834.475 423.042 838.697 416.757 838.697 cv
410.521 838.697 404.476 834.475 404.476 826.607 cv
404.476 818.74 410.521 814.518 416.757 814.518 cv
cp
f
446.324 814.518 mo
451.842 814.518 455.92 818.309 455.92 823.92 cv
455.92 838.121 li
452.082 838.121 li
452.082 824.4 li
452.082 820.084 449.443 818.068 445.892 818.068 cv
442.486 818.068 439.945 820.371 438.41 822.674 cv
438.41 838.121 li
434.572 838.121 li
434.572 815.094 li
438.025 815.094 li
438.025 818.5 li
439.561 816.484 442.63 814.518 446.324 814.518 cv
cp
f
472.869 818.068 mo
468.935 818.068 465.289 820.418 465.001 824.928 cv
479.922 824.928 li
480.257 822.482 478.722 818.068 472.869 818.068 cv
cp
472.63 814.518 mo
481.506 814.518 484.767 821.762 483.328 828.287 cv
465.001 828.287 li
465.482 833.131 469.847 835.146 474.5 835.146 cv
477.332 835.146 480.113 834.379 482.08 833.276 cv
482.08 837.018 li
479.97 838.121 476.947 838.697 473.925 838.697 cv
467.113 838.697 461.164 834.811 461.164 826.607 cv
461.164 818.549 467.16 814.518 472.63 814.518 cv
cp
f
489.052 838.121 mo
489.052 815.094 li
492.505 815.094 li
492.505 818.164 li
493.754 816.82 496.488 814.518 500.373 814.518 cv
503.828 814.518 506.371 816.006 507.761 818.404 cv
509.824 816.293 512.654 814.518 516.156 814.518 cv
521.865 814.518 524.936 818.549 524.936 823.92 cv
524.936 838.121 li
521.098 838.121 li
521.098 823.824 li
521.098 820.322 519.083 818.068 515.724 818.068 cv
512.607 818.068 510.304 820.227 509.009 821.857 cv
509.105 822.529 509.152 823.201 509.152 823.92 cv
509.152 838.121 li
505.314 838.121 li
505.314 823.824 li
505.314 820.322 503.3 818.068 499.941 818.068 cv
496.535 818.068 494.136 820.611 492.89 822.242 cv
492.89 838.121 li
489.052 838.121 li
cp
f
564.783 815.094 mo
564.783 838.121 li
561.328 838.121 li
561.328 834.715 li
559.792 836.73 556.722 838.697 553.029 838.697 cv
547.031 838.697 543.433 834.906 543.433 829.295 cv
543.433 815.094 li
547.271 815.094 li
547.271 828.814 li
547.271 833.131 549.431 835.146 553.46 835.146 cv
556.867 835.146 559.41 832.844 560.945 830.542 cv
560.945 815.094 li
564.783 815.094 li
cp
f
575.832 803.099 mo
575.832 838.121 li
571.994 838.121 li
571.994 803.099 li
575.832 803.099 li
cp
f
586.969 803.099 mo
586.969 838.121 li
583.13 838.121 li
583.13 803.099 li
586.969 803.099 li
cp
f
601.173 835.387 mo
604.1 835.387 607.025 834.188 609.041 832.029 cv
609.041 827.807 li
607.41 827.471 605.058 827.135 603.188 827.135 cv
599.83 827.135 596.184 828.143 596.184 831.5 cv
596.184 834.188 598.631 835.387 601.173 835.387 cv
cp
614.654 835.1 mo
615.23 835.1 615.854 834.955 616.429 834.764 cv
616.429 837.881 li
615.517 838.217 614.509 838.408 613.55 838.408 cv
611.679 838.408 610 837.641 609.328 835.627 cv
607.025 837.545 604.1 838.697 600.357 838.697 cv
596.279 838.697 592.25 836.537 592.25 831.693 cv
592.25 825.744 597.719 823.92 602.66 823.92 cv
604.675 823.92 607.123 824.209 609.041 824.641 cv
609.041 823.824 li
609.041 820.371 606.689 818.068 602.469 818.068 cv
598.918 818.068 596.087 818.932 594.072 819.795 cv
594.072 816.053 li
595.896 815.43 599.063 814.518 602.851 814.518 cv
608.992 814.518 612.878 817.877 612.878 824.305 cv
612.878 833.324 li
612.878 834.715 613.646 835.1 614.654 835.1 cv
cp
f
620.281 838.121 mo
620.281 815.094 li
623.734 815.094 li
623.734 818.164 li
624.982 816.82 627.716 814.518 631.601 814.518 cv
635.057 814.518 637.599 816.006 638.99 818.404 cv
641.052 816.293 643.882 814.518 647.385 814.518 cv
653.093 814.518 656.164 818.549 656.164 823.92 cv
656.164 838.121 li
652.326 838.121 li
652.326 823.824 li
652.326 820.322 650.312 818.068 646.953 818.068 cv
643.835 818.068 641.533 820.227 640.238 821.857 cv
640.333 822.529 640.38 823.201 640.38 823.92 cv
640.38 838.121 li
636.542 838.121 li
636.542 823.824 li
636.542 820.322 634.529 818.068 631.169 818.068 cv
627.763 818.068 625.365 820.611 624.119 822.242 cv
624.119 838.121 li
620.281 838.121 li
cp
f
685.841 814.518 mo
688.433 814.518 690.975 815.094 692.943 816.389 cv
692.943 820.131 li
691.215 818.787 688.769 818.068 686.322 818.068 cv
681.861 818.068 677.207 820.563 677.207 826.607 cv
677.207 832.508 681.716 835.146 686.226 835.146 cv
688.721 835.146 691.263 834.428 693.181 833.276 cv
693.181 837.113 li
691.023 838.17 688.576 838.697 685.699 838.697 cv
679.654 838.697 673.369 834.906 673.369 826.703 cv
673.369 818.309 679.845 814.518 685.841 814.518 cv
cp
f
709.027 818.164 mo
704.326 818.164 700.584 821.283 700.584 826.607 cv
700.584 831.932 704.326 835.051 709.027 835.051 cv
713.729 835.051 717.47 831.932 717.47 826.607 cv
717.47 821.283 713.729 818.164 709.027 818.164 cv
cp
709.027 814.518 mo
715.313 814.518 721.308 818.74 721.308 826.607 cv
721.308 834.475 715.313 838.697 709.027 838.697 cv
702.791 838.697 696.746 834.475 696.746 826.607 cv
696.746 818.74 702.791 814.518 709.027 814.518 cv
cp
f
740.227 814.613 mo
740.227 818.451 li
735.716 817.924 732.07 820.084 730.68 823.777 cv
730.68 838.121 li
726.842 838.121 li
726.842 815.094 li
730.295 815.094 li
730.295 819.172 li
732.119 816.148 736.195 814.277 740.227 814.613 cv
cp
f
756.736 818.068 mo
752.611 818.068 749.541 820.754 748.246 823.729 cv
748.246 829.486 li
749.541 832.461 752.611 835.146 756.736 835.146 cv
761.197 835.146 764.843 831.885 764.843 826.607 cv
764.843 821.33 761.197 818.068 756.736 818.068 cv
cp
757.168 814.518 mo
763.74 814.518 768.681 819.699 768.681 826.607 cv
768.681 833.516 763.74 838.697 757.168 838.697 cv
752.756 838.697 749.924 836.635 748.246 834.666 cv
748.246 848.676 li
744.408 848.676 li
744.408 815.094 li
747.861 815.094 li
747.861 818.932 li
749.924 816.58 752.756 814.518 757.168 814.518 cv
cp
f
784.914 818.164 mo
780.212 818.164 776.47 821.283 776.47 826.607 cv
776.47 831.932 780.212 835.051 784.914 835.051 cv
789.615 835.051 793.357 831.932 793.357 826.607 cv
793.357 821.283 789.615 818.164 784.914 818.164 cv
cp
784.914 814.518 mo
791.199 814.518 797.195 818.74 797.195 826.607 cv
797.195 834.475 791.199 838.697 784.914 838.697 cv
778.677 838.697 772.632 834.475 772.632 826.607 cv
772.632 818.74 778.677 814.518 784.914 814.518 cv
cp
f
816.113 814.613 mo
816.113 818.451 li
811.604 817.924 807.957 820.084 806.566 823.777 cv
806.566 838.121 li
802.729 838.121 li
802.729 815.094 li
806.181 815.094 li
806.181 819.172 li
808.006 816.148 812.082 814.277 816.113 814.613 cv
cp
f
820.392 838.121 mo
820.392 815.094 li
824.23 815.094 li
824.23 838.121 li
820.392 838.121 li
cp
822.311 810.201 mo
820.966 810.201 819.816 809.385 819.816 807.754 cv
819.816 806.17 820.966 805.307 822.311 805.307 cv
823.654 805.307 824.806 806.17 824.806 807.754 cv
824.806 809.385 823.654 810.201 822.311 810.201 cv
cp
f
838.867 814.518 mo
841.937 814.518 844.863 815.334 847.021 816.484 cv
847.021 820.131 li
845.104 818.883 841.888 817.973 839.107 817.973 cv
836.611 817.973 833.972 818.787 833.972 821.043 cv
833.972 826.031 848.605 823.92 848.605 832.221 cv
848.605 837.018 844.095 838.697 839.107 838.697 cv
835.844 838.697 832.341 837.834 830.183 836.441 cv
830.183 832.699 li
832.535 834.283 836.037 835.146 838.914 835.146 cv
842.177 835.146 844.767 834.62 844.767 832.317 cv
844.767 827.471 830.088 829.391 830.088 821.139 cv
830.088 816.389 834.548 814.518 838.867 814.518 cv
cp
f
873.187 814.518 mo
876.257 814.518 879.183 815.334 881.341 816.484 cv
881.341 820.131 li
879.423 818.883 876.208 817.973 873.427 817.973 cv
870.931 817.973 868.292 818.787 868.292 821.043 cv
868.292 826.031 882.926 823.92 882.926 832.221 cv
882.926 837.018 878.416 838.697 873.427 838.697 cv
870.164 838.697 866.662 837.834 864.503 836.441 cv
864.503 832.699 li
866.855 834.283 870.357 835.146 873.234 835.146 cv
876.498 835.146 879.088 834.62 879.088 832.317 cv
879.088 827.471 864.408 829.391 864.408 821.139 cv
864.408 816.389 868.869 814.518 873.187 814.518 cv
cp
f
909.179 815.094 mo
909.179 838.121 li
905.725 838.121 li
905.725 834.715 li
904.189 836.73 901.119 838.697 897.425 838.697 cv
891.428 838.697 887.83 834.906 887.83 829.295 cv
887.83 815.094 li
891.668 815.094 li
891.668 828.814 li
891.668 833.131 893.828 835.146 897.857 835.146 cv
901.263 835.146 903.807 832.844 905.341 830.542 cv
905.341 815.094 li
909.179 815.094 li
cp
f
923.73 814.518 mo
926.801 814.518 929.727 815.334 931.885 816.484 cv
931.885 820.131 li
929.967 818.883 926.751 817.973 923.97 817.973 cv
921.474 817.973 918.835 818.787 918.835 821.043 cv
918.835 826.031 933.468 823.92 933.468 832.221 cv
933.468 837.018 928.958 838.697 923.97 838.697 cv
920.707 838.697 917.205 837.834 915.046 836.441 cv
915.046 832.699 li
917.398 834.283 920.9 835.146 923.777 835.146 cv
927.041 835.146 929.63 834.62 929.63 832.317 cv
929.63 827.471 914.951 829.391 914.951 821.139 cv
914.951 816.389 919.412 814.518 923.73 814.518 cv
cp
f
949.55 814.518 mo
952.142 814.518 954.686 815.094 956.652 816.389 cv
956.652 820.131 li
954.923 818.787 952.478 818.068 950.031 818.068 cv
945.57 818.068 940.916 820.563 940.916 826.607 cv
940.916 832.508 945.426 835.146 949.935 835.146 cv
952.429 835.146 954.973 834.428 956.891 833.276 cv
956.891 837.113 li
954.732 838.17 952.285 838.697 949.408 838.697 cv
943.363 838.697 937.078 834.906 937.078 826.703 cv
937.078 818.309 943.554 814.518 949.55 814.518 cv
cp
f
962.421 838.121 mo
962.421 815.094 li
966.26 815.094 li
966.26 838.121 li
962.421 838.121 li
cp
964.339 810.201 mo
962.998 810.201 961.845 809.385 961.845 807.754 cv
961.845 806.17 962.998 805.307 964.339 805.307 cv
965.683 805.307 966.833 806.17 966.833 807.754 cv
966.833 809.385 965.683 810.201 964.339 810.201 cv
cp
f
985.789 818.068 mo
981.664 818.068 978.594 820.754 977.298 823.729 cv
977.298 829.486 li
978.594 832.461 981.664 835.146 985.789 835.146 cv
990.251 835.146 993.896 831.885 993.896 826.607 cv
993.896 821.33 990.251 818.068 985.789 818.068 cv
cp
986.22 814.518 mo
992.792 814.518 997.734 819.699 997.734 826.607 cv
997.734 833.516 992.792 838.697 986.22 838.697 cv
981.806 838.697 978.976 836.635 977.298 834.666 cv
977.298 848.676 li
973.46 848.676 li
973.46 815.094 li
976.914 815.094 li
976.914 818.932 li
978.976 816.58 981.806 814.518 986.22 814.518 cv
cp
f
1003.36 838.121 mo
1003.36 815.094 li
1007.2 815.094 li
1007.2 838.121 li
1003.36 838.121 li
cp
1005.28 810.201 mo
1003.94 810.201 1002.79 809.385 1002.79 807.754 cv
1002.79 806.17 1003.94 805.307 1005.28 805.307 cv
1006.62 805.307 1007.77 806.17 1007.77 807.754 cv
1007.77 809.385 1006.62 810.201 1005.28 810.201 cv
cp
f
1019.73 806.986 mo
1019.73 815.094 li
1028.94 815.094 li
1028.94 818.645 li
1019.73 818.645 li
1019.73 830.542 li
1019.73 834.043 1021.31 835.1 1024.67 835.1 cv
1026.49 835.1 1028.22 834.666 1029.76 834.043 cv
1029.76 837.594 li
1028.03 838.217 1025.77 838.648 1023.57 838.648 cv
1019.11 838.648 1015.94 836.25 1015.94 831.212 cv
1015.94 818.645 li
1011.62 818.645 li
1011.62 815.094 li
1015.94 815.094 li
1015.94 807.945 li
1019.73 806.986 li
cp
f
1049.97 803.099 mo
1049.97 838.121 li
1046.13 838.121 li
1046.13 803.099 li
1049.97 803.099 li
cp
f
1064.17 835.387 mo
1067.1 835.387 1070.02 834.188 1072.04 832.029 cv
1072.04 827.807 li
1070.41 827.471 1068.06 827.135 1066.19 827.135 cv
1062.83 827.135 1059.18 828.143 1059.18 831.5 cv
1059.18 834.188 1061.63 835.387 1064.17 835.387 cv
cp
1077.65 835.1 mo
1078.23 835.1 1078.85 834.955 1079.43 834.764 cv
1079.43 837.881 li
1078.52 838.217 1077.51 838.408 1076.55 838.408 cv
1074.68 838.408 1073 837.641 1072.33 835.627 cv
1070.02 837.545 1067.1 838.697 1063.36 838.697 cv
1059.28 838.697 1055.25 836.537 1055.25 831.693 cv
1055.25 825.744 1060.72 823.92 1065.66 823.92 cv
1067.68 823.92 1070.12 824.209 1072.04 824.641 cv
1072.04 823.824 li
1072.04 820.371 1069.69 818.068 1065.47 818.068 cv
1061.92 818.068 1059.09 818.932 1057.07 819.795 cv
1057.07 816.053 li
1058.9 815.43 1062.06 814.518 1065.85 814.518 cv
1071.99 814.518 1075.88 817.877 1075.88 824.305 cv
1075.88 833.324 li
1075.88 834.715 1076.65 835.1 1077.65 835.1 cv
cp
f
1095.61 818.068 mo
1091.49 818.068 1088.42 820.754 1087.12 823.729 cv
1087.12 829.486 li
1088.42 832.461 1091.49 835.146 1095.61 835.146 cv
1100.07 835.146 1103.72 831.885 1103.72 826.607 cv
1103.72 821.33 1100.07 818.068 1095.61 818.068 cv
cp
1087.12 804.539 mo
1087.12 818.549 li
1088.8 816.58 1091.63 814.518 1096.04 814.518 cv
1102.61 814.518 1107.56 819.699 1107.56 826.607 cv
1107.56 833.516 1102.61 838.697 1096.04 838.697 cv
1091.63 838.697 1088.8 836.635 1086.74 834.283 cv
1086.74 838.121 li
1083.28 838.121 li
1083.28 804.539 li
1087.12 804.539 li
cp
f
1123.79 818.164 mo
1119.09 818.164 1115.34 821.283 1115.34 826.607 cv
1115.34 831.932 1119.09 835.051 1123.79 835.051 cv
1128.49 835.051 1132.23 831.932 1132.23 826.607 cv
1132.23 821.283 1128.49 818.164 1123.79 818.164 cv
cp
1123.79 814.518 mo
1130.07 814.518 1136.07 818.74 1136.07 826.607 cv
1136.07 834.475 1130.07 838.697 1123.79 838.697 cv
1117.55 838.697 1111.51 834.475 1111.51 826.607 cv
1111.51 818.74 1117.55 814.518 1123.79 814.518 cv
cp
f
1154.99 814.613 mo
1154.99 818.451 li
1150.48 817.924 1146.83 820.084 1145.44 823.777 cv
1145.44 838.121 li
1141.6 838.121 li
1141.6 815.094 li
1145.05 815.094 li
1145.05 819.172 li
1146.88 816.148 1150.95 814.277 1154.99 814.613 cv
cp
f
1159.27 838.121 mo
1159.27 815.094 li
1163.1 815.094 li
1163.1 838.121 li
1159.27 838.121 li
cp
1161.18 810.201 mo
1159.84 810.201 1158.69 809.385 1158.69 807.754 cv
1158.69 806.17 1159.84 805.307 1161.18 805.307 cv
1162.53 805.307 1163.68 806.17 1163.68 807.754 cv
1163.68 809.385 1162.53 810.201 1161.18 810.201 cv
cp
f
1181 818.164 mo
1176.3 818.164 1172.56 821.283 1172.56 826.607 cv
1172.56 831.932 1176.3 835.051 1181 835.051 cv
1185.7 835.051 1189.45 831.932 1189.45 826.607 cv
1189.45 821.283 1185.7 818.164 1181 818.164 cv
cp
1181 814.518 mo
1187.29 814.518 1193.28 818.74 1193.28 826.607 cv
1193.28 834.475 1187.29 838.697 1181 838.697 cv
1174.77 838.697 1168.72 834.475 1168.72 826.607 cv
1168.72 818.74 1174.77 814.518 1181 814.518 cv
cp
f
1206.25 814.518 mo
1209.32 814.518 1212.25 815.334 1214.41 816.484 cv
1214.41 820.131 li
1212.49 818.883 1209.27 817.973 1206.49 817.973 cv
1204 817.973 1201.36 818.787 1201.36 821.043 cv
1201.36 826.031 1215.99 823.92 1215.99 832.221 cv
1215.99 837.018 1211.48 838.697 1206.49 838.697 cv
1203.23 838.697 1199.73 837.834 1197.57 836.441 cv
1197.57 832.699 li
1199.92 834.283 1203.42 835.146 1206.3 835.146 cv
1209.56 835.146 1212.15 834.62 1212.15 832.317 cv
1212.15 827.471 1197.47 829.391 1197.47 821.139 cv
1197.47 816.389 1201.93 814.518 1206.25 814.518 cv
cp
f
1228.19 835.387 mo
1231.11 835.387 1234.04 834.188 1236.05 832.029 cv
1236.05 827.807 li
1234.42 827.471 1232.07 827.135 1230.2 827.135 cv
1226.84 827.135 1223.2 828.143 1223.2 831.5 cv
1223.2 834.188 1225.64 835.387 1228.19 835.387 cv
cp
1241.67 835.1 mo
1242.24 835.1 1242.87 834.955 1243.44 834.764 cv
1243.44 837.881 li
1242.53 838.217 1241.52 838.408 1240.56 838.408 cv
1238.69 838.408 1237.01 837.641 1236.34 835.627 cv
1234.04 837.545 1231.11 838.697 1227.37 838.697 cv
1223.29 838.697 1219.26 836.537 1219.26 831.693 cv
1219.26 825.744 1224.73 823.92 1229.67 823.92 cv
1231.69 823.92 1234.13 824.209 1236.05 824.641 cv
1236.05 823.824 li
1236.05 820.371 1233.7 818.068 1229.48 818.068 cv
1225.93 818.068 1223.1 818.932 1221.09 819.795 cv
1221.09 816.053 li
1222.91 815.43 1226.08 814.518 1229.86 814.518 cv
1236.01 814.518 1239.89 817.877 1239.89 824.305 cv
1239.89 833.324 li
1239.89 834.715 1240.66 835.1 1241.67 835.1 cv
cp
f
1247.29 838.121 mo
1247.29 815.094 li
1250.75 815.094 li
1250.75 818.164 li
1252 816.82 1254.73 814.518 1258.61 814.518 cv
1262.07 814.518 1264.61 816.006 1266 818.404 cv
1268.07 816.293 1270.9 814.518 1274.4 814.518 cv
1280.11 814.518 1283.18 818.549 1283.18 823.92 cv
1283.18 838.121 li
1279.34 838.121 li
1279.34 823.824 li
1279.34 820.322 1277.33 818.068 1273.97 818.068 cv
1270.85 818.068 1268.55 820.227 1267.25 821.857 cv
1267.35 822.529 1267.39 823.201 1267.39 823.92 cv
1267.39 838.121 li
1263.56 838.121 li
1263.56 823.824 li
1263.56 820.322 1261.54 818.068 1258.18 818.068 cv
1254.78 818.068 1252.38 820.611 1251.13 822.242 cv
1251.13 838.121 li
1247.29 838.121 li
cp
f
1287.47 845.317 mo
1290.11 834.283 li
1294.19 834.283 li
1290.59 845.317 li
1287.47 845.317 li
cp
f
215.302 872.117 mo
220.82 872.117 224.898 875.908 224.898 881.521 cv
224.898 895.721 li
221.06 895.721 li
221.06 882 li
221.06 877.682 218.422 875.668 214.871 875.668 cv
211.465 875.668 208.923 877.971 207.388 880.273 cv
207.388 895.721 li
203.55 895.721 li
203.55 872.693 li
207.003 872.693 li
207.003 876.1 li
208.539 874.084 211.609 872.117 215.302 872.117 cv
cp
f
231.822 895.721 mo
231.822 872.693 li
235.66 872.693 li
235.66 895.721 li
231.822 895.721 li
cp
233.74 867.801 mo
232.396 867.801 231.246 866.984 231.246 865.354 cv
231.246 863.77 232.396 862.906 233.74 862.906 cv
235.083 862.906 236.236 863.77 236.236 865.354 cv
236.236 866.984 235.083 867.801 233.74 867.801 cv
cp
f
250.297 872.117 mo
253.367 872.117 256.293 872.934 258.451 874.084 cv
258.451 877.73 li
256.533 876.482 253.318 875.572 250.537 875.572 cv
248.041 875.572 245.402 876.387 245.402 878.643 cv
245.402 883.63 260.035 881.521 260.035 889.82 cv
260.035 894.617 255.525 896.297 250.537 896.297 cv
247.273 896.297 243.771 895.434 241.613 894.041 cv
241.613 890.299 li
243.964 891.883 247.466 892.746 250.344 892.746 cv
253.607 892.746 256.197 892.219 256.197 889.917 cv
256.197 885.07 241.517 886.99 241.517 878.738 cv
241.517 873.988 245.979 872.117 250.297 872.117 cv
cp
f
265.324 895.721 mo
265.324 872.693 li
269.162 872.693 li
269.162 895.721 li
265.324 895.721 li
cp
267.242 867.801 mo
265.9 867.801 264.748 866.984 264.748 865.354 cv
264.748 863.77 265.9 862.906 267.242 862.906 cv
268.586 862.906 269.736 863.77 269.736 865.354 cv
269.736 866.984 268.586 867.801 267.242 867.801 cv
cp
f
309.376 872.693 mo
309.376 895.721 li
305.922 895.721 li
305.922 892.314 li
304.387 894.33 301.316 896.297 297.623 896.297 cv
291.625 896.297 288.027 892.506 288.027 886.893 cv
288.027 872.693 li
291.865 872.693 li
291.865 886.414 li
291.865 890.732 294.025 892.746 298.054 892.746 cv
301.46 892.746 304.003 890.443 305.539 888.141 cv
305.539 872.693 li
309.376 872.693 li
cp
f
321.816 864.586 mo
321.816 872.693 li
331.027 872.693 li
331.027 876.245 li
321.816 876.245 li
321.816 888.141 li
321.816 891.643 323.4 892.699 326.757 892.699 cv
328.58 892.699 330.308 892.268 331.843 891.643 cv
331.843 895.193 li
330.115 895.816 327.861 896.248 325.654 896.248 cv
321.193 896.248 318.027 893.85 318.027 888.812 cv
318.027 876.245 li
313.709 876.245 li
313.709 872.693 li
318.027 872.693 li
318.027 865.545 li
321.816 864.586 li
cp
f
355.127 892.986 mo
358.053 892.986 360.978 891.787 362.994 889.628 cv
362.994 885.407 li
361.363 885.07 359.012 884.734 357.14 884.734 cv
353.783 884.734 350.137 885.742 350.137 889.099 cv
350.137 891.787 352.583 892.986 355.127 892.986 cv
cp
368.607 892.699 mo
369.184 892.699 369.807 892.555 370.382 892.363 cv
370.382 895.48 li
369.47 895.816 368.462 896.008 367.503 896.008 cv
365.632 896.008 363.953 895.24 363.281 893.227 cv
360.978 895.145 358.053 896.297 354.31 896.297 cv
350.232 896.297 346.203 894.137 346.203 889.293 cv
346.203 883.344 351.671 881.521 356.613 881.521 cv
358.628 881.521 361.076 881.809 362.994 882.24 cv
362.994 881.424 li
362.994 877.971 360.643 875.668 356.421 875.668 cv
352.871 875.668 350.041 876.531 348.025 877.395 cv
348.025 873.652 li
349.85 873.029 353.015 872.117 356.804 872.117 cv
362.945 872.117 366.832 875.477 366.832 881.904 cv
366.832 890.924 li
366.832 892.314 367.6 892.699 368.607 892.699 cv
cp
f
378.168 860.699 mo
378.168 895.721 li
374.33 895.721 li
374.33 860.699 li
378.168 860.699 li
cp
f
385.466 895.721 mo
385.466 872.693 li
389.304 872.693 li
389.304 895.721 li
385.466 895.721 li
cp
387.384 867.801 mo
386.041 867.801 384.891 866.984 384.891 865.354 cv
384.891 863.77 386.041 862.906 387.384 862.906 cv
388.729 862.906 389.881 863.77 389.881 865.354 cv
389.881 866.984 388.729 867.801 387.384 867.801 cv
cp
f
406.867 875.668 mo
402.406 875.668 398.759 878.93 398.759 884.207 cv
398.759 889.484 402.406 892.746 406.867 892.746 cv
410.994 892.746 414.064 890.061 415.359 887.086 cv
415.359 881.329 li
414.064 878.354 410.994 875.668 406.867 875.668 cv
cp
406.435 872.117 mo
410.85 872.117 413.679 874.18 415.742 876.531 cv
415.742 872.693 li
419.197 872.693 li
419.197 906.275 li
415.359 906.275 li
415.359 892.268 li
413.679 894.234 410.85 896.297 406.435 896.297 cv
399.863 896.297 394.921 891.115 394.921 884.207 cv
394.921 877.299 399.863 872.117 406.435 872.117 cv
cp
f
447.375 872.693 mo
447.375 895.721 li
443.919 895.721 li
443.919 892.314 li
442.384 894.33 439.314 896.297 435.621 896.297 cv
429.623 896.297 426.025 892.506 426.025 886.893 cv
426.025 872.693 li
429.863 872.693 li
429.863 886.414 li
429.863 890.732 432.023 892.746 436.052 892.746 cv
439.458 892.746 442.002 890.443 443.537 888.141 cv
443.537 872.693 li
447.375 872.693 li
cp
f
454.585 895.721 mo
454.585 872.693 li
458.423 872.693 li
458.423 895.721 li
454.585 895.721 li
cp
456.503 867.801 mo
455.162 867.801 454.009 866.984 454.009 865.354 cv
454.009 863.77 455.162 862.906 456.503 862.906 cv
457.847 862.906 458.998 863.77 458.998 865.354 cv
458.998 866.984 457.847 867.801 456.503 867.801 cv
cp
f
475.986 875.668 mo
471.525 875.668 467.878 878.93 467.878 884.207 cv
467.878 889.484 471.525 892.746 475.986 892.746 cv
480.111 892.746 483.181 890.061 484.478 887.086 cv
484.478 881.329 li
483.181 878.354 480.111 875.668 475.986 875.668 cv
cp
488.316 862.139 mo
488.316 895.721 li
484.861 895.721 li
484.861 891.883 li
482.799 894.234 479.968 896.297 475.554 896.297 cv
468.982 896.297 464.041 891.115 464.041 884.207 cv
464.041 877.299 468.982 872.117 475.554 872.117 cv
479.968 872.117 482.799 874.18 484.478 876.146 cv
484.478 862.139 li
488.316 862.139 li
cp
f
517.505 875.668 mo
513.572 875.668 509.925 878.018 509.638 882.527 cv
524.558 882.527 li
524.895 880.083 523.359 875.668 517.505 875.668 cv
cp
517.267 872.117 mo
526.142 872.117 529.404 879.361 527.964 885.887 cv
509.638 885.887 li
510.119 890.732 514.484 892.746 519.136 892.746 cv
521.968 892.746 524.75 891.979 526.716 890.875 cv
526.716 894.617 li
524.607 895.721 521.583 896.297 518.562 896.297 cv
511.75 896.297 505.8 892.41 505.8 884.207 cv
505.8 876.146 511.797 872.117 517.267 872.117 cv
cp
f
552.109 872.693 mo
543.666 883.871 li
552.588 895.721 li
548.175 895.721 li
541.458 886.605 li
534.693 895.721 li
530.281 895.721 li
539.251 883.871 li
530.76 872.693 li
535.173 872.693 li
541.458 881.186 li
547.695 872.693 li
552.109 872.693 li
cp
f
578.801 875.668 mo
574.867 875.668 571.22 878.018 570.933 882.527 cv
585.853 882.527 li
586.189 880.083 584.654 875.668 578.801 875.668 cv
cp
578.56 872.117 mo
587.437 872.117 590.699 879.361 589.259 885.887 cv
570.933 885.887 li
571.414 890.732 575.779 892.746 580.431 892.746 cv
583.264 892.746 586.045 891.979 588.011 890.875 cv
588.011 894.617 li
585.902 895.721 582.879 896.297 579.857 896.297 cv
573.045 896.297 567.095 892.41 567.095 884.207 cv
567.095 876.146 573.091 872.117 578.56 872.117 cv
cp
f
601.986 892.986 mo
604.912 892.986 607.837 891.787 609.853 889.628 cv
609.853 885.407 li
608.222 885.07 605.871 884.734 604 884.734 cv
600.642 884.734 596.996 885.742 596.996 889.099 cv
596.996 891.787 599.443 892.986 601.986 892.986 cv
cp
615.466 892.699 mo
616.043 892.699 616.666 892.555 617.242 892.363 cv
617.242 895.48 li
616.33 895.816 615.322 896.008 614.363 896.008 cv
612.492 896.008 610.812 895.24 610.14 893.227 cv
607.837 895.145 604.912 896.297 601.17 896.297 cv
597.092 896.297 593.062 894.137 593.062 889.293 cv
593.062 883.344 598.531 881.521 603.472 881.521 cv
605.488 881.521 607.935 881.809 609.853 882.24 cv
609.853 881.424 li
609.853 877.971 607.502 875.668 603.281 875.668 cv
599.73 875.668 596.9 876.531 594.884 877.395 cv
594.884 873.652 li
596.708 873.029 599.875 872.117 603.664 872.117 cv
609.804 872.117 613.691 875.477 613.691 881.904 cv
613.691 890.924 li
613.691 892.314 614.458 892.699 615.466 892.699 cv
cp
f
642.832 872.117 mo
645.423 872.117 647.966 872.693 649.933 873.988 cv
649.933 877.73 li
648.205 876.387 645.759 875.668 643.313 875.668 cv
638.851 875.668 634.197 878.162 634.197 884.207 cv
634.197 890.107 638.707 892.746 643.216 892.746 cv
645.71 892.746 648.253 892.027 650.171 890.875 cv
650.171 894.713 li
648.013 895.77 645.566 896.297 642.689 896.297 cv
636.644 896.297 630.359 892.506 630.359 884.303 cv
630.359 875.908 636.835 872.117 642.832 872.117 cv
cp
f
666.015 875.764 mo
661.314 875.764 657.572 878.883 657.572 884.207 cv
657.572 889.531 661.314 892.651 666.015 892.651 cv
670.716 892.651 674.458 889.531 674.458 884.207 cv
674.458 878.883 670.716 875.764 666.015 875.764 cv
cp
666.015 872.117 mo
672.3 872.117 678.296 876.34 678.296 884.207 cv
678.296 892.074 672.3 896.297 666.015 896.297 cv
659.779 896.297 653.734 892.074 653.734 884.207 cv
653.734 876.34 659.779 872.117 666.015 872.117 cv
cp
f
683.83 895.721 mo
683.83 872.693 li
687.283 872.693 li
687.283 875.764 li
688.531 874.42 691.266 872.117 695.15 872.117 cv
698.605 872.117 701.148 873.605 702.539 876.004 cv
704.601 873.893 707.432 872.117 710.933 872.117 cv
716.642 872.117 719.713 876.146 719.713 881.521 cv
719.713 895.721 li
715.875 895.721 li
715.875 881.424 li
715.875 877.922 713.861 875.668 710.501 875.668 cv
707.384 875.668 705.082 877.826 703.787 879.457 cv
703.882 880.129 703.929 880.801 703.929 881.521 cv
703.929 895.721 li
700.091 895.721 li
700.091 881.424 li
700.091 877.922 698.078 875.668 694.719 875.668 cv
691.313 875.668 688.914 878.211 687.667 879.842 cv
687.667 895.721 li
683.83 895.721 li
cp
f
726.55 895.721 mo
726.55 872.693 li
730.003 872.693 li
730.003 875.764 li
731.251 874.42 733.986 872.117 737.871 872.117 cv
741.326 872.117 743.869 873.605 745.259 876.004 cv
747.322 873.893 750.152 872.117 753.654 872.117 cv
759.363 872.117 762.433 876.146 762.433 881.521 cv
762.433 895.721 li
758.595 895.721 li
758.595 881.424 li
758.595 877.922 756.582 875.668 753.222 875.668 cv
750.105 875.668 747.802 877.826 746.507 879.457 cv
746.604 880.129 746.65 880.801 746.65 881.521 cv
746.65 895.721 li
742.813 895.721 li
742.813 881.424 li
742.813 877.922 740.798 875.668 737.439 875.668 cv
734.033 875.668 731.634 878.211 730.388 879.842 cv
730.388 895.721 li
726.55 895.721 li
cp
f
779.968 875.764 mo
775.268 875.764 771.525 878.883 771.525 884.207 cv
771.525 889.531 775.268 892.651 779.968 892.651 cv
784.669 892.651 788.412 889.531 788.412 884.207 cv
788.412 878.883 784.669 875.764 779.968 875.764 cv
cp
779.968 872.117 mo
786.253 872.117 792.25 876.34 792.25 884.207 cv
792.25 892.074 786.253 896.297 779.968 896.297 cv
773.732 896.297 767.687 892.074 767.687 884.207 cv
767.687 876.34 773.732 872.117 779.968 872.117 cv
cp
f
808.145 875.668 mo
803.683 875.668 800.037 878.93 800.037 884.207 cv
800.037 889.484 803.683 892.746 808.145 892.746 cv
812.271 892.746 815.342 890.061 816.636 887.086 cv
816.636 881.329 li
815.342 878.354 812.271 875.668 808.145 875.668 cv
cp
820.474 862.139 mo
820.474 895.721 li
817.02 895.721 li
817.02 891.883 li
814.957 894.234 812.126 896.297 807.713 896.297 cv
801.14 896.297 796.199 891.115 796.199 884.207 cv
796.199 877.299 801.14 872.117 807.713 872.117 cv
812.126 872.117 814.957 874.18 816.636 876.146 cv
816.636 862.139 li
820.474 862.139 li
cp
f
827.685 895.721 mo
827.685 872.693 li
831.523 872.693 li
831.523 895.721 li
827.685 895.721 li
cp
829.603 867.801 mo
828.259 867.801 827.109 866.984 827.109 865.354 cv
827.109 863.77 828.259 862.906 829.603 862.906 cv
830.947 862.906 832.099 863.77 832.099 865.354 cv
832.099 866.984 830.947 867.801 829.603 867.801 cv
cp
f
861.566 872.117 mo
864.158 872.117 866.701 872.693 868.668 873.988 cv
868.668 877.73 li
866.939 876.387 864.494 875.668 862.046 875.668 cv
857.585 875.668 852.931 878.162 852.931 884.207 cv
852.931 890.107 857.441 892.746 861.951 892.746 cv
864.445 892.746 866.988 892.027 868.906 890.875 cv
868.906 894.713 li
866.748 895.77 864.301 896.297 861.424 896.297 cv
855.378 896.297 849.093 892.506 849.093 884.303 cv
849.093 875.908 855.57 872.117 861.566 872.117 cv
cp
f
884.75 875.764 mo
880.048 875.764 876.306 878.883 876.306 884.207 cv
876.306 889.531 880.048 892.651 884.75 892.651 cv
889.451 892.651 893.193 889.531 893.193 884.207 cv
893.193 878.883 889.451 875.764 884.75 875.764 cv
cp
884.75 872.117 mo
891.035 872.117 897.031 876.34 897.031 884.207 cv
897.031 892.074 891.035 896.297 884.75 896.297 cv
878.514 896.297 872.468 892.074 872.468 884.207 cv
872.468 876.34 878.514 872.117 884.75 872.117 cv
cp
f
914.316 872.117 mo
919.834 872.117 923.912 875.908 923.912 881.521 cv
923.912 895.721 li
920.074 895.721 li
920.074 882 li
920.074 877.682 917.435 875.668 913.884 875.668 cv
910.478 875.668 907.938 877.971 906.402 880.273 cv
906.402 895.721 li
902.564 895.721 li
902.564 872.693 li
906.017 872.693 li
906.017 876.1 li
907.552 874.084 910.623 872.117 914.316 872.117 cv
cp
f
938.176 872.117 mo
941.246 872.117 944.171 872.934 946.33 874.084 cv
946.33 877.73 li
944.412 876.482 941.197 875.572 938.416 875.572 cv
935.92 875.572 933.281 876.387 933.281 878.643 cv
933.281 883.63 947.914 881.521 947.914 889.82 cv
947.914 894.617 943.404 896.297 938.416 896.297 cv
935.152 896.297 931.65 895.434 929.492 894.041 cv
929.492 890.299 li
931.843 891.883 935.345 892.746 938.222 892.746 cv
941.486 892.746 944.076 892.219 944.076 889.917 cv
944.076 885.07 929.396 886.99 929.396 878.738 cv
929.396 873.988 933.857 872.117 938.176 872.117 cv
cp
f
963.229 875.668 mo
959.294 875.668 955.648 878.018 955.361 882.527 cv
970.281 882.527 li
970.617 880.083 969.082 875.668 963.229 875.668 cv
cp
962.99 872.117 mo
971.865 872.117 975.126 879.361 973.688 885.887 cv
955.361 885.887 li
955.841 890.732 960.207 892.746 964.859 892.746 cv
967.691 892.746 970.472 891.979 972.439 890.875 cv
972.439 894.617 li
970.33 895.721 967.307 896.297 964.285 896.297 cv
957.472 896.297 951.523 892.41 951.523 884.207 cv
951.523 876.146 957.519 872.117 962.99 872.117 cv
cp
f
989.773 875.668 mo
985.312 875.668 981.666 878.93 981.666 884.207 cv
981.666 889.484 985.312 892.746 989.773 892.746 cv
993.9 892.746 996.971 890.061 998.265 887.086 cv
998.265 881.329 li
996.971 878.354 993.9 875.668 989.773 875.668 cv
cp
989.342 872.117 mo
993.755 872.117 996.586 874.18 998.648 876.531 cv
998.648 872.693 li
1002.1 872.693 li
1002.1 906.275 li
998.265 906.275 li
998.265 892.268 li
996.586 894.234 993.755 896.297 989.342 896.297 cv
982.769 896.297 977.828 891.115 977.828 884.207 cv
977.828 877.299 982.769 872.117 989.342 872.117 cv
cp
f
1030.28 872.693 mo
1030.28 895.721 li
1026.82 895.721 li
1026.82 892.314 li
1025.29 894.33 1022.22 896.297 1018.52 896.297 cv
1012.53 896.297 1008.93 892.506 1008.93 886.893 cv
1008.93 872.693 li
1012.77 872.693 li
1012.77 886.414 li
1012.77 890.732 1014.93 892.746 1018.96 892.746 cv
1022.36 892.746 1024.91 890.443 1026.44 888.141 cv
1026.44 872.693 li
1030.28 872.693 li
cp
f
1044.4 892.986 mo
1047.32 892.986 1050.25 891.787 1052.27 889.628 cv
1052.27 885.407 li
1050.63 885.07 1048.28 884.734 1046.41 884.734 cv
1043.05 884.734 1039.41 885.742 1039.41 889.099 cv
1039.41 891.787 1041.85 892.986 1044.4 892.986 cv
cp
1057.88 892.699 mo
1058.46 892.699 1059.08 892.555 1059.65 892.363 cv
1059.65 895.48 li
1058.74 895.816 1057.73 896.008 1056.77 896.008 cv
1054.9 896.008 1053.22 895.24 1052.55 893.227 cv
1050.25 895.145 1047.32 896.297 1043.58 896.297 cv
1039.5 896.297 1035.47 894.137 1035.47 889.293 cv
1035.47 883.344 1040.94 881.521 1045.88 881.521 cv
1047.9 881.521 1050.35 881.809 1052.27 882.24 cv
1052.27 881.424 li
1052.27 877.971 1049.91 875.668 1045.69 875.668 cv
1042.14 875.668 1039.31 876.531 1037.3 877.395 cv
1037.3 873.652 li
1039.12 873.029 1042.29 872.117 1046.08 872.117 cv
1052.22 872.117 1056.1 875.477 1056.1 881.904 cv
1056.1 890.924 li
1056.1 892.314 1056.87 892.699 1057.88 892.699 cv
cp
f
1068.64 864.586 mo
1068.64 872.693 li
1077.85 872.693 li
1077.85 876.245 li
1068.64 876.245 li
1068.64 888.141 li
1068.64 891.643 1070.22 892.699 1073.58 892.699 cv
1075.4 892.699 1077.13 892.268 1078.67 891.643 cv
1078.67 895.193 li
1076.94 895.816 1074.68 896.248 1072.48 896.248 cv
1068.02 896.248 1064.85 893.85 1064.85 888.812 cv
1064.85 876.245 li
1060.53 876.245 li
1060.53 872.693 li
1064.85 872.693 li
1064.85 865.545 li
1068.64 864.586 li
cp
f
1104.05 872.693 mo
1104.05 895.721 li
1100.6 895.721 li
1100.6 892.314 li
1099.06 894.33 1095.99 896.297 1092.3 896.297 cv
1086.3 896.297 1082.7 892.506 1082.7 886.893 cv
1082.7 872.693 li
1086.54 872.693 li
1086.54 886.414 li
1086.54 890.732 1088.7 892.746 1092.73 892.746 cv
1096.14 892.746 1098.68 890.443 1100.22 888.141 cv
1100.22 872.693 li
1104.05 872.693 li
cp
f
1124.55 872.213 mo
1124.55 876.051 li
1120.04 875.523 1116.4 877.682 1115.01 881.377 cv
1115.01 895.721 li
1111.17 895.721 li
1111.17 872.693 li
1114.62 872.693 li
1114.62 876.771 li
1116.44 873.748 1120.52 871.877 1124.55 872.213 cv
cp
f
1135.31 896.152 mo
1133.96 896.152 1132.77 895.337 1132.77 893.705 cv
1132.77 892.123 1133.96 891.307 1135.31 891.307 cv
1136.65 891.307 1137.8 892.123 1137.8 893.705 cv
1137.8 895.337 1136.65 896.152 1135.31 896.152 cv
cp
1133.39 885.742 mo
1133.39 879.457 1142.07 875.572 1142.07 870.055 cv
1142.07 866.602 1139.14 865.4 1134.68 865.4 cv
1131.42 865.4 1128.4 866.553 1126.05 867.943 cv
1126.05 864.106 li
1128.49 862.666 1131.71 861.564 1135.31 861.564 cv
1141.4 861.564 1146.15 864.25 1146.15 869.671 cv
1146.15 876.482 1137.23 880.465 1137.23 885.742 cv
1133.39 885.742 li
cp
f
206.24 439.746 mo
206.24 327.766 li
234.234 327.766 li
278.068 392.074 li
277.588 386.795 277.428 379.756 277.428 373.518 cv
277.428 327.766 li
307.023 327.766 li
307.023 439.746 li
279.027 439.746 li
235.195 375.598 li
235.675 380.875 235.834 387.914 235.834 393.995 cv
235.834 439.746 li
206.24 439.746 li
cp
.133333 .141176 .231373 rgb
f
361.113 380.236 mo
353.595 380.236 347.357 385.195 347.357 393.193 cv
373.111 393.193 li
373.912 389.514 371.992 380.236 361.113 380.236 cv
cp
360.474 360.559 mo
393.429 360.559 403.348 386.154 397.908 409.512 cv
347.675 409.512 li
350.716 417.99 361.113 421.35 372.152 421.35 cv
380.791 421.35 387.83 420.07 394.228 417.67 cv
394.228 437.826 li
387.029 440.387 377.912 442.146 365.753 442.146 cv
340.479 442.146 320.16 427.748 320.16 401.352 cv
320.16 371.277 343.677 360.559 360.474 360.559 cv
cp
f
452.312 382.955 mo
440.794 382.955 435.835 392.395 435.835 401.352 cv
435.835 410.311 440.794 419.75 452.312 419.75 cv
459.832 419.75 465.431 415.109 467.83 410.15 cv
467.83 392.555 li
465.431 387.596 459.832 382.955 452.312 382.955 cv
cp
444.955 360.559 mo
458.713 360.559 467.191 366.959 471.029 373.357 cv
471.029 362.959 li
495.025 362.959 li
495.025 474.939 li
467.83 474.939 li
467.83 433.508 li
463.191 438.307 455.671 442.146 444.955 442.146 cv
419.199 442.146 407.84 421.189 407.84 401.352 cv
407.84 381.516 419.199 360.559 444.955 360.559 cv
cp
f
589.744 362.959 mo
589.744 439.746 li
565.748 439.746 li
565.748 430.947 li
559.349 437.826 551.511 442.146 541.273 442.146 cv
520.156 442.146 510.558 427.908 510.558 410.631 cv
510.558 362.959 li
537.753 362.959 li
537.753 406.951 li
537.753 415.109 542.712 418.95 549.431 418.95 cv
555.509 418.95 560.15 415.27 562.549 412.23 cv
562.549 362.959 li
589.744 362.959 li
cp
f
643.189 380.236 mo
635.671 380.236 629.433 385.195 629.433 393.193 cv
655.187 393.193 li
655.988 389.514 654.068 380.236 643.189 380.236 cv
cp
642.55 360.559 mo
675.505 360.559 685.424 386.154 679.984 409.512 cv
629.751 409.512 li
632.793 417.99 643.189 421.35 654.229 421.35 cv
662.867 421.35 669.906 420.07 676.304 417.67 cv
676.304 437.826 li
669.105 440.387 659.988 442.146 647.83 442.146 cv
622.554 442.146 602.236 427.748 602.236 401.352 cv
602.236 371.277 625.753 360.559 642.55 360.559 cv
cp
f
769.746 382.955 mo
762.229 382.955 756.628 387.596 754.229 392.555 cv
754.229 410.15 li
756.628 415.109 762.229 419.75 769.746 419.75 cv
781.263 419.75 786.224 410.311 786.224 401.352 cv
786.224 392.395 781.263 382.955 769.746 382.955 cv
cp
777.105 360.559 mo
802.861 360.559 814.218 381.516 814.218 401.352 cv
814.218 421.189 802.861 442.146 777.105 442.146 cv
766.387 442.146 758.869 438.307 754.229 433.508 cv
754.229 474.939 li
727.033 474.939 li
727.033 362.959 li
751.029 362.959 li
751.029 373.357 li
754.869 366.959 763.348 360.559 777.105 360.559 cv
cp
f
866.224 384.555 mo
855.027 384.555 851.027 392.715 851.027 401.352 cv
851.027 409.99 855.027 418.151 866.224 418.151 cv
877.423 418.151 881.421 409.99 881.421 401.352 cv
881.421 392.715 877.423 384.555 866.224 384.555 cv
cp
866.224 360.559 mo
889.262 360.559 909.418 374.156 909.418 401.352 cv
909.418 428.549 889.262 442.146 866.224 442.146 cv
843.189 442.146 823.031 428.549 823.031 401.352 cv
823.031 374.156 843.189 360.559 866.224 360.559 cv
cp
f
975.982 361.359 mo
975.982 387.754 li
965.263 385.355 953.904 388.715 949.105 396.075 cv
949.105 439.746 li
921.91 439.746 li
921.91 362.959 li
945.906 362.959 li
945.906 373.357 li
951.185 365.678 960.943 359.76 975.982 361.359 cv
cp
f
1040.62 361.359 mo
1040.62 387.754 li
1029.9 385.355 1018.54 388.715 1013.75 396.075 cv
1013.75 439.746 li
986.55 439.746 li
986.55 362.959 li
1010.55 362.959 li
1010.55 373.357 li
1015.83 365.678 1025.58 359.76 1040.62 361.359 cv
cp
f
1089.26 384.555 mo
1078.07 384.555 1074.07 392.715 1074.07 401.352 cv
1074.07 409.99 1078.07 418.151 1089.26 418.151 cv
1100.46 418.151 1104.46 409.99 1104.46 401.352 cv
1104.46 392.715 1100.46 384.555 1089.26 384.555 cv
cp
1089.26 360.559 mo
1112.3 360.559 1132.46 374.156 1132.46 401.352 cv
1132.46 428.549 1112.3 442.146 1089.26 442.146 cv
1066.23 442.146 1046.07 428.549 1046.07 401.352 cv
1046.07 374.156 1066.23 360.559 1089.26 360.559 cv
cp
f
244.473 574.955 mo
232.955 574.955 227.996 584.395 227.996 593.352 cv
227.996 602.311 232.955 611.75 244.473 611.75 cv
251.992 611.75 257.591 607.109 259.99 602.15 cv
259.99 584.555 li
257.591 579.596 251.992 574.955 244.473 574.955 cv
cp
237.115 552.558 mo
250.873 552.558 259.352 558.959 263.189 565.357 cv
263.189 554.959 li
287.185 554.959 li
287.185 666.939 li
259.99 666.939 li
259.99 625.508 li
255.352 630.307 247.832 634.146 237.115 634.146 cv
211.359 634.146 200 613.189 200 593.352 cv
200 573.516 211.359 552.558 237.115 552.558 cv
cp
f
381.904 554.959 mo
381.904 631.746 li
357.908 631.746 li
357.908 622.947 li
351.51 629.826 343.671 634.146 333.433 634.146 cv
312.316 634.146 302.718 619.908 302.718 602.631 cv
302.718 554.959 li
329.914 554.959 li
329.914 598.951 li
329.914 607.109 334.873 610.949 341.591 610.949 cv
347.669 610.949 352.31 607.269 354.709 604.23 cv
354.709 554.959 li
381.904 554.959 li
cp
f
398.396 631.746 mo
398.396 554.959 li
425.591 554.959 li
425.591 631.746 li
398.396 631.746 li
cp
411.994 544.08 mo
403.836 544.08 396.477 539.602 396.477 529.043 cv
396.477 518.645 403.836 514.166 411.994 514.166 cv
420.312 514.166 427.511 518.645 427.511 529.043 cv
427.511 539.602 420.312 544.08 411.994 544.08 cv
cp
f
472.789 552.558 mo
483.988 552.558 493.586 555.279 501.744 559.119 cv
501.744 580.715 li
495.025 576.076 483.667 572.557 474.708 572.557 cv
471.35 572.557 467.349 573.195 467.349 576.395 cv
467.349 587.113 507.664 580.875 507.664 609.35 cv
507.664 628.547 490.386 634.146 471.029 634.146 cv
459.031 634.146 448.314 631.746 440.154 627.107 cv
440.154 605.51 li
448.632 611.109 460.471 613.67 469.589 613.67 cv
476.309 613.67 479.667 612.549 479.667 609.83 cv
479.667 599.752 439.355 604.711 439.355 577.035 cv
439.355 558.318 455.671 552.558 472.789 552.558 cv
cp
f
560.466 574.955 mo
548.949 574.955 543.99 584.395 543.99 593.352 cv
543.99 602.311 548.949 611.75 560.466 611.75 cv
567.986 611.75 573.585 607.109 575.984 602.15 cv
575.984 584.555 li
573.585 579.596 567.986 574.955 560.466 574.955 cv
cp
553.109 552.558 mo
566.867 552.558 575.345 558.959 579.183 565.357 cv
579.183 554.959 li
603.18 554.959 li
603.18 666.939 li
575.984 666.939 li
575.984 625.508 li
571.345 630.307 563.826 634.146 553.109 634.146 cv
527.354 634.146 515.994 613.189 515.994 593.352 cv
515.994 573.516 527.354 552.558 553.109 552.558 cv
cp
f
697.898 554.959 mo
697.898 631.746 li
673.902 631.746 li
673.902 622.947 li
667.503 629.826 659.666 634.146 649.427 634.146 cv
628.31 634.146 618.712 619.908 618.712 602.631 cv
618.712 554.959 li
645.908 554.959 li
645.908 598.951 li
645.908 607.109 650.867 610.949 657.585 610.949 cv
663.664 610.949 668.304 607.269 670.703 604.23 cv
670.703 554.959 li
697.898 554.959 li
cp
f
747.025 615.748 mo
751.504 615.748 755.503 614.789 759.664 611.75 cv
759.664 601.352 li
757.263 600.551 753.583 599.912 749.904 599.912 cv
743.505 599.912 737.746 602.15 737.746 608.23 cv
737.746 612.229 741.266 615.748 747.025 615.748 cv
cp
792.138 614.629 mo
793.097 614.629 794.216 614.469 795.178 614.148 cv
795.178 630.945 li
791.498 632.387 786.539 633.346 781.419 633.346 cv
772.941 633.346 766.701 630.307 763.183 624.867 cv
755.824 630.626 747.345 634.146 736.466 634.146 cv
721.75 634.146 709.752 625.347 709.752 610.469 cv
709.752 591.113 728.148 585.193 743.025 585.193 cv
748.785 585.193 754.544 585.834 759.664 586.953 cv
759.664 584.234 li
759.664 578.795 754.544 574.635 743.666 574.635 cv
733.587 574.635 724.309 577.516 716.791 580.555 cv
716.791 557.678 li
723.189 555.6 735.347 552.558 746.705 552.558 cv
771.181 552.558 786.859 561.037 786.859 588.393 cv
786.859 609.83 li
786.859 613.51 789.417 614.629 792.138 614.629 cv
cp
f
804.949 631.746 mo
804.949 554.959 li
828.945 554.959 li
828.945 563.117 li
832.945 558.318 841.583 552.558 852.621 552.558 cv
864.141 552.558 871.178 557.199 875.337 563.117 cv
881.576 557.359 889.736 552.558 899.814 552.558 cv
922.85 552.558 928.129 571.117 928.129 582.475 cv
928.129 631.746 li
900.933 631.746 li
900.933 584.873 li
900.933 578.795 896.933 575.756 892.134 575.756 cv
888.455 575.756 884.296 577.355 880.938 580.715 cv
880.938 581.355 880.938 581.834 880.938 582.475 cv
880.938 631.746 li
853.742 631.746 li
853.742 584.873 li
853.742 578.795 849.742 575.756 844.943 575.756 cv
840.623 575.756 835.664 577.997 832.145 582.475 cv
832.145 631.746 li
804.949 631.746 li
cp
f
1014.06 572.236 mo
1006.54 572.236 1000.3 577.195 1000.3 585.193 cv
1026.06 585.193 li
1026.86 581.514 1024.94 572.236 1014.06 572.236 cv
cp
1013.42 552.558 mo
1046.37 552.558 1056.29 578.154 1050.85 601.512 cv
1000.62 601.512 li
1003.66 609.99 1014.06 613.35 1025.1 613.35 cv
1033.74 613.35 1040.77 612.07 1047.17 609.67 cv
1047.17 629.826 li
1039.97 632.387 1030.86 634.146 1018.7 634.146 cv
993.423 634.146 973.105 619.748 973.105 593.352 cv
973.105 563.277 996.623 552.558 1013.42 552.558 cv
cp
f
1095.34 552.558 mo
1106.54 552.558 1116.13 555.279 1124.29 559.119 cv
1124.29 580.715 li
1117.57 576.076 1106.22 572.557 1097.26 572.557 cv
1093.9 572.557 1089.9 573.195 1089.9 576.395 cv
1089.9 587.113 1130.21 580.875 1130.21 609.35 cv
1130.21 628.547 1112.94 634.146 1093.58 634.146 cv
1081.58 634.146 1070.86 631.746 1062.7 627.107 cv
1062.7 605.51 li
1071.18 611.109 1083.02 613.67 1092.14 613.67 cv
1098.86 613.67 1102.22 612.549 1102.22 609.83 cv
1102.22 599.752 1061.9 604.711 1061.9 577.035 cv
1061.9 558.318 1078.22 552.558 1095.34 552.558 cv
cp
f
1174.86 526.963 mo
1174.86 554.959 li
1195.66 554.959 li
1195.66 577.355 li
1174.86 577.355 li
1174.86 602.311 li
1174.86 608.391 1178.06 611.75 1184.94 611.75 cv
1189.42 611.75 1193.1 611.27 1197.26 609.83 cv
1197.26 630.945 li
1191.18 633.025 1184.3 634.146 1176.46 634.146 cv
1161.58 634.146 1147.66 628.066 1147.66 607.75 cv
1147.66 577.355 li
1135.51 577.355 li
1135.51 554.959 li
1147.66 554.959 li
1147.66 533.363 li
1174.86 526.963 li
cp
f
201.966 1614.14 mo
201.966 1581.8 li
206.523 1581.8 li
216.887 1598.16 li
219.285 1601.95 221.156 1605.36 222.691 1608.67 cv
222.787 1608.62 li
222.402 1604.3 222.306 1600.37 222.306 1595.33 cv
222.306 1581.8 li
226.24 1581.8 li
226.24 1614.14 li
222.019 1614.14 li
211.752 1597.73 li
209.498 1594.13 207.34 1590.44 205.709 1586.94 cv
205.564 1586.98 li
205.804 1591.06 205.9 1594.95 205.9 1600.32 cv
205.9 1614.14 li
201.966 1614.14 li
cp
f
248.134 1600.27 mo
248.181 1597.59 247.031 1593.41 242.281 1593.41 cv
238.011 1593.41 236.14 1597.34 235.805 1600.27 cv
248.134 1600.27 li
cp
235.758 1603.29 mo
235.853 1609 239.498 1611.35 243.72 1611.35 cv
246.742 1611.35 248.566 1610.82 250.148 1610.16 cv
250.869 1613.18 li
249.38 1613.85 246.839 1614.62 243.145 1614.62 cv
235.996 1614.62 231.726 1609.91 231.726 1602.91 cv
231.726 1595.91 235.853 1590.39 242.617 1590.39 cv
250.197 1590.39 252.212 1597.06 252.212 1601.33 cv
252.212 1602.19 252.115 1602.86 252.068 1603.29 cv
235.758 1603.29 li
cp
f
257.453 1597.2 mo
257.453 1594.8 257.404 1592.84 257.261 1590.92 cv
260.955 1590.92 li
261.146 1594.66 li
261.291 1594.66 li
262.585 1592.45 264.746 1590.39 268.583 1590.39 cv
271.75 1590.39 274.148 1592.31 275.156 1595.04 cv
275.251 1595.04 li
275.97 1593.75 276.883 1592.74 277.842 1592.02 cv
279.232 1590.96 280.767 1590.39 282.974 1590.39 cv
286.045 1590.39 290.603 1592.41 290.603 1600.46 cv
290.603 1614.14 li
286.477 1614.14 li
286.477 1600.99 li
286.477 1596.53 284.845 1593.84 281.439 1593.84 cv
279.041 1593.84 277.17 1595.62 276.451 1597.68 cv
276.259 1598.26 276.115 1599.02 276.115 1599.79 cv
276.115 1614.14 li
271.99 1614.14 li
271.99 1600.23 li
271.99 1596.53 270.357 1593.84 267.144 1593.84 cv
264.505 1593.84 262.585 1595.95 261.914 1598.07 cv
261.675 1598.69 261.578 1599.41 261.578 1600.13 cv
261.578 1614.14 li
257.453 1614.14 li
257.453 1597.2 li
cp
f
300.074 1602.57 mo
300.074 1607.66 303.002 1611.5 307.127 1611.5 cv
311.156 1611.5 314.179 1607.71 314.179 1602.48 cv
314.179 1598.54 312.212 1593.55 307.222 1593.55 cv
302.234 1593.55 300.074 1598.16 300.074 1602.57 cv
cp
318.496 1602.34 mo
318.496 1610.92 312.549 1614.66 306.935 1614.66 cv
300.65 1614.66 295.805 1610.06 295.805 1602.72 cv
295.805 1594.95 300.89 1590.39 307.318 1590.39 cv
313.988 1590.39 318.496 1595.23 318.496 1602.34 cv
cp
f
348.74 1600.27 mo
348.787 1597.59 347.636 1593.41 342.887 1593.41 cv
338.617 1593.41 336.746 1597.34 336.41 1600.27 cv
348.74 1600.27 li
cp
336.363 1603.29 mo
336.459 1609 340.103 1611.35 344.326 1611.35 cv
347.347 1611.35 349.171 1610.82 350.753 1610.16 cv
351.475 1613.18 li
349.986 1613.85 347.445 1614.62 343.75 1614.62 cv
336.602 1614.62 332.332 1609.91 332.332 1602.91 cv
332.332 1595.91 336.459 1590.39 343.222 1590.39 cv
350.803 1590.39 352.818 1597.06 352.818 1601.33 cv
352.818 1602.19 352.721 1602.86 352.673 1603.29 cv
336.363 1603.29 li
cp
f
358.06 1597.2 mo
358.06 1594.8 358.013 1592.84 357.869 1590.92 cv
361.611 1590.92 li
361.85 1594.76 li
361.947 1594.76 li
363.097 1592.55 365.785 1590.39 369.623 1590.39 cv
372.835 1590.39 377.826 1592.31 377.826 1600.27 cv
377.826 1614.14 li
373.603 1614.14 li
373.603 1600.75 li
373.603 1597.01 372.213 1593.89 368.23 1593.89 cv
365.449 1593.89 363.289 1595.86 362.57 1598.21 cv
362.378 1598.73 362.283 1599.46 362.283 1600.18 cv
362.283 1614.14 li
358.06 1614.14 li
358.06 1597.2 li
cp
f
384.699 1614.14 mo
384.699 1590.92 li
388.922 1590.92 li
388.922 1614.14 li
384.699 1614.14 li
cp
389.4 1584.39 mo
389.449 1585.83 388.392 1586.98 386.714 1586.98 cv
385.226 1586.98 384.172 1585.83 384.172 1584.39 cv
384.172 1582.91 385.275 1581.75 386.81 1581.75 cv
388.392 1581.75 389.4 1582.91 389.4 1584.39 cv
cp
f
395.932 1597.2 mo
395.932 1594.8 395.885 1592.84 395.74 1590.92 cv
399.433 1590.92 li
399.625 1594.66 li
399.769 1594.66 li
401.064 1592.45 403.224 1590.39 407.063 1590.39 cv
410.229 1590.39 412.626 1592.31 413.634 1595.04 cv
413.73 1595.04 li
414.449 1593.75 415.361 1592.74 416.32 1592.02 cv
417.71 1590.96 419.246 1590.39 421.453 1590.39 cv
424.523 1590.39 429.082 1592.41 429.082 1600.46 cv
429.082 1614.14 li
424.955 1614.14 li
424.955 1600.99 li
424.955 1596.53 423.324 1593.84 419.917 1593.84 cv
417.52 1593.84 415.648 1595.62 414.929 1597.68 cv
414.738 1598.26 414.593 1599.02 414.593 1599.79 cv
414.593 1614.14 li
410.466 1614.14 li
410.466 1600.23 li
410.466 1596.53 408.835 1593.84 405.623 1593.84 cv
402.984 1593.84 401.064 1595.95 400.392 1598.07 cv
400.154 1598.69 400.057 1599.41 400.057 1600.13 cv
400.057 1614.14 li
395.932 1614.14 li
395.932 1597.2 li
cp
f
446.139 1614.14 mo
446.139 1590.92 li
450.361 1590.92 li
450.361 1614.14 li
446.139 1614.14 li
cp
450.839 1584.39 mo
450.889 1585.83 449.832 1586.98 448.154 1586.98 cv
446.666 1586.98 445.611 1585.83 445.611 1584.39 cv
445.611 1582.91 446.714 1581.75 448.25 1581.75 cv
449.832 1581.75 450.839 1582.91 450.839 1584.39 cv
cp
f
461.545 1604.69 mo
461.545 1605.31 461.64 1605.88 461.736 1606.41 cv
462.504 1609.34 465.046 1611.35 468.068 1611.35 cv
472.531 1611.35 475.121 1607.71 475.121 1602.38 cv
475.121 1597.73 472.673 1593.75 468.213 1593.75 cv
465.333 1593.75 462.648 1595.81 461.832 1598.98 cv
461.689 1599.5 461.545 1600.13 461.545 1600.7 cv
461.545 1604.69 li
cp
457.371 1598.5 mo
457.371 1595.52 457.275 1593.13 457.179 1590.92 cv
460.969 1590.92 li
461.162 1594.9 li
461.258 1594.9 li
462.984 1592.07 465.718 1590.39 469.508 1590.39 cv
475.121 1590.39 479.343 1595.14 479.343 1602.19 cv
479.343 1610.54 474.258 1614.66 468.789 1614.66 cv
465.718 1614.66 463.031 1613.32 461.64 1611.02 cv
461.545 1611.02 li
461.545 1623.63 li
457.371 1623.63 li
457.371 1598.5 li
cp
f
484.105 1609.82 mo
485.353 1610.63 487.561 1611.5 489.671 1611.5 cv
492.742 1611.5 494.179 1609.96 494.179 1608.04 cv
494.179 1606.03 492.98 1604.93 489.863 1603.77 cv
485.689 1602.29 483.722 1599.98 483.722 1597.2 cv
483.722 1593.46 486.744 1590.39 491.734 1590.39 cv
494.083 1590.39 496.146 1591.06 497.443 1591.83 cv
496.386 1594.9 li
495.476 1594.32 493.796 1593.55 491.639 1593.55 cv
489.142 1593.55 487.751 1595 487.751 1596.72 cv
487.751 1598.64 489.142 1599.5 492.166 1600.66 cv
496.195 1602.19 498.258 1604.21 498.258 1607.66 cv
498.258 1611.74 495.091 1614.62 489.574 1614.62 cv
487.033 1614.62 484.681 1613.99 483.051 1613.03 cv
484.105 1609.82 li
cp
f
515.923 1602.29 mo
511.318 1602.19 506.088 1603.01 506.088 1607.52 cv
506.088 1610.25 507.912 1611.55 510.07 1611.55 cv
513.091 1611.55 515.011 1609.63 515.683 1607.66 cv
515.826 1607.23 515.923 1606.75 515.923 1606.32 cv
515.923 1602.29 li
cp
516.546 1614.14 mo
516.21 1611.21 li
516.066 1611.21 li
514.771 1613.03 512.277 1614.66 508.966 1614.66 cv
504.265 1614.66 501.867 1611.35 501.867 1608 cv
501.867 1602.38 506.855 1599.31 515.826 1599.36 cv
515.826 1598.88 li
515.826 1596.96 515.298 1593.51 510.548 1593.51 cv
508.391 1593.51 506.136 1594.18 504.505 1595.23 cv
503.544 1592.45 li
505.464 1591.2 508.248 1590.39 511.173 1590.39 cv
518.273 1590.39 520 1595.23 520 1599.89 cv
520 1608.57 li
520 1610.59 520.095 1612.55 520.385 1614.14 cv
516.546 1614.14 li
cp
f
526.826 1597.2 mo
526.826 1594.8 526.779 1592.84 526.635 1590.92 cv
530.328 1590.92 li
530.52 1594.66 li
530.664 1594.66 li
531.958 1592.45 534.119 1590.39 537.957 1590.39 cv
541.123 1590.39 543.521 1592.31 544.529 1595.04 cv
544.625 1595.04 li
545.344 1593.75 546.255 1592.74 547.214 1592.02 cv
548.605 1590.96 550.14 1590.39 552.348 1590.39 cv
555.417 1590.39 559.977 1592.41 559.977 1600.46 cv
559.977 1614.14 li
555.849 1614.14 li
555.849 1600.99 li
555.849 1596.53 554.218 1593.84 550.813 1593.84 cv
548.414 1593.84 546.542 1595.62 545.824 1597.68 cv
545.633 1598.26 545.488 1599.02 545.488 1599.79 cv
545.488 1614.14 li
541.361 1614.14 li
541.361 1600.23 li
541.361 1596.53 539.73 1593.84 536.517 1593.84 cv
533.879 1593.84 531.958 1595.95 531.287 1598.07 cv
531.048 1598.69 530.951 1599.41 530.951 1600.13 cv
530.951 1614.14 li
526.826 1614.14 li
526.826 1597.2 li
cp
f
578.664 1590.92 mo
583.222 1603.97 li
583.99 1606.08 584.613 1608 585.093 1609.91 cv
585.236 1609.91 li
585.764 1608 586.436 1606.08 587.203 1603.97 cv
591.712 1590.92 li
596.127 1590.92 li
587.011 1614.14 li
582.982 1614.14 li
574.154 1590.92 li
578.664 1590.92 li
cp
f
602.23 1602.57 mo
602.23 1607.66 605.158 1611.5 609.283 1611.5 cv
613.312 1611.5 616.336 1607.71 616.336 1602.48 cv
616.336 1598.54 614.369 1593.55 609.379 1593.55 cv
604.39 1593.55 602.23 1598.16 602.23 1602.57 cv
cp
620.652 1602.34 mo
620.652 1610.92 614.705 1614.66 609.092 1614.66 cv
602.807 1614.66 597.96 1610.06 597.96 1602.72 cv
597.96 1594.95 603.046 1590.39 609.474 1590.39 cv
616.144 1590.39 620.652 1595.23 620.652 1602.34 cv
cp
f
625.992 1580.08 mo
630.215 1580.08 li
630.215 1614.14 li
625.992 1614.14 li
625.992 1580.08 li
cp
f
656.75 1607.8 mo
656.75 1610.2 656.796 1612.31 656.941 1614.14 cv
653.199 1614.14 li
652.958 1610.35 li
652.863 1610.35 li
651.759 1612.22 649.314 1614.66 645.187 1614.66 cv
641.543 1614.66 637.176 1612.65 637.176 1604.49 cv
637.176 1590.92 li
641.398 1590.92 li
641.398 1603.77 li
641.398 1608.19 642.742 1611.16 646.58 1611.16 cv
649.41 1611.16 651.377 1609.2 652.144 1607.32 cv
652.384 1606.7 652.527 1605.93 652.527 1605.17 cv
652.527 1590.92 li
656.75 1590.92 li
656.75 1607.8 li
cp
f
667.941 1604.69 mo
667.941 1605.31 668.037 1605.88 668.132 1606.41 cv
668.9 1609.34 671.443 1611.35 674.466 1611.35 cv
678.928 1611.35 681.518 1607.71 681.518 1602.38 cv
681.518 1597.73 679.072 1593.75 674.609 1593.75 cv
671.73 1593.75 669.044 1595.81 668.228 1598.98 cv
668.085 1599.5 667.941 1600.13 667.941 1600.7 cv
667.941 1604.69 li
cp
663.768 1598.5 mo
663.768 1595.52 663.671 1593.13 663.576 1590.92 cv
667.365 1590.92 li
667.556 1594.9 li
667.654 1594.9 li
669.381 1592.07 672.115 1590.39 675.904 1590.39 cv
681.518 1590.39 685.74 1595.14 685.74 1602.19 cv
685.74 1610.54 680.654 1614.66 675.185 1614.66 cv
672.115 1614.66 669.427 1613.32 668.037 1611.02 cv
667.941 1611.02 li
667.941 1623.63 li
663.768 1623.63 li
663.768 1598.5 li
cp
f
696.166 1584.25 mo
696.166 1590.92 li
702.211 1590.92 li
702.211 1594.13 li
696.166 1594.13 li
696.166 1606.65 li
696.166 1609.53 696.98 1611.16 699.332 1611.16 cv
700.436 1611.16 701.25 1611.02 701.779 1610.87 cv
701.97 1614.04 li
701.154 1614.38 699.859 1614.62 698.229 1614.62 cv
696.261 1614.62 694.677 1613.99 693.669 1612.84 cv
692.47 1611.59 692.039 1609.53 692.039 1606.8 cv
692.039 1594.13 li
688.441 1594.13 li
688.441 1590.92 li
692.039 1590.92 li
692.039 1585.35 li
696.166 1584.25 li
cp
f
719.201 1602.29 mo
714.596 1602.19 709.365 1603.01 709.365 1607.52 cv
709.365 1610.25 711.189 1611.55 713.348 1611.55 cv
716.369 1611.55 718.289 1609.63 718.961 1607.66 cv
719.103 1607.23 719.201 1606.75 719.201 1606.32 cv
719.201 1602.29 li
cp
719.824 1614.14 mo
719.488 1611.21 li
719.343 1611.21 li
718.048 1613.03 715.555 1614.66 712.244 1614.66 cv
707.542 1614.66 705.145 1611.35 705.145 1608 cv
705.145 1602.38 710.132 1599.31 719.103 1599.36 cv
719.103 1598.88 li
719.103 1596.96 718.576 1593.51 713.826 1593.51 cv
711.667 1593.51 709.414 1594.18 707.783 1595.23 cv
706.822 1592.45 li
708.742 1591.2 711.525 1590.39 714.451 1590.39 cv
721.551 1590.39 723.277 1595.23 723.277 1599.89 cv
723.277 1608.57 li
723.277 1610.59 723.373 1612.55 723.662 1614.14 cv
719.824 1614.14 li
cp
f
734.996 1584.25 mo
734.996 1590.92 li
741.041 1590.92 li
741.041 1594.13 li
734.996 1594.13 li
734.996 1606.65 li
734.996 1609.53 735.811 1611.16 738.162 1611.16 cv
739.265 1611.16 740.08 1611.02 740.607 1610.87 cv
740.801 1614.04 li
739.984 1614.38 738.689 1614.62 737.058 1614.62 cv
735.092 1614.62 733.507 1613.99 732.5 1612.84 cv
731.3 1611.59 730.869 1609.53 730.869 1606.8 cv
730.869 1594.13 li
727.271 1594.13 li
727.271 1590.92 li
730.869 1590.92 li
730.869 1585.35 li
734.996 1584.25 li
cp
f
760.24 1600.27 mo
760.287 1597.59 759.136 1593.41 754.387 1593.41 cv
750.117 1593.41 748.246 1597.34 747.91 1600.27 cv
760.24 1600.27 li
cp
747.863 1603.29 mo
747.959 1609 751.603 1611.35 755.826 1611.35 cv
758.847 1611.35 760.671 1610.82 762.253 1610.16 cv
762.975 1613.18 li
761.486 1613.85 758.945 1614.62 755.25 1614.62 cv
748.102 1614.62 743.832 1609.91 743.832 1602.91 cv
743.832 1595.91 747.959 1590.39 754.722 1590.39 cv
762.303 1590.39 764.318 1597.06 764.318 1601.33 cv
764.318 1602.19 764.22 1602.86 764.173 1603.29 cv
747.863 1603.29 li
cp
f
769.558 1597.2 mo
769.558 1594.8 769.509 1592.84 769.367 1590.92 cv
773.06 1590.92 li
773.252 1594.66 li
773.396 1594.66 li
774.691 1592.45 776.851 1590.39 780.689 1590.39 cv
783.855 1590.39 786.253 1592.31 787.261 1595.04 cv
787.357 1595.04 li
788.076 1593.75 788.988 1592.74 789.947 1592.02 cv
791.337 1590.96 792.873 1590.39 795.08 1590.39 cv
798.15 1590.39 802.708 1592.41 802.708 1600.46 cv
802.708 1614.14 li
798.582 1614.14 li
798.582 1600.99 li
798.582 1596.53 796.951 1593.84 793.544 1593.84 cv
791.146 1593.84 789.275 1595.62 788.556 1597.68 cv
788.365 1598.26 788.22 1599.02 788.22 1599.79 cv
788.22 1614.14 li
784.095 1614.14 li
784.095 1600.23 li
784.095 1596.53 782.462 1593.84 779.25 1593.84 cv
776.611 1593.84 774.691 1595.95 774.019 1598.07 cv
773.781 1598.69 773.684 1599.41 773.684 1600.13 cv
773.684 1614.14 li
769.558 1614.14 li
769.558 1597.2 li
cp
f
835.598 1600.32 mo
835.598 1599.74 835.548 1599.07 835.404 1598.54 cv
834.781 1595.95 832.527 1593.75 829.361 1593.75 cv
824.994 1593.75 822.355 1597.44 822.355 1602.67 cv
822.355 1607.28 824.563 1611.3 829.216 1611.3 cv
831.951 1611.3 834.302 1609.63 835.261 1606.7 cv
835.453 1606.13 835.598 1605.31 835.598 1604.69 cv
835.598 1600.32 li
cp
835.598 1610.54 mo
835.501 1610.54 li
834.254 1612.84 831.664 1614.66 827.922 1614.66 cv
822.5 1614.66 818.085 1609.96 818.085 1602.91 cv
818.085 1594.23 823.699 1590.39 828.594 1590.39 cv
832.191 1590.39 834.589 1592.16 835.74 1594.42 cv
835.838 1594.42 li
835.98 1590.92 li
839.962 1590.92 li
839.867 1592.88 839.818 1594.9 839.818 1597.3 cv
839.818 1623.63 li
835.598 1623.63 li
835.598 1610.54 li
cp
f
866.218 1607.8 mo
866.218 1610.2 866.266 1612.31 866.41 1614.14 cv
862.667 1614.14 li
862.427 1610.35 li
862.332 1610.35 li
861.229 1612.22 858.783 1614.66 854.656 1614.66 cv
851.011 1614.66 846.644 1612.65 846.644 1604.49 cv
846.644 1590.92 li
850.867 1590.92 li
850.867 1603.77 li
850.867 1608.19 852.21 1611.16 856.048 1611.16 cv
858.879 1611.16 860.845 1609.2 861.613 1607.32 cv
861.853 1606.7 861.996 1605.93 861.996 1605.17 cv
861.996 1590.92 li
866.218 1590.92 li
866.218 1607.8 li
cp
f
873.236 1614.14 mo
873.236 1590.92 li
877.458 1590.92 li
877.458 1614.14 li
873.236 1614.14 li
cp
877.937 1584.39 mo
877.986 1585.83 876.929 1586.98 875.251 1586.98 cv
873.764 1586.98 872.708 1585.83 872.708 1584.39 cv
872.708 1582.91 873.812 1581.75 875.347 1581.75 cv
876.929 1581.75 877.937 1582.91 877.937 1584.39 cv
cp
f
896.701 1602.29 mo
892.095 1602.19 886.867 1603.01 886.867 1607.52 cv
886.867 1610.25 888.691 1611.55 890.849 1611.55 cv
893.871 1611.55 895.791 1609.63 896.462 1607.66 cv
896.605 1607.23 896.701 1606.75 896.701 1606.32 cv
896.701 1602.29 li
cp
897.326 1614.14 mo
896.99 1611.21 li
896.845 1611.21 li
895.551 1613.03 893.056 1614.66 889.746 1614.66 cv
885.045 1614.66 882.646 1611.35 882.646 1608 cv
882.646 1602.38 887.634 1599.31 896.605 1599.36 cv
896.605 1598.88 li
896.605 1596.96 896.078 1593.51 891.33 1593.51 cv
889.17 1593.51 886.916 1594.18 885.285 1595.23 cv
884.324 1592.45 li
886.244 1591.2 889.025 1590.39 891.953 1590.39 cv
899.052 1590.39 900.779 1595.23 900.779 1599.89 cv
900.779 1608.57 li
900.779 1610.59 900.875 1612.55 901.164 1614.14 cv
897.326 1614.14 li
cp
f
919.41 1590.92 mo
923.968 1603.97 li
924.736 1606.08 925.359 1608 925.839 1609.91 cv
925.982 1609.91 li
926.509 1608 927.181 1606.08 927.949 1603.97 cv
932.458 1590.92 li
936.873 1590.92 li
927.757 1614.14 li
923.729 1614.14 li
914.9 1590.92 li
919.41 1590.92 li
cp
f
942.976 1602.57 mo
942.976 1607.66 945.904 1611.5 950.029 1611.5 cv
954.058 1611.5 957.082 1607.71 957.082 1602.48 cv
957.082 1598.54 955.115 1593.55 950.125 1593.55 cv
945.136 1593.55 942.976 1598.16 942.976 1602.57 cv
cp
961.398 1602.34 mo
961.398 1610.92 955.451 1614.66 949.837 1614.66 cv
943.553 1614.66 938.707 1610.06 938.707 1602.72 cv
938.707 1594.95 943.793 1590.39 950.22 1590.39 cv
956.891 1590.39 961.398 1595.23 961.398 1602.34 cv
cp
f
966.74 1580.08 mo
970.962 1580.08 li
970.962 1614.14 li
966.74 1614.14 li
966.74 1580.08 li
cp
f
997.496 1607.8 mo
997.496 1610.2 997.542 1612.31 997.687 1614.14 cv
993.945 1614.14 li
993.705 1610.35 li
993.609 1610.35 li
992.505 1612.22 990.061 1614.66 985.933 1614.66 cv
982.289 1614.66 977.922 1612.65 977.922 1604.49 cv
977.922 1590.92 li
982.144 1590.92 li
982.144 1603.77 li
982.144 1608.19 983.488 1611.16 987.326 1611.16 cv
990.156 1611.16 992.123 1609.2 992.89 1607.32 cv
993.13 1606.7 993.273 1605.93 993.273 1605.17 cv
993.273 1590.92 li
997.496 1590.92 li
997.496 1607.8 li
cp
f
1008.69 1604.69 mo
1008.69 1605.31 1008.78 1605.88 1008.88 1606.41 cv
1009.65 1609.34 1012.19 1611.35 1015.21 1611.35 cv
1019.68 1611.35 1022.27 1607.71 1022.27 1602.38 cv
1022.27 1597.73 1019.82 1593.75 1015.36 1593.75 cv
1012.48 1593.75 1009.79 1595.81 1008.98 1598.98 cv
1008.83 1599.5 1008.69 1600.13 1008.69 1600.7 cv
1008.69 1604.69 li
cp
1004.52 1598.5 mo
1004.52 1595.52 1004.42 1593.13 1004.32 1590.92 cv
1008.11 1590.92 li
1008.31 1594.9 li
1008.4 1594.9 li
1010.13 1592.07 1012.86 1590.39 1016.65 1590.39 cv
1022.27 1590.39 1026.49 1595.14 1026.49 1602.19 cv
1026.49 1610.54 1021.4 1614.66 1015.93 1614.66 cv
1012.86 1614.66 1010.18 1613.32 1008.78 1611.02 cv
1008.69 1611.02 li
1008.69 1623.63 li
1004.52 1623.63 li
1004.52 1598.5 li
cp
f
1036.91 1584.25 mo
1036.91 1590.92 li
1042.96 1590.92 li
1042.96 1594.13 li
1036.91 1594.13 li
1036.91 1606.65 li
1036.91 1609.53 1037.73 1611.16 1040.08 1611.16 cv
1041.18 1611.16 1042 1611.02 1042.53 1610.87 cv
1042.72 1614.04 li
1041.9 1614.38 1040.6 1614.62 1038.97 1614.62 cv
1037.01 1614.62 1035.42 1613.99 1034.42 1612.84 cv
1033.22 1611.59 1032.78 1609.53 1032.78 1606.8 cv
1032.78 1594.13 li
1029.19 1594.13 li
1029.19 1590.92 li
1032.78 1590.92 li
1032.78 1585.35 li
1036.91 1584.25 li
cp
f
1059.95 1602.29 mo
1055.34 1602.19 1050.11 1603.01 1050.11 1607.52 cv
1050.11 1610.25 1051.94 1611.55 1054.1 1611.55 cv
1057.12 1611.55 1059.04 1609.63 1059.71 1607.66 cv
1059.85 1607.23 1059.95 1606.75 1059.95 1606.32 cv
1059.95 1602.29 li
cp
1060.57 1614.14 mo
1060.24 1611.21 li
1060.09 1611.21 li
1058.8 1613.03 1056.3 1614.66 1052.99 1614.66 cv
1048.29 1614.66 1045.89 1611.35 1045.89 1608 cv
1045.89 1602.38 1050.88 1599.31 1059.85 1599.36 cv
1059.85 1598.88 li
1059.85 1596.96 1059.32 1593.51 1054.58 1593.51 cv
1052.42 1593.51 1050.16 1594.18 1048.53 1595.23 cv
1047.57 1592.45 li
1049.49 1591.2 1052.27 1590.39 1055.2 1590.39 cv
1062.3 1590.39 1064.02 1595.23 1064.02 1599.89 cv
1064.02 1608.57 li
1064.02 1610.59 1064.12 1612.55 1064.41 1614.14 cv
1060.57 1614.14 li
cp
f
1070.27 1609.82 mo
1071.52 1610.63 1073.73 1611.5 1075.84 1611.5 cv
1078.91 1611.5 1080.35 1609.96 1080.35 1608.04 cv
1080.35 1606.03 1079.15 1604.93 1076.03 1603.77 cv
1071.86 1602.29 1069.89 1599.98 1069.89 1597.2 cv
1069.89 1593.46 1072.91 1590.39 1077.9 1590.39 cv
1080.25 1590.39 1082.31 1591.06 1083.61 1591.83 cv
1082.55 1594.9 li
1081.64 1594.32 1079.96 1593.55 1077.81 1593.55 cv
1075.31 1593.55 1073.92 1595 1073.92 1596.72 cv
1073.92 1598.64 1075.31 1599.5 1078.33 1600.66 cv
1082.36 1602.19 1084.43 1604.21 1084.43 1607.66 cv
1084.43 1611.74 1081.26 1614.62 1075.74 1614.62 cv
1073.2 1614.62 1070.85 1613.99 1069.22 1613.03 cv
1070.27 1609.82 li
cp
f
1099.46 1609.82 mo
1100.71 1610.63 1102.91 1611.5 1105.02 1611.5 cv
1108.09 1611.5 1109.53 1609.96 1109.53 1608.04 cv
1109.53 1606.03 1108.33 1604.93 1105.21 1603.77 cv
1101.04 1602.29 1099.07 1599.98 1099.07 1597.2 cv
1099.07 1593.46 1102.1 1590.39 1107.09 1590.39 cv
1109.44 1590.39 1111.5 1591.06 1112.79 1591.83 cv
1111.74 1594.9 li
1110.83 1594.32 1109.15 1593.55 1106.99 1593.55 cv
1104.49 1593.55 1103.1 1595 1103.1 1596.72 cv
1103.1 1598.64 1104.49 1599.5 1107.52 1600.66 cv
1111.55 1602.19 1113.61 1604.21 1113.61 1607.66 cv
1113.61 1611.74 1110.44 1614.62 1104.93 1614.62 cv
1102.38 1614.62 1100.03 1613.99 1098.4 1613.03 cv
1099.46 1609.82 li
cp
f
1119.04 1614.14 mo
1119.04 1590.92 li
1123.26 1590.92 li
1123.26 1614.14 li
1119.04 1614.14 li
cp
1123.74 1584.39 mo
1123.79 1585.83 1122.73 1586.98 1121.06 1586.98 cv
1119.57 1586.98 1118.51 1585.83 1118.51 1584.39 cv
1118.51 1582.91 1119.62 1581.75 1121.15 1581.75 cv
1122.73 1581.75 1123.74 1582.91 1123.74 1584.39 cv
cp
f
1135.36 1584.25 mo
1135.36 1590.92 li
1141.4 1590.92 li
1141.4 1594.13 li
1135.36 1594.13 li
1135.36 1606.65 li
1135.36 1609.53 1136.17 1611.16 1138.53 1611.16 cv
1139.63 1611.16 1140.44 1611.02 1140.97 1610.87 cv
1141.16 1614.04 li
1140.35 1614.38 1139.05 1614.62 1137.42 1614.62 cv
1135.45 1614.62 1133.87 1613.99 1132.86 1612.84 cv
1131.66 1611.59 1131.23 1609.53 1131.23 1606.8 cv
1131.23 1594.13 li
1127.63 1594.13 li
1127.63 1590.92 li
1131.23 1590.92 li
1131.23 1585.35 li
1135.36 1584.25 li
cp
f
1168.57 1602.29 mo
1163.96 1602.19 1158.73 1603.01 1158.73 1607.52 cv
1158.73 1610.25 1160.56 1611.55 1162.72 1611.55 cv
1165.74 1611.55 1167.66 1609.63 1168.33 1607.66 cv
1168.47 1607.23 1168.57 1606.75 1168.57 1606.32 cv
1168.57 1602.29 li
cp
1169.19 1614.14 mo
1168.86 1611.21 li
1168.71 1611.21 li
1167.42 1613.03 1164.92 1614.66 1161.61 1614.66 cv
1156.91 1614.66 1154.51 1611.35 1154.51 1608 cv
1154.51 1602.38 1159.5 1599.31 1168.47 1599.36 cv
1168.47 1598.88 li
1168.47 1596.96 1167.94 1593.51 1163.2 1593.51 cv
1161.04 1593.51 1158.78 1594.18 1157.15 1595.23 cv
1156.19 1592.45 li
1158.11 1591.2 1160.89 1590.39 1163.82 1590.39 cv
1170.92 1590.39 1172.65 1595.23 1172.65 1599.89 cv
1172.65 1608.57 li
1172.65 1610.59 1172.74 1612.55 1173.03 1614.14 cv
1169.19 1614.14 li
cp
f
1178.89 1609.82 mo
1180.14 1610.63 1182.35 1611.5 1184.46 1611.5 cv
1187.53 1611.5 1188.97 1609.96 1188.97 1608.04 cv
1188.97 1606.03 1187.77 1604.93 1184.65 1603.77 cv
1180.48 1602.29 1178.51 1599.98 1178.51 1597.2 cv
1178.51 1593.46 1181.53 1590.39 1186.52 1590.39 cv
1188.87 1590.39 1190.94 1591.06 1192.23 1591.83 cv
1191.18 1594.9 li
1190.27 1594.32 1188.59 1593.55 1186.43 1593.55 cv
1183.93 1593.55 1182.54 1595 1182.54 1596.72 cv
1182.54 1598.64 1183.93 1599.5 1186.95 1600.66 cv
1190.98 1602.19 1193.05 1604.21 1193.05 1607.66 cv
1193.05 1611.74 1189.88 1614.62 1184.36 1614.62 cv
1181.82 1614.62 1179.47 1613.99 1177.84 1613.03 cv
1178.89 1609.82 li
cp
f
1202.65 1604.69 mo
1202.65 1605.31 1202.75 1605.88 1202.84 1606.41 cv
1203.61 1609.34 1206.15 1611.35 1209.18 1611.35 cv
1213.64 1611.35 1216.23 1607.71 1216.23 1602.38 cv
1216.23 1597.73 1213.78 1593.75 1209.32 1593.75 cv
1206.44 1593.75 1203.76 1595.81 1202.94 1598.98 cv
1202.8 1599.5 1202.65 1600.13 1202.65 1600.7 cv
1202.65 1604.69 li
cp
1198.48 1598.5 mo
1198.48 1595.52 1198.38 1593.13 1198.29 1590.92 cv
1202.08 1590.92 li
1202.27 1594.9 li
1202.36 1594.9 li
1204.09 1592.07 1206.83 1590.39 1210.61 1590.39 cv
1216.23 1590.39 1220.45 1595.14 1220.45 1602.19 cv
1220.45 1610.54 1215.36 1614.66 1209.9 1614.66 cv
1206.83 1614.66 1204.14 1613.32 1202.75 1611.02 cv
1202.65 1611.02 li
1202.65 1623.63 li
1198.48 1623.63 li
1198.48 1598.5 li
cp
f
1240.52 1600.27 mo
1240.57 1597.59 1239.42 1593.41 1234.67 1593.41 cv
1230.4 1593.41 1228.53 1597.34 1228.19 1600.27 cv
1240.52 1600.27 li
cp
1228.14 1603.29 mo
1228.24 1609 1231.88 1611.35 1236.1 1611.35 cv
1239.13 1611.35 1240.95 1610.82 1242.53 1610.16 cv
1243.25 1613.18 li
1241.77 1613.85 1239.22 1614.62 1235.53 1614.62 cv
1228.38 1614.62 1224.11 1609.91 1224.11 1602.91 cv
1224.11 1595.91 1228.24 1590.39 1235 1590.39 cv
1242.58 1590.39 1244.6 1597.06 1244.6 1601.33 cv
1244.6 1602.19 1244.5 1602.86 1244.45 1603.29 cv
1228.14 1603.29 li
cp
f
1249.84 1598.16 mo
1249.84 1595.43 1249.79 1593.08 1249.65 1590.92 cv
1253.34 1590.92 li
1253.48 1595.48 li
1253.68 1595.48 li
1254.73 1592.36 1257.27 1590.39 1260.1 1590.39 cv
1260.58 1590.39 1260.92 1590.44 1261.3 1590.53 cv
1261.3 1594.52 li
1260.87 1594.42 1260.44 1594.37 1259.86 1594.37 cv
1256.89 1594.37 1254.78 1596.63 1254.2 1599.79 cv
1254.11 1600.37 1254.01 1601.04 1254.01 1601.76 cv
1254.01 1614.14 li
1249.84 1614.14 li
1249.84 1598.16 li
cp
f
1265.73 1597.2 mo
1265.73 1594.8 1265.68 1592.84 1265.53 1590.92 cv
1269.28 1590.92 li
1269.52 1594.76 li
1269.61 1594.76 li
1270.76 1592.55 1273.45 1590.39 1277.29 1590.39 cv
1280.5 1590.39 1285.49 1592.31 1285.49 1600.27 cv
1285.49 1614.14 li
1281.27 1614.14 li
1281.27 1600.75 li
1281.27 1597.01 1279.88 1593.89 1275.9 1593.89 cv
1273.11 1593.89 1270.95 1595.86 1270.24 1598.21 cv
1270.04 1598.73 1269.95 1599.46 1269.95 1600.18 cv
1269.95 1614.14 li
1265.73 1614.14 li
1265.73 1597.2 li
cp
f
1304.6 1602.29 mo
1299.99 1602.19 1294.76 1603.01 1294.76 1607.52 cv
1294.76 1610.25 1296.59 1611.55 1298.75 1611.55 cv
1301.77 1611.55 1303.69 1609.63 1304.36 1607.66 cv
1304.5 1607.23 1304.6 1606.75 1304.6 1606.32 cv
1304.6 1602.29 li
cp
1305.22 1614.14 mo
1304.89 1611.21 li
1304.74 1611.21 li
1303.45 1613.03 1300.95 1614.66 1297.64 1614.66 cv
1292.94 1614.66 1290.54 1611.35 1290.54 1608 cv
1290.54 1602.38 1295.53 1599.31 1304.5 1599.36 cv
1304.5 1598.88 li
1304.5 1596.96 1303.97 1593.51 1299.22 1593.51 cv
1297.07 1593.51 1294.81 1594.18 1293.18 1595.23 cv
1292.22 1592.45 li
1294.14 1591.2 1296.92 1590.39 1299.85 1590.39 cv
1306.95 1590.39 1308.68 1595.23 1308.68 1599.89 cv
1308.68 1608.57 li
1308.68 1610.59 1308.77 1612.55 1309.06 1614.14 cv
1305.22 1614.14 li
cp
f
1320.39 1584.25 mo
1320.39 1590.92 li
1326.44 1590.92 li
1326.44 1594.13 li
1320.39 1594.13 li
1320.39 1606.65 li
1320.39 1609.53 1321.21 1611.16 1323.56 1611.16 cv
1324.66 1611.16 1325.48 1611.02 1326.01 1610.87 cv
1326.2 1614.04 li
1325.38 1614.38 1324.09 1614.62 1322.46 1614.62 cv
1320.49 1614.62 1318.91 1613.99 1317.9 1612.84 cv
1316.7 1611.59 1316.27 1609.53 1316.27 1606.8 cv
1316.27 1594.13 li
1312.67 1594.13 li
1312.67 1590.92 li
1316.27 1590.92 li
1316.27 1585.35 li
1320.39 1584.25 li
cp
f
1350.63 1607.8 mo
1350.63 1610.2 1350.67 1612.31 1350.82 1614.14 cv
1347.08 1614.14 li
1346.84 1610.35 li
1346.74 1610.35 li
1345.64 1612.22 1343.19 1614.66 1339.06 1614.66 cv
1335.42 1614.66 1331.05 1612.65 1331.05 1604.49 cv
1331.05 1590.92 li
1335.28 1590.92 li
1335.28 1603.77 li
1335.28 1608.19 1336.62 1611.16 1340.46 1611.16 cv
1343.29 1611.16 1345.25 1609.2 1346.02 1607.32 cv
1346.26 1606.7 1346.4 1605.93 1346.4 1605.17 cv
1346.4 1590.92 li
1350.63 1590.92 li
1350.63 1607.8 li
cp
f
1357.64 1598.16 mo
1357.64 1595.43 1357.6 1593.08 1357.45 1590.92 cv
1361.15 1590.92 li
1361.29 1595.48 li
1361.48 1595.48 li
1362.54 1592.36 1365.08 1590.39 1367.91 1590.39 cv
1368.39 1590.39 1368.73 1590.44 1369.11 1590.53 cv
1369.11 1594.52 li
1368.68 1594.42 1368.25 1594.37 1367.67 1594.37 cv
1364.7 1594.37 1362.59 1596.63 1362.01 1599.79 cv
1361.91 1600.37 1361.82 1601.04 1361.82 1601.76 cv
1361.82 1614.14 li
1357.64 1614.14 li
1357.64 1598.16 li
cp
f
214.056 1659.89 mo
209.451 1659.79 204.221 1660.61 204.221 1665.12 cv
204.221 1667.85 206.044 1669.14 208.203 1669.14 cv
211.224 1669.14 213.144 1667.23 213.816 1665.26 cv
213.959 1664.83 214.056 1664.35 214.056 1663.91 cv
214.056 1659.89 li
cp
214.68 1671.73 mo
214.344 1668.81 li
214.199 1668.81 li
212.904 1670.63 210.41 1672.26 207.099 1672.26 cv
202.398 1672.26 200 1668.95 200 1665.59 cv
200 1659.98 204.988 1656.91 213.959 1656.96 cv
213.959 1656.48 li
213.959 1654.56 213.431 1651.11 208.681 1651.11 cv
206.523 1651.11 204.269 1651.78 202.638 1652.84 cv
201.677 1650.05 li
203.597 1648.8 206.381 1647.99 209.306 1647.99 cv
216.406 1647.99 218.132 1652.84 218.132 1657.49 cv
218.132 1666.17 li
218.132 1668.19 218.228 1670.15 218.517 1671.73 cv
214.68 1671.73 li
cp
f
244.387 1665.41 mo
244.387 1667.8 244.433 1669.91 244.578 1671.73 cv
240.836 1671.73 li
240.596 1667.95 li
240.5 1667.95 li
239.396 1669.82 236.951 1672.26 232.824 1672.26 cv
229.18 1672.26 224.812 1670.25 224.812 1662.09 cv
224.812 1648.52 li
229.035 1648.52 li
229.035 1661.38 li
229.035 1665.79 230.378 1668.76 234.217 1668.76 cv
237.046 1668.76 239.013 1666.79 239.781 1664.93 cv
240.021 1664.3 240.164 1663.53 240.164 1662.77 cv
240.164 1648.52 li
244.387 1648.52 li
244.387 1665.41 li
cp
f
256.492 1641.85 mo
256.492 1648.52 li
262.537 1648.52 li
262.537 1651.73 li
256.492 1651.73 li
256.492 1664.25 li
256.492 1667.13 257.307 1668.76 259.658 1668.76 cv
260.761 1668.76 261.576 1668.62 262.103 1668.48 cv
262.297 1671.64 li
261.48 1671.98 260.185 1672.22 258.554 1672.22 cv
256.588 1672.22 255.003 1671.59 253.996 1670.44 cv
252.796 1669.19 252.365 1667.13 252.365 1664.39 cv
252.365 1651.73 li
248.767 1651.73 li
248.767 1648.52 li
252.365 1648.52 li
252.365 1642.95 li
256.492 1641.85 li
cp
f
280.059 1660.17 mo
280.059 1665.26 282.986 1669.1 287.111 1669.1 cv
291.141 1669.1 294.164 1665.31 294.164 1660.08 cv
294.164 1656.14 292.197 1651.16 287.207 1651.16 cv
282.219 1651.16 280.059 1655.76 280.059 1660.17 cv
cp
298.48 1659.94 mo
298.48 1668.52 292.533 1672.26 286.919 1672.26 cv
280.635 1672.26 275.789 1667.66 275.789 1660.32 cv
275.789 1652.55 280.875 1647.99 287.303 1647.99 cv
293.973 1647.99 298.48 1652.84 298.48 1659.94 cv
cp
f
319.652 1657.97 mo
319.652 1657.44 319.604 1656.72 319.458 1656.19 cv
318.835 1653.51 316.533 1651.3 313.367 1651.3 cv
309.001 1651.3 306.41 1655.14 306.41 1660.27 cv
306.41 1664.97 308.713 1668.86 313.271 1668.86 cv
316.101 1668.86 318.691 1666.98 319.458 1663.82 cv
319.604 1663.24 319.652 1662.67 319.652 1662 cv
319.652 1657.97 li
cp
323.873 1637.68 mo
323.873 1665.74 li
323.873 1667.8 323.921 1670.15 324.064 1671.73 cv
320.275 1671.73 li
320.083 1667.71 li
319.988 1667.71 li
318.691 1670.3 315.861 1672.26 312.072 1672.26 cv
306.458 1672.26 302.141 1667.51 302.141 1660.46 cv
302.093 1652.74 306.891 1647.99 312.551 1647.99 cv
316.101 1647.99 318.5 1649.67 319.556 1651.54 cv
319.652 1651.54 li
319.652 1637.68 li
323.873 1637.68 li
cp
f
330.892 1671.73 mo
330.892 1648.52 li
335.115 1648.52 li
335.115 1671.73 li
330.892 1671.73 li
cp
335.593 1641.99 mo
335.643 1643.43 334.586 1644.59 332.908 1644.59 cv
331.419 1644.59 330.365 1643.43 330.365 1641.99 cv
330.365 1640.51 331.468 1639.35 333.003 1639.35 cv
334.586 1639.35 335.593 1640.51 335.593 1641.99 cv
cp
f
347.21 1641.85 mo
347.21 1648.52 li
353.256 1648.52 li
353.256 1651.73 li
347.21 1651.73 li
347.21 1664.25 li
347.21 1667.13 348.025 1668.76 350.377 1668.76 cv
351.48 1668.76 352.294 1668.62 352.822 1668.48 cv
353.015 1671.64 li
352.199 1671.98 350.904 1672.22 349.273 1672.22 cv
347.306 1672.22 345.722 1671.59 344.714 1670.44 cv
343.515 1669.19 343.083 1667.13 343.083 1664.39 cv
343.083 1651.73 li
339.486 1651.73 li
339.486 1648.52 li
343.083 1648.52 li
343.083 1642.95 li
347.21 1641.85 li
cp
f
380.419 1659.89 mo
375.814 1659.79 370.586 1660.61 370.586 1665.12 cv
370.586 1667.85 372.41 1669.14 374.568 1669.14 cv
377.59 1669.14 379.509 1667.23 380.181 1665.26 cv
380.324 1664.83 380.419 1664.35 380.419 1663.91 cv
380.419 1659.89 li
cp
381.044 1671.73 mo
380.709 1668.81 li
380.564 1668.81 li
379.269 1670.63 376.775 1672.26 373.465 1672.26 cv
368.763 1672.26 366.365 1668.95 366.365 1665.59 cv
366.365 1659.98 371.353 1656.91 380.324 1656.96 cv
380.324 1656.48 li
380.324 1654.56 379.796 1651.11 375.049 1651.11 cv
372.889 1651.11 370.634 1651.78 369.003 1652.84 cv
368.042 1650.05 li
369.962 1648.8 372.744 1647.99 375.671 1647.99 cv
382.771 1647.99 384.498 1652.84 384.498 1657.49 cv
384.498 1666.17 li
384.498 1668.19 384.593 1670.15 384.882 1671.73 cv
381.044 1671.73 li
cp
f
410.753 1665.41 mo
410.753 1667.8 410.8 1669.91 410.945 1671.73 cv
407.203 1671.73 li
406.962 1667.95 li
406.867 1667.95 li
405.763 1669.82 403.318 1672.26 399.191 1672.26 cv
395.546 1672.26 391.179 1670.25 391.179 1662.09 cv
391.179 1648.52 li
395.402 1648.52 li
395.402 1661.38 li
395.402 1665.79 396.746 1668.76 400.584 1668.76 cv
403.414 1668.76 405.381 1666.79 406.148 1664.93 cv
406.388 1664.3 406.531 1663.53 406.531 1662.77 cv
406.531 1648.52 li
410.753 1648.52 li
410.753 1665.41 li
cp
f
422.857 1641.85 mo
422.857 1648.52 li
428.902 1648.52 li
428.902 1651.73 li
422.857 1651.73 li
422.857 1664.25 li
422.857 1667.13 423.671 1668.76 426.023 1668.76 cv
427.126 1668.76 427.941 1668.62 428.47 1668.48 cv
428.662 1671.64 li
427.845 1671.98 426.55 1672.22 424.919 1672.22 cv
422.953 1672.22 421.369 1671.59 420.361 1670.44 cv
419.162 1669.19 418.73 1667.13 418.73 1664.39 cv
418.73 1651.73 li
415.132 1651.73 li
415.132 1648.52 li
418.73 1648.52 li
418.73 1642.95 li
422.857 1641.85 li
cp
f
444.266 1671.73 mo
444.266 1651.73 li
441.003 1651.73 li
441.003 1648.52 li
444.266 1648.52 li
444.266 1647.41 li
444.266 1644.15 444.986 1641.18 446.953 1639.3 cv
448.535 1637.77 450.646 1637.14 452.613 1637.14 cv
454.1 1637.14 455.396 1637.48 456.21 1637.82 cv
455.635 1641.08 li
455.011 1640.79 454.148 1640.55 452.949 1640.55 cv
449.351 1640.55 448.439 1643.72 448.439 1647.27 cv
448.439 1648.52 li
454.052 1648.52 li
454.052 1651.73 li
448.439 1651.73 li
448.439 1671.73 li
444.266 1671.73 li
cp
f
477.279 1665.41 mo
477.279 1667.8 477.326 1669.91 477.47 1671.73 cv
473.729 1671.73 li
473.488 1667.95 li
473.392 1667.95 li
472.289 1669.82 469.843 1672.26 465.716 1672.26 cv
462.072 1672.26 457.705 1670.25 457.705 1662.09 cv
457.705 1648.52 li
461.927 1648.52 li
461.927 1661.38 li
461.927 1665.79 463.271 1668.76 467.109 1668.76 cv
469.939 1668.76 471.906 1666.79 472.673 1664.93 cv
472.914 1664.3 473.057 1663.53 473.057 1662.77 cv
473.057 1648.52 li
477.279 1648.52 li
477.279 1665.41 li
cp
f
499.936 1657.68 mo
499.936 1656.96 499.889 1656.34 499.697 1655.76 cv
498.93 1653.31 496.865 1651.3 493.794 1651.3 cv
489.765 1651.3 486.886 1654.7 486.886 1660.08 cv
486.886 1664.64 489.189 1668.43 493.748 1668.43 cv
496.338 1668.43 498.689 1666.79 499.599 1664.11 cv
499.839 1663.39 499.936 1662.57 499.936 1661.85 cv
499.936 1657.68 li
cp
504.302 1648.52 mo
504.205 1650.2 504.109 1652.07 504.109 1654.9 cv
504.109 1668.38 li
504.109 1673.7 503.055 1676.96 500.8 1678.98 cv
498.545 1681.09 495.283 1681.76 492.357 1681.76 cv
489.574 1681.76 486.503 1681.09 484.633 1679.84 cv
485.687 1676.63 li
487.223 1677.59 489.623 1678.45 492.5 1678.45 cv
496.818 1678.45 499.984 1676.2 499.984 1670.34 cv
499.984 1667.75 li
499.889 1667.75 li
498.593 1669.91 496.098 1671.64 492.5 1671.64 cv
486.744 1671.64 482.617 1666.75 482.617 1660.32 cv
482.617 1652.45 487.751 1647.99 493.076 1647.99 cv
497.105 1647.99 499.312 1650.1 500.32 1652.02 cv
500.416 1652.02 li
500.607 1648.52 li
504.302 1648.52 li
cp
f
510.841 1671.73 mo
510.841 1648.52 li
515.064 1648.52 li
515.064 1671.73 li
510.841 1671.73 li
cp
515.543 1641.99 mo
515.591 1643.43 514.535 1644.59 512.857 1644.59 cv
511.369 1644.59 510.314 1643.43 510.314 1641.99 cv
510.314 1640.51 511.418 1639.35 512.953 1639.35 cv
514.535 1639.35 515.543 1640.51 515.543 1641.99 cv
cp
f
527.158 1641.85 mo
527.158 1648.52 li
533.203 1648.52 li
533.203 1651.73 li
527.158 1651.73 li
527.158 1664.25 li
527.158 1667.13 527.973 1668.76 530.324 1668.76 cv
531.427 1668.76 532.242 1668.62 532.771 1668.48 cv
532.962 1671.64 li
532.146 1671.98 530.852 1672.22 529.221 1672.22 cv
527.253 1672.22 525.67 1671.59 524.662 1670.44 cv
523.462 1669.19 523.031 1667.13 523.031 1664.39 cv
523.031 1651.73 li
519.433 1651.73 li
519.433 1648.52 li
523.031 1648.52 li
523.031 1642.95 li
527.158 1641.85 li
cp
f
535.082 1677.64 mo
536.137 1674.8 537.433 1669.67 537.96 1666.17 cv
542.662 1665.69 li
541.558 1669.77 539.447 1675.09 538.103 1677.35 cv
535.082 1677.64 li
cp
f
557.352 1667.42 mo
558.599 1668.23 560.806 1669.1 562.917 1669.1 cv
565.988 1669.1 567.426 1667.56 567.426 1665.64 cv
567.426 1663.63 566.227 1662.52 563.109 1661.38 cv
558.935 1659.89 556.968 1657.59 556.968 1654.8 cv
556.968 1651.06 559.99 1647.99 564.98 1647.99 cv
567.33 1647.99 569.392 1648.66 570.689 1649.43 cv
569.633 1652.5 li
568.722 1651.93 567.043 1651.16 564.884 1651.16 cv
562.389 1651.16 560.998 1652.59 560.998 1654.32 cv
560.998 1656.24 562.389 1657.1 565.412 1658.26 cv
569.441 1659.79 571.503 1661.81 571.503 1665.26 cv
571.503 1669.34 568.337 1672.22 562.82 1672.22 cv
560.279 1672.22 557.927 1671.59 556.296 1670.63 cv
557.352 1667.42 li
cp
f
591.664 1657.87 mo
591.71 1655.19 590.561 1651.01 585.811 1651.01 cv
581.541 1651.01 579.669 1654.95 579.334 1657.87 cv
591.664 1657.87 li
cp
579.287 1660.89 mo
579.382 1666.6 583.029 1668.95 587.25 1668.95 cv
590.271 1668.95 592.095 1668.43 593.677 1667.75 cv
594.398 1670.78 li
592.91 1671.45 590.369 1672.22 586.673 1672.22 cv
579.525 1672.22 575.256 1667.51 575.256 1660.51 cv
575.256 1653.51 579.382 1647.99 586.146 1647.99 cv
593.726 1647.99 595.742 1654.66 595.742 1658.93 cv
595.742 1659.79 595.645 1660.46 595.598 1660.89 cv
579.287 1660.89 li
cp
f
616.816 1657.97 mo
616.816 1657.44 616.767 1656.72 616.623 1656.19 cv
616 1653.51 613.697 1651.3 610.531 1651.3 cv
606.166 1651.3 603.574 1655.14 603.574 1660.27 cv
603.574 1664.97 605.876 1668.86 610.436 1668.86 cv
613.265 1668.86 615.855 1666.98 616.623 1663.82 cv
616.767 1663.24 616.816 1662.67 616.816 1662 cv
616.816 1657.97 li
cp
621.037 1637.68 mo
621.037 1665.74 li
621.037 1667.8 621.086 1670.15 621.228 1671.73 cv
617.439 1671.73 li
617.248 1667.71 li
617.152 1667.71 li
615.855 1670.3 613.025 1672.26 609.236 1672.26 cv
603.623 1672.26 599.304 1667.51 599.304 1660.46 cv
599.258 1652.74 604.054 1647.99 609.714 1647.99 cv
613.265 1647.99 615.664 1649.67 616.721 1651.54 cv
616.816 1651.54 li
616.816 1637.68 li
621.037 1637.68 li
cp
f
654.062 1657.92 mo
654.062 1657.34 654.014 1656.67 653.869 1656.14 cv
653.246 1653.55 650.992 1651.35 647.826 1651.35 cv
643.458 1651.35 640.82 1655.04 640.82 1660.27 cv
640.82 1664.88 643.027 1668.91 647.681 1668.91 cv
650.416 1668.91 652.767 1667.23 653.727 1664.3 cv
653.917 1663.73 654.062 1662.91 654.062 1662.29 cv
654.062 1657.92 li
cp
654.062 1668.14 mo
653.967 1668.14 li
652.718 1670.44 650.128 1672.26 646.386 1672.26 cv
640.964 1672.26 636.55 1667.56 636.55 1660.51 cv
636.55 1651.83 642.164 1647.99 647.058 1647.99 cv
650.656 1647.99 653.055 1649.76 654.205 1652.02 cv
654.302 1652.02 li
654.445 1648.52 li
658.427 1648.52 li
658.332 1650.48 658.283 1652.5 658.283 1654.9 cv
658.283 1681.24 li
654.062 1681.24 li
654.062 1668.14 li
cp
f
684.684 1665.41 mo
684.684 1667.8 684.73 1669.91 684.875 1671.73 cv
681.133 1671.73 li
680.892 1667.95 li
680.796 1667.95 li
679.693 1669.82 677.248 1672.26 673.121 1672.26 cv
669.476 1672.26 665.109 1670.25 665.109 1662.09 cv
665.109 1648.52 li
669.332 1648.52 li
669.332 1661.38 li
669.332 1665.79 670.675 1668.76 674.513 1668.76 cv
677.343 1668.76 679.31 1666.79 680.078 1664.93 cv
680.318 1664.3 680.461 1663.53 680.461 1662.77 cv
680.461 1648.52 li
684.684 1648.52 li
684.684 1665.41 li
cp
f
691.701 1671.73 mo
691.701 1648.52 li
695.923 1648.52 li
695.923 1671.73 li
691.701 1671.73 li
cp
696.402 1641.99 mo
696.451 1643.43 695.394 1644.59 693.716 1644.59 cv
692.228 1644.59 691.173 1643.43 691.173 1641.99 cv
691.173 1640.51 692.277 1639.35 693.813 1639.35 cv
695.394 1639.35 696.402 1640.51 696.402 1641.99 cv
cp
f
715.166 1659.89 mo
710.56 1659.79 705.332 1660.61 705.332 1665.12 cv
705.332 1667.85 707.156 1669.14 709.314 1669.14 cv
712.335 1669.14 714.256 1667.23 714.928 1665.26 cv
715.07 1664.83 715.166 1664.35 715.166 1663.91 cv
715.166 1659.89 li
cp
715.791 1671.73 mo
715.455 1668.81 li
715.31 1668.81 li
714.015 1670.63 711.521 1672.26 708.21 1672.26 cv
703.509 1672.26 701.111 1668.95 701.111 1665.59 cv
701.111 1659.98 706.1 1656.91 715.07 1656.96 cv
715.07 1656.48 li
715.07 1654.56 714.543 1651.11 709.794 1651.11 cv
707.634 1651.11 705.381 1651.78 703.75 1652.84 cv
702.789 1650.05 li
704.709 1648.8 707.49 1647.99 710.418 1647.99 cv
717.517 1647.99 719.244 1652.84 719.244 1657.49 cv
719.244 1666.17 li
719.244 1668.19 719.34 1670.15 719.628 1671.73 cv
715.791 1671.73 li
cp
f
752.795 1670.88 mo
751.691 1671.45 749.244 1672.22 746.127 1672.22 cv
739.123 1672.22 734.564 1667.47 734.564 1660.37 cv
734.564 1653.22 739.458 1648.04 747.039 1648.04 cv
749.533 1648.04 751.74 1648.66 752.89 1649.23 cv
751.931 1652.5 li
750.924 1651.93 749.341 1651.39 747.039 1651.39 cv
741.712 1651.39 738.833 1655.33 738.833 1660.17 cv
738.833 1665.55 742.289 1668.86 746.894 1668.86 cv
749.292 1668.86 750.877 1668.23 752.076 1667.71 cv
752.795 1670.88 li
cp
f
760.051 1660.17 mo
760.051 1665.26 762.978 1669.1 767.103 1669.1 cv
771.133 1669.1 774.156 1665.31 774.156 1660.08 cv
774.156 1656.14 772.189 1651.16 767.199 1651.16 cv
762.211 1651.16 760.051 1655.76 760.051 1660.17 cv
cp
778.472 1659.94 mo
778.472 1668.52 772.525 1672.26 766.912 1672.26 cv
760.626 1672.26 755.781 1667.66 755.781 1660.32 cv
755.781 1652.55 760.867 1647.99 767.295 1647.99 cv
773.965 1647.99 778.472 1652.84 778.472 1659.94 cv
cp
f
783.812 1654.8 mo
783.812 1652.4 783.763 1650.44 783.621 1648.52 cv
787.363 1648.52 li
787.603 1652.36 li
787.699 1652.36 li
788.85 1650.15 791.537 1647.99 795.375 1647.99 cv
798.587 1647.99 803.578 1649.91 803.578 1657.87 cv
803.578 1671.73 li
799.355 1671.73 li
799.355 1658.35 li
799.355 1654.61 797.965 1651.49 793.982 1651.49 cv
791.201 1651.49 789.041 1653.46 788.322 1655.81 cv
788.131 1656.34 788.035 1657.05 788.035 1657.77 cv
788.035 1671.73 li
783.812 1671.73 li
783.812 1654.8 li
cp
f
809.876 1667.42 mo
811.125 1668.23 813.332 1669.1 815.443 1669.1 cv
818.513 1669.1 819.951 1667.56 819.951 1665.64 cv
819.951 1663.63 818.751 1662.52 815.635 1661.38 cv
811.46 1659.89 809.494 1657.59 809.494 1654.8 cv
809.494 1651.06 812.516 1647.99 817.505 1647.99 cv
819.855 1647.99 821.92 1648.66 823.214 1649.43 cv
822.158 1652.5 li
821.248 1651.93 819.568 1651.16 817.41 1651.16 cv
814.914 1651.16 813.523 1652.59 813.523 1654.32 cv
813.523 1656.24 814.914 1657.1 817.937 1658.26 cv
821.966 1659.79 824.029 1661.81 824.029 1665.26 cv
824.029 1669.34 820.863 1672.22 815.345 1672.22 cv
812.804 1672.22 810.453 1671.59 808.822 1670.63 cv
809.876 1667.42 li
cp
f
844.189 1657.87 mo
844.236 1655.19 843.085 1651.01 838.336 1651.01 cv
834.066 1651.01 832.195 1654.95 831.859 1657.87 cv
844.189 1657.87 li
cp
831.813 1660.89 mo
831.908 1666.6 835.552 1668.95 839.775 1668.95 cv
842.796 1668.95 844.621 1668.43 846.203 1667.75 cv
846.924 1670.78 li
845.435 1671.45 842.894 1672.22 839.199 1672.22 cv
832.05 1672.22 827.781 1667.51 827.781 1660.51 cv
827.781 1653.51 831.908 1647.99 838.671 1647.99 cv
846.251 1647.99 848.267 1654.66 848.267 1658.93 cv
848.267 1659.79 848.169 1660.46 848.123 1660.89 cv
831.813 1660.89 li
cp
f
869.34 1657.92 mo
869.34 1657.34 869.291 1656.67 869.146 1656.14 cv
868.523 1653.55 866.269 1651.35 863.103 1651.35 cv
858.736 1651.35 856.098 1655.04 856.098 1660.27 cv
856.098 1664.88 858.305 1668.91 862.958 1668.91 cv
865.693 1668.91 868.044 1667.23 869.003 1664.3 cv
869.195 1663.73 869.34 1662.91 869.34 1662.29 cv
869.34 1657.92 li
cp
869.34 1668.14 mo
869.244 1668.14 li
867.996 1670.44 865.406 1672.26 861.664 1672.26 cv
856.242 1672.26 851.828 1667.56 851.828 1660.51 cv
851.828 1651.83 857.441 1647.99 862.335 1647.99 cv
865.934 1647.99 868.332 1649.76 869.482 1652.02 cv
869.58 1652.02 li
869.722 1648.52 li
873.705 1648.52 li
873.609 1650.48 873.56 1652.5 873.56 1654.9 cv
873.56 1681.24 li
869.34 1681.24 li
869.34 1668.14 li
cp
f
899.96 1665.41 mo
899.96 1667.8 900.007 1669.91 900.152 1671.73 cv
896.41 1671.73 li
896.169 1667.95 li
896.074 1667.95 li
894.971 1669.82 892.525 1672.26 888.398 1672.26 cv
884.753 1672.26 880.387 1670.25 880.387 1662.09 cv
880.387 1648.52 li
884.609 1648.52 li
884.609 1661.38 li
884.609 1665.79 885.953 1668.76 889.791 1668.76 cv
892.621 1668.76 894.588 1666.79 895.355 1664.93 cv
895.595 1664.3 895.738 1663.53 895.738 1662.77 cv
895.738 1648.52 li
899.96 1648.52 li
899.96 1665.41 li
cp
f
926.408 1665.41 mo
926.408 1667.8 926.455 1669.91 926.599 1671.73 cv
922.857 1671.73 li
922.617 1667.95 li
922.521 1667.95 li
921.417 1669.82 918.973 1672.26 914.845 1672.26 cv
911.201 1672.26 906.834 1670.25 906.834 1662.09 cv
906.834 1648.52 li
911.056 1648.52 li
911.056 1661.38 li
911.056 1665.79 912.4 1668.76 916.238 1668.76 cv
919.068 1668.76 921.035 1666.79 921.802 1664.93 cv
922.042 1664.3 922.185 1663.53 922.185 1662.77 cv
922.185 1648.52 li
926.408 1648.52 li
926.408 1665.41 li
cp
f
933.425 1654.8 mo
933.425 1652.4 933.376 1650.44 933.234 1648.52 cv
936.976 1648.52 li
937.217 1652.36 li
937.312 1652.36 li
938.463 1650.15 941.15 1647.99 944.988 1647.99 cv
948.201 1647.99 953.191 1649.91 953.191 1657.87 cv
953.191 1671.73 li
948.968 1671.73 li
948.968 1658.35 li
948.968 1654.61 947.578 1651.49 943.595 1651.49 cv
940.814 1651.49 938.654 1653.46 937.935 1655.81 cv
937.744 1656.34 937.648 1657.05 937.648 1657.77 cv
937.648 1671.73 li
933.425 1671.73 li
933.425 1654.8 li
cp
f
964.96 1641.85 mo
964.96 1648.52 li
971.005 1648.52 li
971.005 1651.73 li
964.96 1651.73 li
964.96 1664.25 li
964.96 1667.13 965.775 1668.76 968.126 1668.76 cv
969.23 1668.76 970.044 1668.62 970.572 1668.48 cv
970.765 1671.64 li
969.949 1671.98 968.654 1672.22 967.023 1672.22 cv
965.056 1672.22 963.472 1671.59 962.464 1670.44 cv
961.265 1669.19 960.833 1667.13 960.833 1664.39 cv
960.833 1651.73 li
957.236 1651.73 li
957.236 1648.52 li
960.833 1648.52 li
960.833 1642.95 li
964.96 1641.85 li
cp
f
995.191 1665.41 mo
995.191 1667.8 995.238 1669.91 995.382 1671.73 cv
991.64 1671.73 li
991.4 1667.95 li
991.304 1667.95 li
990.201 1669.82 987.756 1672.26 983.628 1672.26 cv
979.984 1672.26 975.617 1670.25 975.617 1662.09 cv
975.617 1648.52 li
979.839 1648.52 li
979.839 1661.38 li
979.839 1665.79 981.183 1668.76 985.021 1668.76 cv
987.851 1668.76 989.818 1666.79 990.585 1664.93 cv
990.826 1664.3 990.968 1663.53 990.968 1662.77 cv
990.968 1648.52 li
995.191 1648.52 li
995.191 1665.41 li
cp
f
1002.21 1655.76 mo
1002.21 1653.03 1002.16 1650.68 1002.02 1648.52 cv
1005.71 1648.52 li
1005.86 1653.07 li
1006.05 1653.07 li
1007.1 1649.96 1009.65 1647.99 1012.48 1647.99 cv
1012.96 1647.99 1013.29 1648.04 1013.68 1648.13 cv
1013.68 1652.12 li
1013.24 1652.02 1012.81 1651.97 1012.24 1651.97 cv
1009.26 1651.97 1007.15 1654.23 1006.58 1657.39 cv
1006.48 1657.97 1006.38 1658.64 1006.38 1659.36 cv
1006.38 1671.73 li
1002.21 1671.73 li
1002.21 1655.76 li
cp
f
1028.08 1654.8 mo
1028.08 1652.4 1028.03 1650.44 1027.89 1648.52 cv
1031.58 1648.52 li
1031.77 1652.26 li
1031.92 1652.26 li
1033.21 1650.05 1035.37 1647.99 1039.21 1647.99 cv
1042.38 1647.99 1044.78 1649.91 1045.78 1652.64 cv
1045.88 1652.64 li
1046.6 1651.35 1047.51 1650.34 1048.47 1649.62 cv
1049.86 1648.56 1051.4 1647.99 1053.6 1647.99 cv
1056.67 1647.99 1061.23 1650 1061.23 1658.06 cv
1061.23 1671.73 li
1057.11 1671.73 li
1057.11 1658.59 li
1057.11 1654.13 1055.47 1651.44 1052.07 1651.44 cv
1049.67 1651.44 1047.8 1653.22 1047.08 1655.28 cv
1046.89 1655.86 1046.74 1656.63 1046.74 1657.39 cv
1046.74 1671.73 li
1042.62 1671.73 li
1042.62 1657.82 li
1042.62 1654.13 1040.99 1651.44 1037.77 1651.44 cv
1035.13 1651.44 1033.21 1653.55 1032.54 1655.66 cv
1032.3 1656.29 1032.21 1657.01 1032.21 1657.73 cv
1032.21 1671.73 li
1028.08 1671.73 li
1028.08 1654.8 li
cp
f
1080.35 1659.89 mo
1075.74 1659.79 1070.51 1660.61 1070.51 1665.12 cv
1070.51 1667.85 1072.34 1669.14 1074.49 1669.14 cv
1077.52 1669.14 1079.44 1667.23 1080.11 1665.26 cv
1080.25 1664.83 1080.35 1664.35 1080.35 1663.91 cv
1080.35 1659.89 li
cp
1080.97 1671.73 mo
1080.63 1668.81 li
1080.49 1668.81 li
1079.19 1670.63 1076.7 1672.26 1073.39 1672.26 cv
1068.69 1672.26 1066.29 1668.95 1066.29 1665.59 cv
1066.29 1659.98 1071.28 1656.91 1080.25 1656.96 cv
1080.25 1656.48 li
1080.25 1654.56 1079.72 1651.11 1074.97 1651.11 cv
1072.81 1651.11 1070.56 1651.78 1068.93 1652.84 cv
1067.97 1650.05 li
1069.89 1648.8 1072.67 1647.99 1075.6 1647.99 cv
1082.7 1647.99 1084.42 1652.84 1084.42 1657.49 cv
1084.42 1666.17 li
1084.42 1668.19 1084.52 1670.15 1084.81 1671.73 cv
1080.97 1671.73 li
cp
f
1106.89 1657.68 mo
1106.89 1656.96 1106.84 1656.34 1106.65 1655.76 cv
1105.88 1653.31 1103.82 1651.3 1100.75 1651.3 cv
1096.72 1651.3 1093.84 1654.7 1093.84 1660.08 cv
1093.84 1664.64 1096.14 1668.43 1100.7 1668.43 cv
1103.29 1668.43 1105.64 1666.79 1106.55 1664.11 cv
1106.79 1663.39 1106.89 1662.57 1106.89 1661.85 cv
1106.89 1657.68 li
cp
1111.26 1648.52 mo
1111.16 1650.2 1111.06 1652.07 1111.06 1654.9 cv
1111.06 1668.38 li
1111.06 1673.7 1110.01 1676.96 1107.75 1678.98 cv
1105.5 1681.09 1102.24 1681.76 1099.31 1681.76 cv
1096.53 1681.76 1093.46 1681.09 1091.59 1679.84 cv
1092.64 1676.63 li
1094.18 1677.59 1096.58 1678.45 1099.45 1678.45 cv
1103.77 1678.45 1106.94 1676.2 1106.94 1670.34 cv
1106.94 1667.75 li
1106.84 1667.75 li
1105.55 1669.91 1103.05 1671.64 1099.45 1671.64 cv
1093.7 1671.64 1089.57 1666.75 1089.57 1660.32 cv
1089.57 1652.45 1094.7 1647.99 1100.03 1647.99 cv
1104.06 1647.99 1106.27 1650.1 1107.27 1652.02 cv
1107.37 1652.02 li
1107.56 1648.52 li
1111.26 1648.52 li
cp
f
1117.79 1654.8 mo
1117.79 1652.4 1117.74 1650.44 1117.6 1648.52 cv
1121.34 1648.52 li
1121.58 1652.36 li
1121.68 1652.36 li
1122.83 1650.15 1125.52 1647.99 1129.35 1647.99 cv
1132.57 1647.99 1137.56 1649.91 1137.56 1657.87 cv
1137.56 1671.73 li
1133.34 1671.73 li
1133.34 1658.35 li
1133.34 1654.61 1131.94 1651.49 1127.96 1651.49 cv
1125.18 1651.49 1123.02 1653.46 1122.3 1655.81 cv
1122.11 1656.34 1122.02 1657.05 1122.02 1657.77 cv
1122.02 1671.73 li
1117.79 1671.73 li
1117.79 1654.8 li
cp
f
1144.43 1671.73 mo
1144.43 1648.52 li
1148.65 1648.52 li
1148.65 1671.73 li
1144.43 1671.73 li
cp
1149.13 1641.99 mo
1149.18 1643.43 1148.13 1644.59 1146.45 1644.59 cv
1144.96 1644.59 1143.9 1643.43 1143.9 1641.99 cv
1143.9 1640.51 1145.01 1639.35 1146.54 1639.35 cv
1148.13 1639.35 1149.13 1640.51 1149.13 1641.99 cv
cp
f
1181.67 1657.97 mo
1181.67 1657.44 1181.62 1656.72 1181.48 1656.19 cv
1180.85 1653.51 1178.55 1651.3 1175.39 1651.3 cv
1171.02 1651.3 1168.43 1655.14 1168.43 1660.27 cv
1168.43 1664.97 1170.73 1668.86 1175.29 1668.86 cv
1178.12 1668.86 1180.71 1666.98 1181.48 1663.82 cv
1181.62 1663.24 1181.67 1662.67 1181.67 1662 cv
1181.67 1657.97 li
cp
1185.89 1637.68 mo
1185.89 1665.74 li
1185.89 1667.8 1185.94 1670.15 1186.08 1671.73 cv
1182.29 1671.73 li
1182.1 1667.71 li
1182.01 1667.71 li
1180.71 1670.3 1177.88 1672.26 1174.09 1672.26 cv
1168.48 1672.26 1164.16 1667.51 1164.16 1660.46 cv
1164.11 1652.74 1168.91 1647.99 1174.57 1647.99 cv
1178.12 1647.99 1180.52 1649.67 1181.58 1651.54 cv
1181.67 1651.54 li
1181.67 1637.68 li
1185.89 1637.68 li
cp
f
1195.5 1660.17 mo
1195.5 1665.26 1198.43 1669.1 1202.55 1669.1 cv
1206.58 1669.1 1209.61 1665.31 1209.61 1660.08 cv
1209.61 1656.14 1207.64 1651.16 1202.65 1651.16 cv
1197.66 1651.16 1195.5 1655.76 1195.5 1660.17 cv
cp
1213.92 1659.94 mo
1213.92 1668.52 1207.98 1672.26 1202.36 1672.26 cv
1196.08 1672.26 1191.23 1667.66 1191.23 1660.32 cv
1191.23 1652.55 1196.32 1647.99 1202.75 1647.99 cv
1209.42 1647.99 1213.92 1652.84 1213.92 1659.94 cv
cp
f
1219.26 1637.68 mo
1223.49 1637.68 li
1223.49 1671.73 li
1219.26 1671.73 li
1219.26 1637.68 li
cp
f
1233.18 1660.17 mo
1233.18 1665.26 1236.11 1669.1 1240.23 1669.1 cv
1244.26 1669.1 1247.28 1665.31 1247.28 1660.08 cv
1247.28 1656.14 1245.32 1651.16 1240.33 1651.16 cv
1235.34 1651.16 1233.18 1655.76 1233.18 1660.17 cv
cp
1251.6 1659.94 mo
1251.6 1668.52 1245.65 1672.26 1240.04 1672.26 cv
1233.76 1672.26 1228.91 1667.66 1228.91 1660.32 cv
1228.91 1652.55 1234 1647.99 1240.42 1647.99 cv
1247.09 1647.99 1251.6 1652.84 1251.6 1659.94 cv
cp
f
1256.94 1655.76 mo
1256.94 1653.03 1256.9 1650.68 1256.75 1648.52 cv
1260.44 1648.52 li
1260.59 1653.07 li
1260.78 1653.07 li
1261.84 1649.96 1264.38 1647.99 1267.21 1647.99 cv
1267.69 1647.99 1268.02 1648.04 1268.41 1648.13 cv
1268.41 1652.12 li
1267.98 1652.02 1267.54 1651.97 1266.97 1651.97 cv
1264 1651.97 1261.88 1654.23 1261.31 1657.39 cv
1261.21 1657.97 1261.12 1658.64 1261.12 1659.36 cv
1261.12 1671.73 li
1256.94 1671.73 li
1256.94 1655.76 li
cp
f
1286.89 1657.87 mo
1286.93 1655.19 1285.78 1651.01 1281.03 1651.01 cv
1276.76 1651.01 1274.89 1654.95 1274.56 1657.87 cv
1286.89 1657.87 li
cp
1274.51 1660.89 mo
1274.6 1666.6 1278.25 1668.95 1282.47 1668.95 cv
1285.49 1668.95 1287.32 1668.43 1288.9 1667.75 cv
1289.62 1670.78 li
1288.13 1671.45 1285.59 1672.22 1281.9 1672.22 cv
1274.75 1672.22 1270.48 1667.51 1270.48 1660.51 cv
1270.48 1653.51 1274.6 1647.99 1281.37 1647.99 cv
1288.95 1647.99 1290.96 1654.66 1290.96 1658.93 cv
1290.96 1659.79 1290.87 1660.46 1290.82 1660.89 cv
1274.51 1660.89 li
cp
f
1295.63 1667.42 mo
1296.88 1668.23 1299.09 1669.1 1301.2 1669.1 cv
1304.27 1669.1 1305.7 1667.56 1305.7 1665.64 cv
1305.7 1663.63 1304.51 1662.52 1301.39 1661.38 cv
1297.21 1659.89 1295.25 1657.59 1295.25 1654.8 cv
1295.25 1651.06 1298.27 1647.99 1303.26 1647.99 cv
1305.61 1647.99 1307.67 1648.66 1308.97 1649.43 cv
1307.91 1652.5 li
1307 1651.93 1305.32 1651.16 1303.16 1651.16 cv
1300.67 1651.16 1299.28 1652.59 1299.28 1654.32 cv
1299.28 1656.24 1300.67 1657.1 1303.69 1658.26 cv
1307.72 1659.79 1309.78 1661.81 1309.78 1665.26 cv
1309.78 1669.34 1306.62 1672.22 1301.1 1672.22 cv
1298.56 1672.22 1296.21 1671.59 1294.58 1670.63 cv
1295.63 1667.42 li
cp
f
1340.12 1657.87 mo
1340.17 1655.19 1339.02 1651.01 1334.27 1651.01 cv
1330 1651.01 1328.12 1654.95 1327.79 1657.87 cv
1340.12 1657.87 li
cp
1327.74 1660.89 mo
1327.84 1666.6 1331.48 1668.95 1335.7 1668.95 cv
1338.73 1668.95 1340.55 1668.43 1342.13 1667.75 cv
1342.85 1670.78 li
1341.36 1671.45 1338.82 1672.22 1335.13 1672.22 cv
1327.98 1672.22 1323.71 1667.51 1323.71 1660.51 cv
1323.71 1653.51 1327.84 1647.99 1334.6 1647.99 cv
1342.18 1647.99 1344.2 1654.66 1344.2 1658.93 cv
1344.2 1659.79 1344.1 1660.46 1344.05 1660.89 cv
1327.74 1660.89 li
cp
f
1352.03 1660.17 mo
1352.03 1665.26 1354.96 1669.1 1359.08 1669.1 cv
1363.11 1669.1 1366.13 1665.31 1366.13 1660.08 cv
1366.13 1656.14 1364.17 1651.16 1359.18 1651.16 cv
1354.19 1651.16 1352.03 1655.76 1352.03 1660.17 cv
cp
1370.45 1659.94 mo
1370.45 1668.52 1364.5 1672.26 1358.89 1672.26 cv
1352.6 1672.26 1347.76 1667.66 1347.76 1660.32 cv
1347.76 1652.55 1352.84 1647.99 1359.27 1647.99 cv
1365.94 1647.99 1370.45 1652.84 1370.45 1659.94 cv
cp
f
1375.21 1667.42 mo
1376.46 1668.23 1378.67 1669.1 1380.78 1669.1 cv
1383.85 1669.1 1385.29 1667.56 1385.29 1665.64 cv
1385.29 1663.63 1384.09 1662.52 1380.97 1661.38 cv
1376.8 1659.89 1374.83 1657.59 1374.83 1654.8 cv
1374.83 1651.06 1377.85 1647.99 1382.84 1647.99 cv
1385.19 1647.99 1387.26 1648.66 1388.55 1649.43 cv
1387.49 1652.5 li
1386.58 1651.93 1384.9 1651.16 1382.75 1651.16 cv
1380.25 1651.16 1378.86 1652.59 1378.86 1654.32 cv
1378.86 1656.24 1380.25 1657.1 1383.27 1658.26 cv
1387.3 1659.79 1389.36 1661.81 1389.36 1665.26 cv
1389.36 1669.34 1386.2 1672.22 1380.68 1672.22 cv
1378.14 1672.22 1375.79 1671.59 1374.16 1670.63 cv
1375.21 1667.42 li
cp
f
217.654 1715.52 mo
217.654 1714.94 217.605 1714.27 217.461 1713.74 cv
216.837 1711.16 214.584 1708.94 211.418 1708.94 cv
207.05 1708.94 204.412 1712.64 204.412 1717.87 cv
204.412 1722.48 206.619 1726.51 211.273 1726.51 cv
214.007 1726.51 216.357 1724.82 217.318 1721.9 cv
217.509 1721.32 217.654 1720.51 217.654 1719.88 cv
217.654 1715.52 li
cp
217.654 1725.74 mo
217.559 1725.74 li
216.31 1728.04 213.721 1729.86 209.978 1729.86 cv
204.556 1729.86 200.143 1725.16 200.143 1718.11 cv
200.143 1709.43 205.756 1705.59 210.65 1705.59 cv
214.248 1705.59 216.646 1707.36 217.796 1709.62 cv
217.893 1709.62 li
218.037 1706.12 li
222.019 1706.12 li
221.924 1708.09 221.875 1710.1 221.875 1712.5 cv
221.875 1738.84 li
217.654 1738.84 li
217.654 1725.74 li
cp
f
248.275 1723 mo
248.275 1725.4 248.322 1727.51 248.466 1729.34 cv
244.725 1729.34 li
244.484 1725.55 li
244.388 1725.55 li
243.285 1727.42 240.839 1729.86 236.712 1729.86 cv
233.068 1729.86 228.701 1727.85 228.701 1719.69 cv
228.701 1706.12 li
232.923 1706.12 li
232.923 1718.97 li
232.923 1723.39 234.267 1726.36 238.105 1726.36 cv
240.935 1726.36 242.902 1724.39 243.669 1722.52 cv
243.91 1721.9 244.053 1721.13 244.053 1720.37 cv
244.053 1706.12 li
248.275 1706.12 li
248.275 1723 li
cp
f
255.292 1729.34 mo
255.292 1706.12 li
259.515 1706.12 li
259.515 1729.34 li
255.292 1729.34 li
cp
259.994 1699.59 mo
260.042 1701.03 258.986 1702.18 257.308 1702.18 cv
255.82 1702.18 254.766 1701.03 254.766 1699.59 cv
254.766 1698.11 255.869 1696.95 257.404 1696.95 cv
258.986 1696.95 259.994 1698.11 259.994 1699.59 cv
cp
f
276.701 1713.36 mo
276.701 1710.63 276.654 1708.27 276.51 1706.12 cv
280.203 1706.12 li
280.347 1710.67 li
280.539 1710.67 li
281.594 1707.55 284.136 1705.59 286.966 1705.59 cv
287.447 1705.59 287.783 1705.64 288.166 1705.73 cv
288.166 1709.71 li
287.734 1709.62 287.303 1709.57 286.729 1709.57 cv
283.754 1709.57 281.642 1711.82 281.066 1714.99 cv
280.97 1715.57 280.875 1716.24 280.875 1716.96 cv
280.875 1729.34 li
276.701 1729.34 li
276.701 1713.36 li
cp
f
304.389 1717.48 mo
299.783 1717.39 294.554 1718.21 294.554 1722.71 cv
294.554 1725.45 296.379 1726.75 298.537 1726.75 cv
301.558 1726.75 303.478 1724.82 304.15 1722.86 cv
304.292 1722.43 304.389 1721.95 304.389 1721.52 cv
304.389 1717.48 li
cp
305.014 1729.34 mo
304.677 1726.41 li
304.533 1726.41 li
303.238 1728.24 300.744 1729.86 297.433 1729.86 cv
292.732 1729.86 290.333 1726.55 290.333 1723.2 cv
290.333 1717.58 295.322 1714.51 304.292 1714.56 cv
304.292 1714.08 li
304.292 1712.16 303.766 1708.71 299.018 1708.71 cv
296.857 1708.71 294.604 1709.38 292.973 1710.43 cv
292.011 1707.65 li
293.932 1706.41 296.713 1705.59 299.641 1705.59 cv
306.74 1705.59 308.466 1710.43 308.466 1715.09 cv
308.466 1723.77 li
308.466 1725.79 308.562 1727.75 308.852 1729.34 cv
305.014 1729.34 li
cp
f
320.187 1699.45 mo
320.187 1706.12 li
326.232 1706.12 li
326.232 1709.33 li
320.187 1709.33 li
320.187 1721.85 li
320.187 1724.73 321.001 1726.36 323.353 1726.36 cv
324.457 1726.36 325.271 1726.22 325.798 1726.07 cv
325.992 1729.24 li
325.175 1729.58 323.88 1729.82 322.25 1729.82 cv
320.283 1729.82 318.699 1729.19 317.691 1728.04 cv
316.492 1726.79 316.06 1724.73 316.06 1722 cv
316.06 1709.33 li
312.462 1709.33 li
312.462 1706.12 li
316.06 1706.12 li
316.06 1700.55 li
320.187 1699.45 li
cp
f
330.988 1729.34 mo
330.988 1706.12 li
335.211 1706.12 li
335.211 1729.34 li
330.988 1729.34 li
cp
335.689 1699.59 mo
335.738 1701.03 334.681 1702.18 333.003 1702.18 cv
331.515 1702.18 330.461 1701.03 330.461 1699.59 cv
330.461 1698.11 331.564 1696.95 333.099 1696.95 cv
334.681 1696.95 335.689 1698.11 335.689 1699.59 cv
cp
f
344.811 1717.77 mo
344.811 1722.86 347.738 1726.7 351.863 1726.7 cv
355.892 1726.7 358.916 1722.91 358.916 1717.68 cv
358.916 1713.74 356.949 1708.76 351.958 1708.76 cv
346.971 1708.76 344.811 1713.36 344.811 1717.77 cv
cp
363.232 1717.54 mo
363.232 1726.12 357.285 1729.86 351.671 1729.86 cv
345.386 1729.86 340.541 1725.26 340.541 1717.92 cv
340.541 1710.14 345.627 1705.59 352.055 1705.59 cv
358.725 1705.59 363.232 1710.43 363.232 1717.54 cv
cp
f
368.572 1712.4 mo
368.572 1710 368.525 1708.04 368.381 1706.12 cv
372.123 1706.12 li
372.361 1709.95 li
372.459 1709.95 li
373.609 1707.75 376.297 1705.59 380.135 1705.59 cv
383.347 1705.59 388.337 1707.51 388.337 1715.47 cv
388.337 1729.34 li
384.115 1729.34 li
384.115 1715.95 li
384.115 1712.21 382.725 1709.09 378.742 1709.09 cv
375.96 1709.09 373.8 1711.06 373.082 1713.41 cv
372.891 1713.94 372.794 1714.66 372.794 1715.38 cv
372.794 1729.34 li
368.572 1729.34 li
368.572 1712.4 li
cp
f
409.939 1715.47 mo
409.986 1712.79 408.835 1708.61 404.085 1708.61 cv
399.816 1708.61 397.945 1712.54 397.609 1715.47 cv
409.939 1715.47 li
cp
397.563 1718.49 mo
397.658 1724.2 401.303 1726.55 405.525 1726.55 cv
408.546 1726.55 410.371 1726.02 411.953 1725.35 cv
412.673 1728.38 li
411.185 1729.05 408.645 1729.82 404.949 1729.82 cv
397.8 1729.82 393.531 1725.11 393.531 1718.11 cv
393.531 1711.11 397.658 1705.59 404.422 1705.59 cv
412.001 1705.59 414.017 1712.26 414.017 1716.53 cv
414.017 1717.39 413.919 1718.06 413.873 1718.49 cv
397.563 1718.49 li
cp
f
431.066 1706.12 mo
435.625 1719.16 li
436.392 1721.28 437.016 1723.2 437.496 1725.11 cv
437.638 1725.11 li
438.166 1723.2 438.837 1721.28 439.605 1719.16 cv
444.115 1706.12 li
448.529 1706.12 li
439.414 1729.34 li
435.385 1729.34 li
426.556 1706.12 li
431.066 1706.12 li
cp
f
454.632 1717.77 mo
454.632 1722.86 457.56 1726.7 461.685 1726.7 cv
465.715 1726.7 468.738 1722.91 468.738 1717.68 cv
468.738 1713.74 466.771 1708.76 461.781 1708.76 cv
456.792 1708.76 454.632 1713.36 454.632 1717.77 cv
cp
473.054 1717.54 mo
473.054 1726.12 467.107 1729.86 461.494 1729.86 cv
455.209 1729.86 450.363 1725.26 450.363 1717.92 cv
450.363 1710.14 455.449 1705.59 461.876 1705.59 cv
468.547 1705.59 473.054 1710.43 473.054 1717.54 cv
cp
f
478.395 1695.27 mo
482.617 1695.27 li
482.617 1729.34 li
478.395 1729.34 li
478.395 1695.27 li
cp
f
509.152 1723 mo
509.152 1725.4 509.199 1727.51 509.343 1729.34 cv
505.601 1729.34 li
505.361 1725.55 li
505.266 1725.55 li
504.162 1727.42 501.716 1729.86 497.589 1729.86 cv
493.945 1729.86 489.578 1727.85 489.578 1719.69 cv
489.578 1706.12 li
493.8 1706.12 li
493.8 1718.97 li
493.8 1723.39 495.145 1726.36 498.982 1726.36 cv
501.813 1726.36 503.779 1724.39 504.547 1722.52 cv
504.787 1721.9 504.929 1721.13 504.929 1720.37 cv
504.929 1706.12 li
509.152 1706.12 li
509.152 1723 li
cp
f
520.344 1719.88 mo
520.344 1720.51 520.439 1721.09 520.535 1721.61 cv
521.302 1724.54 523.845 1726.55 526.869 1726.55 cv
531.33 1726.55 533.92 1722.91 533.92 1717.58 cv
533.92 1712.93 531.474 1708.94 527.011 1708.94 cv
524.132 1708.94 521.447 1711.01 520.63 1714.18 cv
520.488 1714.7 520.344 1715.33 520.344 1715.9 cv
520.344 1719.88 li
cp
516.17 1713.7 mo
516.17 1710.72 516.074 1708.33 515.978 1706.12 cv
519.767 1706.12 li
519.959 1710.1 li
520.056 1710.1 li
521.783 1707.27 524.517 1705.59 528.307 1705.59 cv
533.92 1705.59 538.142 1710.34 538.142 1717.39 cv
538.142 1725.74 533.057 1729.86 527.588 1729.86 cv
524.517 1729.86 521.83 1728.52 520.439 1726.22 cv
520.344 1726.22 li
520.344 1738.84 li
516.17 1738.84 li
516.17 1713.7 li
cp
f
548.566 1699.45 mo
548.566 1706.12 li
554.611 1706.12 li
554.611 1709.33 li
548.566 1709.33 li
548.566 1721.85 li
548.566 1724.73 549.38 1726.36 551.732 1726.36 cv
552.836 1726.36 553.65 1726.22 554.177 1726.07 cv
554.371 1729.24 li
553.555 1729.58 552.259 1729.82 550.629 1729.82 cv
548.662 1729.82 547.078 1729.19 546.07 1728.04 cv
544.871 1726.79 544.439 1724.73 544.439 1722 cv
544.439 1709.33 li
540.842 1709.33 li
540.842 1706.12 li
544.439 1706.12 li
544.439 1700.55 li
548.566 1699.45 li
cp
f
571.604 1717.48 mo
566.998 1717.39 561.768 1718.21 561.768 1722.71 cv
561.768 1725.45 563.591 1726.75 565.75 1726.75 cv
568.771 1726.75 570.691 1724.82 571.363 1722.86 cv
571.506 1722.43 571.604 1721.95 571.604 1721.52 cv
571.604 1717.48 li
cp
572.226 1729.34 mo
571.891 1726.41 li
571.746 1726.41 li
570.451 1728.24 567.957 1729.86 564.646 1729.86 cv
559.945 1729.86 557.547 1726.55 557.547 1723.2 cv
557.547 1717.58 562.535 1714.51 571.506 1714.56 cv
571.506 1714.08 li
571.506 1712.16 570.979 1708.71 566.229 1708.71 cv
564.07 1708.71 561.816 1709.38 560.185 1710.43 cv
559.224 1707.65 li
561.144 1706.41 563.928 1705.59 566.854 1705.59 cv
573.953 1705.59 575.679 1710.43 575.679 1715.09 cv
575.679 1723.77 li
575.679 1725.79 575.775 1727.75 576.064 1729.34 cv
572.226 1729.34 li
cp
f
587.398 1699.45 mo
587.398 1706.12 li
593.443 1706.12 li
593.443 1709.33 li
587.398 1709.33 li
587.398 1721.85 li
587.398 1724.73 588.212 1726.36 590.564 1726.36 cv
591.668 1726.36 592.482 1726.22 593.009 1726.07 cv
593.203 1729.24 li
592.387 1729.58 591.091 1729.82 589.46 1729.82 cv
587.494 1729.82 585.91 1729.19 584.902 1728.04 cv
583.703 1726.79 583.271 1724.73 583.271 1722 cv
583.271 1709.33 li
579.674 1709.33 li
579.674 1706.12 li
583.271 1706.12 li
583.271 1700.55 li
587.398 1699.45 li
cp
f
612.64 1715.47 mo
612.688 1712.79 611.537 1708.61 606.787 1708.61 cv
602.517 1708.61 600.646 1712.54 600.31 1715.47 cv
612.64 1715.47 li
cp
600.263 1718.49 mo
600.359 1724.2 604.005 1726.55 608.226 1726.55 cv
611.248 1726.55 613.072 1726.02 614.654 1725.35 cv
615.375 1728.38 li
613.886 1729.05 611.345 1729.82 607.65 1729.82 cv
600.501 1729.82 596.232 1725.11 596.232 1718.11 cv
596.232 1711.11 600.359 1705.59 607.123 1705.59 cv
614.703 1705.59 616.718 1712.26 616.718 1716.53 cv
616.718 1717.39 616.621 1718.06 616.574 1718.49 cv
600.263 1718.49 li
cp
f
621.96 1712.4 mo
621.96 1710 621.912 1708.04 621.77 1706.12 cv
625.463 1706.12 li
625.654 1709.86 li
625.798 1709.86 li
627.093 1707.65 629.253 1705.59 633.092 1705.59 cv
636.258 1705.59 638.656 1707.51 639.664 1710.24 cv
639.759 1710.24 li
640.479 1708.94 641.39 1707.94 642.349 1707.22 cv
643.74 1706.16 645.275 1705.59 647.482 1705.59 cv
650.552 1705.59 655.111 1707.6 655.111 1715.66 cv
655.111 1729.34 li
650.984 1729.34 li
650.984 1716.19 li
650.984 1711.73 649.353 1709.04 645.947 1709.04 cv
643.548 1709.04 641.677 1710.82 640.958 1712.88 cv
640.767 1713.46 640.623 1714.23 640.623 1714.99 cv
640.623 1729.34 li
636.498 1729.34 li
636.498 1715.43 li
636.498 1711.73 634.865 1709.04 631.652 1709.04 cv
629.014 1709.04 627.093 1711.16 626.422 1713.27 cv
626.183 1713.89 626.085 1714.61 626.085 1715.33 cv
626.085 1729.34 li
621.96 1729.34 li
621.96 1712.4 li
cp
f
671.592 1725.02 mo
672.839 1725.84 675.046 1726.7 677.158 1726.7 cv
680.228 1726.7 681.666 1725.16 681.666 1723.24 cv
681.666 1721.23 680.467 1720.13 677.349 1718.97 cv
673.175 1717.48 671.208 1715.18 671.208 1712.4 cv
671.208 1708.66 674.23 1705.59 679.221 1705.59 cv
681.57 1705.59 683.634 1706.26 684.929 1707.03 cv
683.873 1710.1 li
682.962 1709.52 681.283 1708.76 679.125 1708.76 cv
676.629 1708.76 675.238 1710.2 675.238 1711.92 cv
675.238 1713.84 676.629 1714.7 679.652 1715.86 cv
683.681 1717.39 685.744 1719.41 685.744 1722.86 cv
685.744 1726.94 682.578 1729.82 677.061 1729.82 cv
674.519 1729.82 672.167 1729.19 670.537 1728.24 cv
671.592 1725.02 li
cp
f
705.904 1715.47 mo
705.951 1712.79 704.801 1708.61 700.05 1708.61 cv
695.781 1708.61 693.91 1712.54 693.574 1715.47 cv
705.904 1715.47 li
cp
693.527 1718.49 mo
693.623 1724.2 697.267 1726.55 701.49 1726.55 cv
704.511 1726.55 706.335 1726.02 707.917 1725.35 cv
708.639 1728.38 li
707.15 1729.05 704.609 1729.82 700.914 1729.82 cv
693.766 1729.82 689.496 1725.11 689.496 1718.11 cv
689.496 1711.11 693.623 1705.59 700.386 1705.59 cv
707.966 1705.59 709.982 1712.26 709.982 1716.53 cv
709.982 1717.39 709.885 1718.06 709.838 1718.49 cv
693.527 1718.49 li
cp
f
731.054 1715.52 mo
731.054 1714.94 731.005 1714.27 730.861 1713.74 cv
730.238 1711.16 727.984 1708.94 724.818 1708.94 cv
720.451 1708.94 717.813 1712.64 717.813 1717.87 cv
717.813 1722.48 720.019 1726.51 724.673 1726.51 cv
727.408 1726.51 729.76 1724.82 730.719 1721.9 cv
730.91 1721.32 731.054 1720.51 731.054 1719.88 cv
731.054 1715.52 li
cp
731.054 1725.74 mo
730.958 1725.74 li
729.71 1728.04 727.121 1729.86 723.379 1729.86 cv
717.957 1729.86 713.543 1725.16 713.543 1718.11 cv
713.543 1709.43 719.156 1705.59 724.05 1705.59 cv
727.648 1705.59 730.046 1707.36 731.197 1709.62 cv
731.294 1709.62 li
731.438 1706.12 li
735.42 1706.12 li
735.324 1708.09 735.275 1710.1 735.275 1712.5 cv
735.275 1738.84 li
731.054 1738.84 li
731.054 1725.74 li
cp
f
761.675 1723 mo
761.675 1725.4 761.723 1727.51 761.867 1729.34 cv
758.125 1729.34 li
757.885 1725.55 li
757.789 1725.55 li
756.686 1727.42 754.24 1729.86 750.113 1729.86 cv
746.468 1729.86 742.101 1727.85 742.101 1719.69 cv
742.101 1706.12 li
746.324 1706.12 li
746.324 1718.97 li
746.324 1723.39 747.667 1726.36 751.505 1726.36 cv
754.336 1726.36 756.302 1724.39 757.07 1722.52 cv
757.311 1721.9 757.453 1721.13 757.453 1720.37 cv
757.453 1706.12 li
761.675 1706.12 li
761.675 1723 li
cp
f
768.693 1729.34 mo
768.693 1706.12 li
772.916 1706.12 li
772.916 1729.34 li
768.693 1729.34 li
cp
773.394 1699.59 mo
773.443 1701.03 772.386 1702.18 770.708 1702.18 cv
769.22 1702.18 768.166 1701.03 768.166 1699.59 cv
768.166 1698.11 769.269 1696.95 770.805 1696.95 cv
772.386 1696.95 773.394 1698.11 773.394 1699.59 cv
cp
f
790.101 1712.4 mo
790.101 1710 790.052 1708.04 789.91 1706.12 cv
793.652 1706.12 li
793.892 1709.95 li
793.988 1709.95 li
795.139 1707.75 797.826 1705.59 801.664 1705.59 cv
804.877 1705.59 809.867 1707.51 809.867 1715.47 cv
809.867 1729.34 li
805.645 1729.34 li
805.645 1715.95 li
805.645 1712.21 804.253 1709.09 800.271 1709.09 cv
797.49 1709.09 795.33 1711.06 794.611 1713.41 cv
794.42 1713.94 794.324 1714.66 794.324 1715.38 cv
794.324 1729.34 li
790.101 1729.34 li
790.101 1712.4 li
cp
f
831.468 1715.47 mo
831.515 1712.79 830.365 1708.61 825.615 1708.61 cv
821.345 1708.61 819.474 1712.54 819.139 1715.47 cv
831.468 1715.47 li
cp
819.091 1718.49 mo
819.187 1724.2 822.833 1726.55 827.055 1726.55 cv
830.076 1726.55 831.9 1726.02 833.482 1725.35 cv
834.203 1728.38 li
832.714 1729.05 830.174 1729.82 826.478 1729.82 cv
819.33 1729.82 815.061 1725.11 815.061 1718.11 cv
815.061 1711.11 819.187 1705.59 825.951 1705.59 cv
833.531 1705.59 835.546 1712.26 835.546 1716.53 cv
835.546 1717.39 835.449 1718.06 835.402 1718.49 cv
819.091 1718.49 li
cp
f
840.212 1725.02 mo
841.461 1725.84 843.668 1726.7 845.779 1726.7 cv
848.85 1726.7 850.287 1725.16 850.287 1723.24 cv
850.287 1721.23 849.087 1720.13 845.971 1718.97 cv
841.796 1717.48 839.83 1715.18 839.83 1712.4 cv
839.83 1708.66 842.852 1705.59 847.841 1705.59 cv
850.191 1705.59 852.256 1706.26 853.55 1707.03 cv
852.494 1710.1 li
851.584 1709.52 849.904 1708.76 847.746 1708.76 cv
845.25 1708.76 843.859 1710.2 843.859 1711.92 cv
843.859 1713.84 845.25 1714.7 848.273 1715.86 cv
852.302 1717.39 854.365 1719.41 854.365 1722.86 cv
854.365 1726.94 851.199 1729.82 845.681 1729.82 cv
843.141 1729.82 840.789 1729.19 839.158 1728.24 cv
840.212 1725.02 li
cp
f
876.347 1728.47 mo
875.244 1729.05 872.798 1729.82 869.679 1729.82 cv
862.675 1729.82 858.117 1725.07 858.117 1717.97 cv
858.117 1710.82 863.011 1705.64 870.592 1705.64 cv
873.086 1705.64 875.292 1706.26 876.443 1706.84 cv
875.484 1710.1 li
874.476 1709.52 872.895 1709 870.592 1709 cv
865.265 1709 862.386 1712.93 862.386 1717.77 cv
862.386 1723.15 865.842 1726.46 870.447 1726.46 cv
872.845 1726.46 874.43 1725.84 875.629 1725.3 cv
876.347 1728.47 li
cp
f
881.3 1729.34 mo
881.3 1706.12 li
885.523 1706.12 li
885.523 1729.34 li
881.3 1729.34 li
cp
886.001 1699.59 mo
886.05 1701.03 884.994 1702.18 883.316 1702.18 cv
881.828 1702.18 880.773 1701.03 880.773 1699.59 cv
880.773 1698.11 881.876 1696.95 883.412 1696.95 cv
884.994 1696.95 886.001 1698.11 886.001 1699.59 cv
cp
f
911.96 1723 mo
911.96 1725.4 912.007 1727.51 912.152 1729.34 cv
908.41 1729.34 li
908.169 1725.55 li
908.074 1725.55 li
906.97 1727.42 904.525 1729.86 900.398 1729.86 cv
896.754 1729.86 892.387 1727.85 892.387 1719.69 cv
892.387 1706.12 li
896.609 1706.12 li
896.609 1718.97 li
896.609 1723.39 897.953 1726.36 901.791 1726.36 cv
904.621 1726.36 906.588 1724.39 907.355 1722.52 cv
907.595 1721.9 907.738 1721.13 907.738 1720.37 cv
907.738 1706.12 li
911.96 1706.12 li
911.96 1723 li
cp
f
918.98 1712.4 mo
918.98 1710 918.932 1708.04 918.789 1706.12 cv
922.531 1706.12 li
922.771 1709.95 li
922.867 1709.95 li
924.017 1707.75 926.705 1705.59 930.542 1705.59 cv
933.755 1705.59 938.746 1707.51 938.746 1715.47 cv
938.746 1729.34 li
934.523 1729.34 li
934.523 1715.95 li
934.523 1712.21 933.133 1709.09 929.15 1709.09 cv
926.369 1709.09 924.208 1711.06 923.49 1713.41 cv
923.298 1713.94 923.203 1714.66 923.203 1715.38 cv
923.203 1729.34 li
918.98 1729.34 li
918.98 1712.4 li
cp
f
950.513 1699.45 mo
950.513 1706.12 li
956.559 1706.12 li
956.559 1709.33 li
950.513 1709.33 li
950.513 1721.85 li
950.513 1724.73 951.328 1726.36 953.679 1726.36 cv
954.783 1726.36 955.597 1726.22 956.127 1726.07 cv
956.318 1729.24 li
955.501 1729.58 954.207 1729.82 952.576 1729.82 cv
950.609 1729.82 949.025 1729.19 948.017 1728.04 cv
946.818 1726.79 946.386 1724.73 946.386 1722 cv
946.386 1709.33 li
942.789 1709.33 li
942.789 1706.12 li
946.386 1706.12 li
946.386 1700.55 li
950.513 1699.45 li
cp
f
960.164 1726.84 mo
960.164 1725.07 961.363 1723.82 963.042 1723.82 cv
964.722 1723.82 965.873 1725.07 965.873 1726.84 cv
965.873 1728.57 964.769 1729.86 962.994 1729.86 cv
961.316 1729.86 960.164 1728.57 960.164 1726.84 cv
cp
f
2537.5 740.296 mo
2532.29 723.53 2534.62 705.624 2523.38 690.587 cv
2519.41 685.273 2515.29 682.428 2511.61 676.636 cv
2505.68 667.312 2491.93 653.306 2487.66 647.493 cv
2487.06 646.683 2486.31 645.759 2486.53 644.691 cv
2486.97 642.499 2489.85 640.979 2492.26 640.983 cv
2494.55 640.985 2496.17 642.239 2497.94 643.51 cv
2504.21 648 2516.04 658.542 2518.69 655.777 cv
2521.81 652.517 2521.32 643.477 2515.89 626.935 cv
2510.46 610.394 2500.81 585.948 2506.79 585.083 cv
2512.77 584.218 2529.47 629.812 2532.06 629.694 cv
2534.66 629.576 2533.3 575.042 2539.36 572.614 cv
2545.41 570.186 2544.86 623.691 2546.75 626.057 cv
2548.64 628.422 2561.93 576.87 2567.25 578.333 cv
2574.26 580.262 2559.11 625.051 2561.65 628.576 cv
2564.19 632.101 2577.64 597.957 2583.94 595.963 cv
2590.24 593.97 2582.94 617.118 2577.22 629.314 cv
2572.89 638.529 2573.21 667.346 2573.66 673.937 cv
2574.11 680.527 2568.51 693.056 2570.32 703.447 cv
2572.12 713.838 2576.01 717.655 2576.01 717.655 cv
2563.17 725.198 2550.33 732.744 2537.5 740.296 cv
cp
.972549 .643137 .572549 rgb
f
2470.28 935.94 mo
2565.02 899.105 li
2525.2 718.415 li
2580.46 699.997 li
2580.46 699.997 2633.22 911.052 2634.21 924.989 cv
2635.21 938.927 2521.22 1044.45 2521.22 1044.45 cv
2470.28 935.94 li
cp
.235294 .560784 .486275 rgb
f
2220.76 717.431 mo
2218.85 708.328 2214.86 699.814 2211.89 690.997 cv
2209.54 684.005 2207.88 674.587 2208.87 667.145 cv
2209.75 660.568 2211.96 656.077 2212.35 649.225 cv
2212.6 644.884 2213.37 640.57 2214.18 636.305 cv
2215.06 631.663 2216.08 627.048 2217.08 622.43 cv
2217.81 619.012 2218.64 615.576 2219.07 612.103 cv
2219.2 611.106 2219.4 609.935 2218.69 609.106 cv
2218.06 608.359 2217.06 607.983 2216.11 607.855 cv
2214.66 607.661 2213.16 607.948 2211.88 608.66 cv
2209.88 609.779 2209.08 611.662 2208.15 613.636 cv
2206.52 617.096 2205.11 620.657 2203.55 624.148 cv
2202.2 627.18 2200.83 630.514 2198.65 633.065 cv
2198.04 633.779 2197.06 634.781 2196.01 634.458 cv
2191.7 633.13 2187.71 625 2184.4 607.91 cv
2181.08 590.82 2177.59 564.77 2171.95 566.927 cv
2166.31 569.083 2173.94 617.036 2171.62 618.197 cv
2169.3 619.358 2143.91 571.075 2137.44 571.905 cv
2130.97 572.734 2157.52 619.192 2157.02 622.179 cv
2156.52 625.166 2119.8 586.62 2115.87 590.488 cv
2110.69 595.59 2145.74 627.323 2145.24 631.637 cv
2144.74 635.951 2115.37 624.004 2108.9 625.332 cv
2102.43 626.659 2119.69 637.942 2129.31 641.26 cv
2138.93 644.579 2154.03 671.126 2156.85 677.1 cv
2159.67 683.073 2170.67 691.286 2174.15 701.242 cv
2177.63 711.197 2176.1 716.423 2176.1 716.423 cv
2190.99 716.755 2205.88 717.089 2220.76 717.431 cv
cp
.972549 .643137 .572549 rgb
f
2511.57 1335.99 mo
2511.58 1336.16 li
2511.57 1335.99 li
cp
.968627 .8 .498039 rgb
f
2583.6 1229.27 mo
2580.96 1223.97 2578.46 1219.07 2576.06 1214.47 cv
2553.99 1222.09 2529.04 1230.56 2503.38 1239.28 cv
2511.57 1335.99 li
2511.5 1333.98 2519.39 1365.32 2528 1400.02 cv
2624.54 1400.02 li
2615.61 1339.89 2601.4 1265.27 2583.6 1229.27 cv
cp
f
2503.38 1239.28 mo
2460.62 1253.82 2421.38 1267.76 2384.67 1281.09 cv
2392.14 1316.18 2401.87 1360.8 2410.25 1400.02 cv
2534.84 1400.02 li
2536.08 1358.45 2535.2 1314.12 2530.95 1277.46 cv
2503.38 1239.28 li
cp
.980392 .878431 .698039 rgb
f
2487.23 936.397 mo
2456.76 936.562 li
2456.76 936.562 2402.81 939.528 2392.91 940.792 cv
2392.06 940.9 2375.72 1133.81 2374.72 1205.8 cv
2373.71 1277.79 2385.33 1334.16 2385.33 1334.16 cv
2385.33 1334.16 2454.38 1332.23 2502.31 1322.21 cv
2552.14 1311.79 2616.79 1287.37 2616.79 1287.37 cv
2616.79 1287.37 2540.8 1114.95 2527.24 1073.43 cv
2513.68 1031.91 2487.23 936.397 2487.23 936.397 cv
cp
1 1 1 rgb
f
2565.05 1076.87 mo
2493.35 934.613 li
2456.51 936.272 li
2456.51 936.272 2489.69 993.323 2508.93 1050.24 cv
2528.18 1107.15 2607.85 1319.27 2607.85 1319.27 cv
2607.85 1319.27 2636.62 1319.95 2642.19 1302.09 cv
2647.76 1284.24 2565.05 1076.87 2565.05 1076.87 cv
cp
.235294 .560784 .486275 rgb
f
2393.16 940.774 mo
2290.26 831.906 li
2290.26 831.906 2218.51 692.49 2216.59 687.719 cv
2214.69 683.034 2177.58 693.871 2165.81 700.993 cv
2162.64 702.911 2227.54 878.53 2227.54 878.53 cv
2311.21 984.362 li
2311.21 984.362 2347.31 1045.86 2348.8 1096.5 cv
2351.29 1180.61 2339.04 1337.95 2343.02 1341.12 cv
2366.73 1352.42 2447.55 1370.99 2460.49 1341.12 cv
2505.43 1237.42 2393.16 940.774 2393.16 940.774 cv
cp
f
2382.84 885.167 mo
2393.16 940.774 li
2393.16 940.774 2434.19 1008.54 2454.55 998.536 cv
2471.62 990.146 2457.47 938.116 2457.47 938.116 cv
2457.47 938.116 2452.1 926.053 2447.7 912.325 cv
2444.62 902.731 2442.02 892.324 2442.05 884.651 cv
2442.12 865.999 2382.84 885.167 2382.84 885.167 cv
cp
.968627 .643137 .568627 rgb
f
2442.05 884.651 mo
2442.12 865.999 2393.58 885.8 2393.58 885.8 cv
2393.6 891.256 li
2395.64 894.589 2397.92 897.357 2400.48 899.352 cv
2413.63 909.618 2432.37 914.08 2447.67 912.234 cv
2444.6 902.665 2442.02 892.299 2442.05 884.651 cv
cp
.956863 .454902 .345098 rgb
f
2449.31 767.719 mo
2449.31 767.719 2465.84 801.21 2464.05 827.386 cv
2462.25 853.562 2454.48 870.586 2454.48 870.586 cv
2398.81 783.626 li
2449.31 767.719 li
cp
.094118 .27451 .333333 rgb
f
2375.94 793.49 mo
2374.48 792.977 2364.95 868.619 2384.59 889.22 cv
2404.23 909.821 2442.19 916.264 2455.62 899.765 cv
2470.48 881.514 2468.95 800.327 2438.52 779.232 cv
2408.08 758.137 2375.94 793.49 2375.94 793.49 cv
cp
.968627 .643137 .568627 rgb
f
2376.38 745.885 mo
2357.77 758.415 2348.3 768.097 2333.64 792.732 cv
2315.61 823.024 2338.98 859.788 2360.46 875.957 cv
2381.93 892.126 2381.74 910.414 2381.74 910.414 cv
2385.09 901.226 li
2387.5 893.792 2376.7 861.401 2374.71 857.274 cv
2369.48 846.39 2368.48 844.049 2372.91 834.91 cv
2376.33 827.873 2375.54 811.295 2380.92 799.665 cv
2412.96 796.929 li
2412.96 796.929 2433.06 794.735 2444.37 784.63 cv
2476.83 755.614 2425.56 712.068 2376.38 745.885 cv
cp
.094118 .27451 .333333 rgb
f
2379.27 844.134 mo
2382.05 852.924 2380.16 861.36 2375.05 862.976 cv
2369.94 864.591 2363.55 858.775 2360.77 849.985 cv
2357.99 841.195 2359.88 832.76 2364.99 831.144 cv
2370.1 829.528 2376.49 835.344 2379.27 844.134 cv
cp
.968627 .643137 .568627 rgb
f
2935.53 906.1 mo
2935.53 906.1 2948.89 757.286 2952.04 727.2 cv
2955.19 697.113 2940.51 599.229 2940.08 594.983 cv
2939.64 590.737 2890.6 561.798 2896.01 557.243 cv
2901.42 552.688 2920.3 573.29 2925.41 567.123 cv
2930.52 560.957 2920.59 493.497 2925.77 494.487 cv
2935.46 496.34 2933.49 535.551 2938.18 535.599 cv
2942.88 535.647 2936.32 494.486 2944.16 491.85 cv
2952.01 489.214 2946.6 531.372 2950.05 533.123 cv
2953.49 534.874 2960.62 494.128 2967.79 498.445 cv
2971.68 500.789 2960.54 534.529 2965.91 534.466 cv
2971.27 534.401 2983.94 509.869 2988.16 512.986 cv
2992.37 516.103 2974.68 532.173 2974.19 546.536 cv
2973.71 560.899 2965.68 571.039 2971.83 594.096 cv
2977.97 617.153 3013.61 699.967 3010.27 748.852 cv
3006.94 797.736 2995.69 901.746 2995.69 901.746 cv
2935.53 906.1 li
cp
.956863 .54902 .498039 rgb
f
2935.61 772.743 mo
3015.5 789.916 li
3012.52 963.13 li
2942.33 938.492 li
2935.61 772.743 li
cp
.235294 .560784 .486275 rgb
f
2657.85 881.632 mo
2682.26 951.988 2757.74 933.063 2757.77 933.066 cv
2759.94 933.358 2767.31 939.624 2774.05 942.672 cv
2802.59 955.589 2838.51 957.886 2861.63 937.041 cv
2906.07 952.557 2955.39 918.956 2958.19 879.542 cv
2987.12 865.916 2988.29 837.47 2981.36 805.297 cv
2994.66 764.898 2950.92 721.592 2910.03 717.649 cv
2889.3 715.651 2867.6 722.877 2851.78 736.867 cv
2818.6 719.313 2778.87 729.467 2755.96 759.787 cv
2683.49 725.853 2632.3 807.998 2657.85 881.632 cv
cp
.717647 .341176 .258824 rgb
f
3122.18 1400.02 mo
3242.11 1400.02 li
3241.6 1395.83 3241.19 1392.73 3240.94 1390.9 cv
3236.61 1359.92 3028.97 1157.46 3028.97 1157.46 cv
2923.39 1268.32 li
2923.39 1268.32 2990.45 1319.22 3015.59 1338.11 cv
3031.09 1349.76 3083.6 1378.55 3122.18 1400.02 cv
cp
.207843 .32549 .537255 rgb
f
3031.14 1400.02 mo
3048.93 1319.52 3061.31 1243.94 3061.25 1243.96 cv
3067.78 1224.11 3058.23 1181.74 3058.23 1181.74 cv
2948.45 1152.46 li
2948.89 1152.59 2948.44 1156.95 2948.4 1157.29 cv
2944.2 1198.21 2909.78 1248.52 2897.98 1320.22 cv
2894.5 1341.33 2894.2 1371.74 2895.04 1400.02 cv
3031.14 1400.02 li
cp
.27451 .431373 .713726 rgb
f
3049.86 1035.38 mo
3048.5 1012.71 3051.3 964.857 3049.3 957.553 cv
3049.38 956.957 3049.47 956.352 3049.56 955.739 cv
2966.23 897.429 li
2965.94 897.392 2967.04 897.241 2964.24 897.612 cv
2946.06 900.015 2884.81 918.573 2873.49 923.921 cv
2875.58 1001.65 li
2882.31 1005.02 2931.5 1210.67 2918.39 1231.62 cv
2911.97 1241.86 3079.95 1235.74 3084.64 1215.69 cv
3086.67 1207 3052.62 1081.19 3049.86 1035.38 cv
cp
.313726 .74902 .647059 rgb
f
2920.05 877.374 mo
2920.05 877.374 2927.03 912.778 2927.68 926.98 cv
2928.32 941.182 2945.52 984.69 2973.94 980.871 cv
3002.35 977.051 2973.5 922.174 2968.91 908.812 cv
2964.31 895.449 2955.53 853.517 2955.53 853.517 cv
2920.05 877.374 li
cp
.968627 .643137 .568627 rgb
f
2960.03 874.104 mo
2953.16 885.523 2940.82 892.822 2922.52 890.575 cv
2921.15 882.955 2920.05 877.374 2920.05 877.374 cv
2955.53 853.517 li
2955.53 853.517 2957.49 862.845 2960.03 874.104 cv
cp
.956863 .454902 .345098 rgb
f
2890.33 774.551 mo
2890.33 774.551 2875.97 785.795 2873.01 806.228 cv
2870.04 826.66 2883.62 876.416 2925.69 883 cv
2967.77 889.583 2979.65 847.021 2966.95 816.817 cv
2954.25 786.614 2930.62 749.422 2890.33 774.551 cv
cp
.968627 .643137 .568627 rgb
f
2969.83 807.354 mo
2970.19 815.368 2966.86 821.998 2962.39 822.162 cv
2957.92 822.326 2954 815.963 2953.63 807.949 cv
2953.27 799.936 2956.6 793.306 2961.07 793.141 cv
2965.55 792.977 2969.47 799.34 2969.83 807.354 cv
cp
f
2897.6 762.346 mo
2897.6 762.346 2898.23 825.074 2880.72 838.856 cv
2863.22 852.639 2875.02 878.855 2875.02 878.855 cv
2875.02 878.855 2848.86 817.806 2861.08 795.316 cv
2873.3 772.827 2897.6 762.346 2897.6 762.346 cv
cp
.717647 .341176 .258824 rgb
f
2892.78 850.373 mo
2898.2 856.665 2899.33 864.821 2895.29 868.592 cv
2891.26 872.361 2883.6 870.316 2878.18 864.025 cv
2872.76 857.733 2871.64 849.576 2875.67 845.807 cv
2879.7 842.037 2887.37 844.081 2892.78 850.373 cv
cp
.968627 .643137 .568627 rgb
f
2903.21 915.772 mo
2903.21 915.772 2833.41 789.76 2816.41 762.964 cv
2799.41 736.167 2755.31 629.797 2753.73 625.605 cv
2752.16 621.415 2784.73 571.337 2777.52 569.582 cv
2770.31 567.827 2762.19 595.993 2754.51 592.585 cv
2746.83 589.179 2724.67 521.168 2720.27 524.515 cv
2712.03 530.778 2732.19 566.695 2727.8 568.93 cv
2723.41 571.166 2710.36 529.437 2701.76 530.621 cv
2693.16 531.805 2717.92 568.889 2715.5 572.141 cv
2713.08 575.394 2687.36 540.442 2682.64 547.843 cv
2680.08 551.862 2706.29 578.36 2701.22 580.805 cv
2696.15 583.249 2672.8 566.114 2670.29 571.01 cv
2667.79 575.906 2691.91 582.746 2699.07 596.013 cv
2706.23 609.281 2718.5 615.062 2723.49 639.59 cv
2728.48 664.119 2735.68 752.83 2761.63 797.197 cv
2787.59 841.566 2844.65 939.76 2844.65 939.76 cv
2903.21 915.772 li
cp
.956863 .54902 .498039 rgb
f
2926.41 907.567 mo
2906.22 882.905 2854.83 816.399 2854.83 816.399 cv
2854.83 816.399 2802.41 851.874 2796.74 870.55 cv
2796.74 870.55 2891.87 1014.06 2884.84 1016.89 cv
2884.84 1016.89 2933.23 915.911 2926.41 907.567 cv
cp
.313726 .74902 .647059 rgb
f
2897.53 897.114 mo
2886.54 867.051 2887.08 777.081 2860.7 753.756 cv
2834.83 730.878 2777.7 723.587 2749.95 744.372 cv
2724.14 763.708 2714.11 797.934 2703.66 829.486 cv
2696.97 849.694 2688.54 862.053 2671.27 874.186 cv
2641.14 895.343 2556.19 927.034 2529.89 952.223 cv
2481.38 998.682 2492.1 1090.89 2517.94 1125.46 cv
2639.66 1288.37 2805.97 1189.13 2828.84 1082.28 cv
2836.77 1045.26 2943.88 1023.84 2897.53 897.114 cv
cp
.0745098 .215686 .356863 rgb
f
2623.86 937.408 mo
2566.16 904.721 li
2567.83 899.191 2569.19 894.54 2570.13 891.057 cv
2580.05 854.461 2638.25 729.798 2640.67 725.029 cv
2643.1 720.261 2713.51 708.59 2709.25 700.82 cv
2704.98 693.051 2673.81 699.879 2672.31 695.789 cv
2668.86 686.359 2709.31 615.188 2702.8 614.005 cv
2690.64 611.792 2675.23 658.525 2669.72 656.461 cv
2664.21 654.397 2690.47 609.238 2682.49 602.612 cv
2674.52 595.987 2661.79 647.716 2656.97 648.207 cv
2652.15 648.697 2662.22 597.839 2651.89 599.646 cv
2646.28 600.628 2644.07 645.109 2637.82 642.609 cv
2631.58 640.109 2627.85 605.705 2621.51 607.444 cv
2615.18 609.183 2628.36 641.837 2622.43 658.848 cv
2616.51 675.859 2621.56 685.466 2603.96 709.646 cv
2586.36 733.826 2477.32 901.029 2488.38 930.508 cv
2497.35 954.445 2585.75 1003.08 2595.4 1001.96 cv
2632.36 997.647 2623.86 937.408 2623.86 937.408 cv
cp
.968627 .643137 .568627 rgb
f
3148.41 722.895 mo
3148.25 703.481 3143.43 665.983 3135.8 640.392 cv
3134.56 636.216 3113.44 610.474 3111.6 607.97 cv
3109.77 605.466 3094.44 593.684 3092.41 602.932 cv
3091.83 605.589 3105.16 618.954 3110.13 624.139 cv
3106.07 618.913 3086.09 603.658 3082.58 604.969 cv
3075.77 607.508 3097.67 631.843 3104.72 638.133 cv
3110.35 643.163 3108.56 663.769 3107.61 671.827 cv
3107.28 674.668 3104.86 682.303 3105.77 679.589 cv
3105.93 679.091 3101.25 667.145 3099.47 660.767 cv
3098.31 656.568 3095.18 654.579 3092.89 656.777 cv
3087.22 662.232 3091.9 699.062 3094.53 704.353 cv
3097.64 710.616 3105.38 721.558 3108.33 725.707 cv
3108.33 725.707 3083.2 907.567 3076.73 910.554 cv
3061.59 917.543 2925.54 955.933 2925.54 955.933 cv
2925.54 955.933 2922.2 1041.72 2925.91 1039.48 cv
2929.61 1037.23 3117.05 973.273 3129.05 957.794 cv
3146.4 935.408 3150.57 834.039 3147.79 766.377 cv
3147.65 739.664 3148.43 723.006 3148.41 722.895 cv
cp
.968627 .611765 .552941 rgb
f
3129.25 675.938 mo
3131.15 677.93 li
3131.15 677.93 3132.9 681.497 3131.07 685.064 cv
3130.01 687.134 3128.56 687.237 3119.71 688.548 cv
3113.3 689.497 3105.1 688.383 3092.83 686.557 cv
3129.25 675.938 li
cp
.956863 .454902 .345098 rgb
f
3130.94 677.387 mo
3103.63 600.085 li
3102.78 597.692 3100.07 596.407 3097.56 597.214 cv
3094.52 598.229 li
3094.49 598.249 li
3094.49 598.227 li
3066.99 608.564 li
3064.94 609.335 3063.91 611.533 3064.69 613.503 cv
3094.15 688.548 li
3120.49 685.58 li
3120.49 685.581 li
3127.94 683.182 li
3130.44 682.375 3131.79 679.78 3130.94 677.387 cv
cp
.07451 .215686 .356863 rgb
f
3089.59 657.023 mo
3089.59 657.023 3084.61 666.149 3082.95 677.764 cv
3081.29 689.378 3100.62 716.672 3104.11 719.327 cv
3107.59 721.982 3107.35 705.473 3107.35 705.473 cv
3107.35 705.473 3109.67 690.54 3106.02 688.714 cv
3102.37 686.89 3096.73 680.252 3096.73 680.252 cv
3096.73 680.252 3100.04 645.574 3089.59 657.023 cv
cp
.968627 .611765 .552941 rgb
f
3128.5 648.478 mo
3122.03 633.545 li
3122.03 633.545 3107.1 606.417 3098.14 610.149 cv
3089.18 613.883 3115.81 638.522 3115.81 638.522 cv
3115.81 638.522 3124.23 657.77 3131.94 683.778 cv
3135.97 675.606 li
3128.5 648.478 li
cp
f
2900.58 1400.02 mo
2874.84 1324.21 li
2688.19 1304.79 li
2688.19 1304.79 2653.32 1370 2642.04 1400.02 cv
2900.58 1400.02 li
cp
.235294 .560784 .486275 rgb
f
3011.84 1024.51 mo
2986.46 934.41 li
2832.82 953.362 li
2832.82 953.362 2789.68 950.596 2766.44 951.333 cv
2749.97 951.856 2650.85 930.979 2588.42 915.532 cv
2588.06 916.357 2569.33 976.222 2558.38 997.128 cv
2605.24 1020.58 2641.08 1032.1 2673.36 1059.85 cv
2673.38 1059.96 2677.48 1192.73 2680.75 1274.17 cv
2673.73 1294.41 2656.09 1335.41 2656.09 1335.41 cv
2656.09 1335.41 2713.57 1368.26 2800.93 1360.79 cv
2853.05 1356.34 2891.27 1344.37 2891.27 1344.37 cv
2891.27 1344.37 2875.15 1286.06 2870.84 1252.02 cv
2889.61 1168.55 2919.76 1057.36 2919.76 1057.36 cv
3011.84 1024.51 li
cp
.956863 .454902 .345098 rgb
f
2779.73 877.535 mo
2779.73 877.535 2774.79 934.439 2768.45 950.209 cv
2762.1 965.979 2763.06 1022.69 2797.37 1032.93 cv
2831.69 1043.17 2831.07 970.386 2832.49 953.528 cv
2833.91 936.669 2835.48 881.517 2835.48 881.517 cv
2779.73 877.535 li
cp
.968627 .643137 .568627 rgb
f
2778.01 894.802 mo
2781.51 898.594 2785.6 902.057 2790.35 905.078 cv
2806.97 915.663 2822.21 915.514 2834.59 909.182 cv
2835.12 894.156 2835.48 881.517 2835.48 881.517 cv
2779.73 877.535 li
2779.73 877.535 2779.1 884.773 2778.01 894.802 cv
cp
.956863 .454902 .345098 rgb
f
2798.78 761.669 mo
2798.78 761.669 2778.14 766.322 2765.39 785.773 cv
2752.65 805.225 2743.39 866.403 2785.37 893.132 cv
2827.35 919.861 2860.51 878.137 2861.05 841.259 cv
2861.59 804.381 2853.69 755.166 2798.78 761.669 cv
cp
.968627 .643137 .568627 rgb
f
2873.34 825.246 mo
2872.42 834.794 2867.17 842.103 2861.61 841.57 cv
2856.05 841.038 2852.28 832.865 2853.19 823.316 cv
2854.11 813.768 2859.36 806.459 2864.92 806.992 cv
2870.48 807.525 2874.25 815.697 2873.34 825.246 cv
cp
f
2806.97 756.812 mo
2806.97 756.812 2780.65 815.841 2757.53 821.113 cv
2734.41 826.385 2734.74 856.088 2734.74 856.088 cv
2734.74 856.088 2735.26 787.496 2756.93 771.763 cv
2778.6 756.029 2806.97 756.812 2806.97 756.812 cv
cp
.0745098 .215686 .356863 rgb
f
2767.38 835.042 mo
2770.42 844.628 2767.64 854.067 2761.16 856.125 cv
2754.68 858.182 2746.96 852.078 2743.91 842.492 cv
2740.87 832.906 2743.66 823.466 2750.14 821.409 cv
2756.61 819.352 2764.33 825.456 2767.38 835.042 cv
cp
.968627 .643137 .568627 rgb
f
2669.69 696.686 mo
2669.69 696.686 2646.66 681.381 2633.35 701.431 cv
2633.35 701.431 2650.23 688.445 2669.69 696.686 cv
cp
.956863 .454902 .345098 rgb
f
2866.44 437.623 mo
2866.88 452.401 li
2843.18 455.732 li
2841.15 477.419 li
2823.82 482.812 li
2826.55 491.583 li
2849.73 484.371 li
2851.65 463.82 li
2876.3 460.354 li
2875.65 438.116 li
2866.44 437.623 li
cp
.313726 .74902 .647059 rgb
f
3090.13 479.576 mo
3007.96 464.271 li
2998.26 462.466 2991.87 453.144 2993.67 443.45 cv
3002.29 397.178 li
3004.1 387.484 3013.42 381.09 3023.11 382.896 cv
3105.29 398.2 li
3114.98 400.006 3121.37 409.327 3119.57 419.021 cv
3110.95 465.293 li
3109.14 474.987 3099.82 481.381 3090.13 479.576 cv
cp
.980392 .878431 .698039 rgb
f
3001.65 420.584 mo
2960.26 450.021 li
3004.9 449.668 li
3001.65 420.584 li
cp
f
3034.14 421.195 mo
3044.71 422.887 li
3044.71 422.887 3059.76 415.34 3060.8 411.908 cv
3061.83 408.475 3060.98 400.668 3063.2 400.105 cv
3065.43 399.542 3069.92 399.584 3071.85 404.717 cv
3073.25 408.443 3069.39 420.444 3070.48 421.488 cv
3071.16 422.141 3077.21 423.284 3081.64 424.049 cv
3084.56 424.552 3086.95 426.631 3087.85 429.446 cv
3087.86 429.455 li
3088.47 431.358 3087.67 433.431 3085.93 434.423 cv
3083.23 435.969 li
3084.64 438.757 li
3085.69 440.833 3084.87 443.367 3082.8 444.431 cv
3080.69 445.516 li
3081.7 447.19 li
3083.01 449.346 3082.15 452.157 3079.86 453.218 cv
3078.01 454.079 li
3078.18 454.58 li
3078.87 456.661 3077.85 458.926 3075.84 459.797 cv
3073.99 460.598 li
3045.83 456.086 li
3043.19 455.663 3040.66 454.706 3038.41 453.272 cv
3028.77 450.048 li
3027.73 449.702 3027.11 448.649 3027.3 447.573 cv
3031.62 422.992 li
3031.83 421.804 3032.95 421.004 3034.14 421.195 cv
cp
1 1 1 rgb
f
3257.44 554.859 mo
3262.06 544.141 li
3255.86 534.251 li
3255.15 533.125 3256.04 531.678 3257.37 531.802 cv
3268.99 532.891 li
3276.48 523.934 li
3277.33 522.914 3278.98 523.314 3279.27 524.611 cv
3281.83 536.003 li
3292.66 540.356 li
3293.9 540.852 3294.03 542.547 3292.88 543.226 cv
3282.84 549.176 li
3282.05 560.824 li
3281.96 562.151 3280.38 562.798 3279.39 561.919 cv
3270.62 554.206 li
3259.3 557.051 li
3258.01 557.375 3256.91 556.08 3257.44 554.859 cv
cp
.968627 .8 .498039 rgb
f
2040.27 646.937 mo
2034.84 639.446 li
2025.59 639.677 li
2024.53 639.704 2023.91 638.51 2024.53 637.658 cv
2029.97 630.175 li
2026.89 621.448 li
2026.54 620.454 2027.48 619.489 2028.49 619.816 cv
2037.29 622.681 li
2044.63 617.057 li
2045.47 616.417 2046.68 617.014 2046.68 618.068 cv
2046.67 627.321 li
2054.29 632.572 li
2055.16 633.17 2054.97 634.504 2053.96 634.829 cv
2045.16 637.683 li
2042.52 646.552 li
2042.22 647.563 2040.89 647.79 2040.27 646.937 cv
cp
.588235 .85098 .788235 rgb
f
3184.95 529.969 mo
3185.24 542.2 li
3165.62 544.846 li
3163.84 562.782 li
3149.47 567.164 li
3151.69 574.435 li
3170.9 568.576 li
3172.59 551.578 li
3193.01 548.826 li
3192.57 530.42 li
3184.95 529.969 li
cp
.27451 .431373 .713726 rgb
f
3126.15 556.202 mo
3114.32 553.501 li
3116.56 533.993 li
3099.76 527.912 li
3099.05 513.039 li
3091.52 513.397 li
3092.47 533.29 li
3108.39 539.053 li
3106.06 559.347 li
3123.85 563.411 li
3126.15 556.202 li
cp
.968627 .8 .498039 rgb
f
3248.02 631.395 mo
3239.57 617.354 li
3225.99 624.348 li
3217.06 610.883 li
3203.26 615.967 li
3194.93 606.983 li
3190.38 611.201 li
3201.53 623.217 li
3214.6 618.399 li
3223.9 632.406 li
3237.25 625.527 li
3244.9 638.251 li
3248.02 631.395 li
cp
f
2086.46 587.898 mo
2077.5 574.938 li
2061.75 574.974 li
2059.95 574.978 2058.93 572.922 2060.02 571.495 cv
2069.57 558.968 li
2064.67 543.994 li
2064.11 542.289 2065.75 540.683 2067.45 541.277 cv
2082.31 546.495 li
2095.04 537.205 li
2096.49 536.147 2098.52 537.21 2098.48 539.004 cv
2098.11 554.756 li
2110.88 563.989 li
2112.34 565.04 2111.95 567.303 2110.23 567.817 cv
2095.14 572.335 li
2090.3 587.331 li
2089.75 589.04 2087.48 589.374 2086.46 587.898 cv
cp
.956863 .454902 .345098 rgb
f
2465.44 587.462 mo
2463.47 582.355 li
2475.94 577.528 li
2467.05 561.87 li
2471.81 559.167 li
2483.83 580.343 li
2465.44 587.462 li
cp
.313726 .74902 .647059 rgb
f
2221.52 517.052 mo
2204.57 522.649 li
2192.55 496.378 li
2166.77 501.506 li
2154.56 483.316 li
2145.35 489.496 li
2161.68 513.824 li
2186.12 508.964 li
2198.62 536.294 li
2224.12 527.872 li
2221.52 517.052 li
cp
.968627 .8 .498039 rgb
f
2799.59 486.113 mo
2774.63 476.741 li
2752.76 491.989 li
2750.27 493.726 2746.87 491.853 2747 488.819 cv
2748.2 462.184 li
2726.94 446.096 li
2724.52 444.263 2725.25 440.449 2728.18 439.642 cv
2753.88 432.553 li
2762.61 407.361 li
2763.61 404.492 2767.46 404.008 2769.13 406.542 cv
2783.82 428.796 li
2810.47 429.315 li
2813.51 429.374 2815.16 432.889 2813.27 435.263 cv
2796.64 456.105 li
2804.38 481.619 li
2805.27 484.524 2802.43 487.18 2799.59 486.113 cv
cp
.588235 .85098 .788235 rgb
f
2126.25 666.521 mo
2107.61 667.267 li
2100.27 684.819 li
2079.32 684.174 li
2077.27 705.279 li
2053.55 705.596 li
2049.27 724.796 li
2026.49 728.833 li
2024.96 720.212 li
2041.99 717.193 li
2046.51 696.932 li
2069.31 696.627 li
2071.4 675.17 li
2094.52 675.881 li
2101.68 658.741 li
2118.96 658.05 li
2121.3 645.81 li
2129.9 647.46 li
2126.25 666.521 li
cp
.968627 .8 .498039 rgb
f
2357.27 646.176 mo
2359.4 667.622 2343.74 686.729 2322.3 688.854 cv
2300.86 690.978 2281.75 675.314 2279.62 653.869 cv
2277.49 632.423 2293.15 613.316 2314.6 611.191 cv
2336.04 609.067 2355.15 624.73 2357.27 646.176 cv
cp
.968627 .8 .498039 rgb
f
2298.3 658.23 mo
2299.44 669.696 2309.65 678.071 2321.12 676.935 cv
2332.58 675.799 2340.95 665.583 2339.82 654.118 cv
2298.3 658.23 li
cp
.937255 .937255 .937255 rgb
f
2616.75 451.007 mo
2606.62 436.642 li
2595.39 447.717 li
2605.52 462.081 li
2616.75 451.007 li
cp
2614.3 490.488 mo
2603.03 474.451 li
2596.7 480.705 li
2595.31 482.073 2593.08 482.058 2591.71 480.672 cv
2590.34 479.285 2590.35 477.051 2591.74 475.683 cv
2599.05 468.471 li
2588.92 454.105 li
2582.15 460.786 li
2580.77 462.154 2578.53 462.139 2577.16 460.752 cv
2575.79 459.366 2575.81 457.132 2577.2 455.764 cv
2584.94 448.126 li
2573.39 431.539 li
2572.41 430.129 2572.59 428.219 2573.81 427.013 cv
2574.99 425.847 li
2576.54 424.316 2579.1 424.544 2580.35 426.325 cv
2591.3 441.843 li
2602.52 430.769 li
2590.98 414.182 li
2590 412.772 2590.18 410.862 2591.4 409.656 cv
2592.69 408.383 li
2594.24 406.853 2596.79 407.08 2598.05 408.86 cv
2609 424.379 li
2615.33 418.125 li
2616.72 416.757 2618.95 416.771 2620.32 418.158 cv
2621.69 419.545 2621.68 421.779 2620.29 423.147 cv
2612.98 430.359 li
2623.22 444.618 li
2629.99 437.938 li
2631.37 436.569 2633.61 436.584 2634.98 437.971 cv
2636.35 439.357 2636.33 441.591 2634.94 442.959 cv
2627.2 450.598 li
2639.15 467.606 li
2640.14 469.017 2639.97 470.935 2638.74 472.145 cv
2637.36 473.508 li
2635.8 475.041 2633.25 474.811 2631.99 473.025 cv
2620.73 456.987 li
2609.51 468.062 li
2621.45 485.07 li
2622.44 486.48 2622.27 488.398 2621.04 489.608 cv
2619.66 490.972 li
2618.11 492.505 2615.55 492.274 2614.3 490.488 cv
cp
.956863 .54902 .498039 rgb
f
2362.8 462.54 mo
2362.8 462.54 2366.27 452.118 2378.49 448.188 cv
2389.38 444.685 2399.67 450.926 2402.92 461.008 cv
2406.67 472.678 2400.88 489.777 2378.18 510.324 cv
2347.75 506.869 2333.08 496.354 2329.32 484.684 cv
2326.08 474.602 2330.8 463.53 2341.69 460.026 cv
2353.91 456.096 2362.8 462.54 2362.8 462.54 cv
cp
f
2274.24 496.113 mo
2285.37 494.428 2294.24 492.508 2302.86 490.208 cv
2305.7 489.449 2310.86 488.975 2312.18 486.011 cv
2312.86 484.47 2312.61 482.886 2311.12 481.9 cv
2308.4 480.096 2304.37 482.167 2301.5 482.93 cv
2292.77 485.254 2282.77 487.469 2272.54 489.123 cv
2270.63 489.433 2269.46 491.683 2269.9 493.466 cv
2270.39 495.496 2272.31 496.405 2274.24 496.113 cv
cp
f
2426.01 479.786 mo
2430.21 478.744 2434.38 477.625 2438.56 476.518 cv
2442.56 475.459 2447.47 474.91 2450.9 472.542 cv
2453.43 470.794 2452.7 467.015 2449.48 466.739 cv
2445.31 466.383 2440.84 468.311 2436.83 469.384 cv
2432.65 470.504 2428.47 471.611 2424.31 472.795 cv
2419.87 474.06 2421.5 480.906 2426.01 479.786 cv
cp
f
2327.25 540.666 mo
2330.18 530.479 2335.86 526.082 2339.85 521.419 cv
2341.98 518.926 2339.52 515.446 2336.46 516.791 cv
2328.06 520.478 2322.69 530.285 2320.36 538.722 cv
2319.13 543.163 2325.98 545.109 2327.25 540.666 cv
cp
f
2381.27 550.062 mo
2379.97 545.785 2379.51 541.392 2380.04 536.944 cv
2380.37 534.223 2383.55 526.035 2378.29 526.035 cv
2373.35 526.036 2372.86 534.293 2372.6 537.795 cv
2372.25 542.488 2372.84 547.281 2374.25 551.765 cv
2375.64 556.178 2382.62 554.524 2381.27 550.062 cv
cp
f
2409.82 514.429 mo
2412.58 515.507 2415.35 516.584 2418.12 517.663 cv
2420.88 518.738 2423.75 520.605 2426.65 519.178 cv
2428.28 518.375 2428.5 516.472 2427.89 514.968 cv
2426.79 512.238 2422.65 511.54 2420.12 510.573 cv
2417.35 509.512 2414.57 508.451 2411.8 507.391 cv
2409.96 506.685 2407.79 508.14 2407.29 509.917 cv
2406.71 511.969 2407.97 513.71 2409.82 514.429 cv
cp
f
2327.32 444.446 mo
2312.83 425.407 2312.98 425.253 2310.73 423.965 cv
2308.42 422.645 2305.37 424.751 2306.06 427.417 cv
2306.74 430.053 2306.68 429.606 2321.99 449.583 cv
2323.21 451.171 2325.9 450.954 2327.22 449.678 cv
2328.8 448.156 2328.53 446.044 2327.32 444.446 cv
cp
f
2365.41 434.21 mo
2365.87 430.295 2365.91 426.376 2365.53 422.452 cv
2365.17 418.806 2365.12 413.167 2361.23 411.584 cv
2360.4 411.244 2359.1 411.6 2358.51 412.268 cv
2356.07 415.063 2357.94 419.663 2358.25 423.028 cv
2358.59 426.698 2358.54 430.406 2358.25 434.079 cv
2358.1 436.008 2359.91 437.691 2361.76 437.725 cv
2363.86 437.763 2365.18 436.137 2365.41 434.21 cv
cp
f
2420.18 423.597 mo
2420.38 421.805 2418.67 420.609 2417.12 420.422 cv
2413.94 420.036 2410.89 423.822 2408.84 425.886 cv
2406.46 428.289 2404.33 430.91 2402.37 433.662 cv
2401.23 435.25 2402.06 437.676 2403.64 438.61 cv
2405.48 439.705 2407.39 438.896 2408.58 437.344 cv
2416.38 427.21 2419.7 428.02 2420.18 423.597 cv
cp
f
2536.54 470.646 mo
2536.83 482.876 li
2517.2 485.522 li
2515.42 503.459 li
2501.06 507.84 li
2503.27 515.111 li
2522.49 509.252 li
2524.17 492.254 li
2544.59 489.502 li
2544.15 471.097 li
2536.54 470.646 li
cp
.27451 .431373 .713726 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (Happy young people taking photo via mobile phone.eps)
%%CreationDate: 5/7/2020 11:31 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6flHB#[O>8(4(A-jNTj-7"sb+>kqO"`#2D.>J,gI<Y^j.4>RrcfDEZKB7F_oJ7/b!%Q\p[1Fj;qIrC<-@&g.J`nn^5Bc($MV
%J4A\B0llp>@'c\_fr2fJH7@h!L^=S(-8-)BRRfJ-RW(#IrUpbkm=MCD'.o`8$AW:#*:O,'P(5.2G6D^toE?Wm"P[OAp2%g1VH$K,
%Z]dsai!"*50r;W>,?(#pJL?E@J`V19%o\?ug&o\K=U6p,*7*aMEQCgJ38qd%[lDc/brEFY2&iu+0k-kD"T"^+U0_abTKCLVI#l">
%RtW$\Wm4A;@,(`2m)E)LVj(Zlhthqu&4$N:RnsY(LVWqsoS'Ue_h4=*+!YaYP_p%iDB`>i%l]0XBduB#2e2mnDo!@op(K]n!;#cd
%&8Xa3M\[-M#iZC*%oOS'J;!rdW'M99"1G+:@=/(t->=Y@>k8.V+@t,d^8BiS&k<dt#*M6ma@Pq.2$ndK1^4kOJdOQUdNC5N+;bAo
%"<n,V!B#FFE1DN>6E<iC/HXlB#)9F"&V+P6JmL>9/I9EL$8N";&e#C\XATuU[L#8OGQ;+"-:$Q9HkVaY=gk"*W(h6=9h7&k#Ynb.
%]jYa\=)n\#5a"KV#`K*#DV7XF'`te;kNp(5?h?;`+/;sCYDY">%!DgM:&o`0.MoE26t/R$r^c-!J8bSP+bmePE9rYre:tie"JA4l
%.#LL"6m-*)8:gjd$FZX*)]VRUkW;rrY`KJ'J<a[J-j^YWr!B&T@2u_L(A+B:cDMT8j!I]eR<$1.`AQ7_;&Bf]EA1Nt*+GtfJaFBB
%E6L+:<jG`a&F%(U(`<U0)5ff:^7$t`Ak-SMUe+r(!,mKu?\kEWM.@G.GXJut,&n\o;.7#[d_`9(F6jt\dfmp:=A^te8T@qsrW76L
%%g4R[HBfT&AiqU#N4:;Z:U4M>ac_pC%a0J?b:[ftK+&UnM_AFKL^#*tfI8N&!^D;GN0lp>/APGTQu=N4]"!]p11j#ci>)k<#BWR#
%%,qu\+e3L2:>-E%_4)"Q#"0CYmU?1knl8-]qh.,XERA`OX2+X67'=Ri,.PaQ@mj-Ob^#?:/F>4,pl"tRL/]qG5n"9&:]R3&TOdG_
%iBs"E^m=5L*R-#8%O,1ZR![%YY/=[Y8"I"@KQAu$+&bGS7_f8u6;N'Ar.(Ai/nSU]0(_U(8cT=1&a];%Ip>Rk6HpuE!tY!t0H1ft
%?/`8B30PAV`L:\tp/DU>XER@'eiWZb1-(suJp8Ukm$S94IhXO6$Y%P.5mhuMSd,Ssga##gd..9dfe<Cj#Jp.#$&5<Ch[=fqL)[b5
%$kDc#A51KNck_$4s**H%7bVM-0(@'-%\?7NON%CC7:XNG!S[W]!\tAGIu4Bt_*9tgP5<=]IV3q7%.V[$R[?smFN92I,@d_Db_Qj*
%keRc>`<$q[51?;i3JtqQBp1@kn,mK[->,&;(4`s6r=2<7!!tA:CnMq]0P@<rJm"2>'gV<1&1V;G#D!UOl:cYs5r^GR7#Z]s#NtRa
%*_<5gN3*"qfFiFH1.:0>jfp4ZO+n3Jau`&5b(D:c/9M-Q,#p?HoE:M8L=udh"5L7_3RfQ&5sQUrnomA.$t_4JKD_:Gii"Vq(bO#[
%I8`KEp`F-,5qX_hieB"7F"ST7KG#-?Q>E>D9E9hk%Hu]%Jd(X>*Bc#Z?CHs%OH9[&3]rF/*dsL9H*/MMj$))o\HEHNHTS^IUr%`g
%jK[$J&jEeF)i<#]Y9APK7[g'J&t_h,_K)?rZpZY@-kaL?K+jX,/"%]hn#,?gM3,4I:!j<j0/ZSZoU)p)%`C"]Y&GUZr=<Mom[HgR
%94UGNh;W[P:j9G^#gQ0;))l-'YRFU>,qsQ21.rn]&Pu#k/;52kRZe7Dc7(e\%O9U/iMA;WoQmtNQ8g3SXP`/]*'].VKR`OK'EOio
%bG?_N,G=cKXpmaI7f9^V;:O\)F3'EX6SIAsaL,VY('Fd^!14Hh7LR]5F*pJg7gO]#q$Wt^nf`CKIY31jGj*(#biU\Vl_)^(:CZqX
%_p;kl5If"GY6-[lL(Y1;J.1VoCL[,kfBZ3A:br@3'fea>q9o<aJ*o6%h[GV9D0I6N$dBq]mP@Rb4"4FT!%eaq=2Y@mVcD6!\'rhq
%[L:VH$kT=gp)##che_:o-FRM/)/?M4\KeN9b*GKZ]?rqe(>MYWMj^e0Oo:XJb)PV\#(BXl&_e`Rc%_MWPkgk-,/Hn0?-tJAl;J0\
%8)$V)+?3L#1d[Z=H<8$Np"E0.aA-?[&MH9P1h^^t`f+gSo6)A#2RXJ4`L&T*IZGk1)sM(+b/$BB>tJ+'R#,Z<0;XLp-o+3;mc`%=
%TRmGXb_cg"Ymc`""Pp>sUkRc0R%R-uJ@bZQ;4q<.qZ-O3[VLaA;n9Rdk*X<Y(C>k[ap!g)gqQ?/f+f/7bO\d:2u,MVS:O#FJ`^tW
%o^\Bm*HSc$/pGP$el$V6j`[@Oa'A&1Va#a9Pfjpgk$W3i0C]4O3FbJDIm03.IqSS'TBQW2r9OTu6d0`_"ON?H-c>r/U#"FW_Fu9N
%DBf1H]RPJlTZ,7L4OjI&c$<nZR;g@uV,,ora3=gQVdmXhG4n"MmMKq<SK7PRA*U>n=tXp/'6^rQ)\-!%.u:Wde8cU"O)R$b)kA/M
%UT^<!W4_7OhFMK[L>/!;);+(+R>G4Hc.:X.0nNB_8!EF0AAI4IQ'n6#r1H4*d5mg!M$$`'GXfpV3>P*Na9YqL9m0"!EVe,#BJO-_
%7GkDmJL2?ZNs's@oB7h09_iIZl#=u\(&OTPj2NF`GZql*(o&R"UM7hP;98@pL/F:;[3Wd%#9!/]14S0XPl\d_FRMSK?b%Mfhc"T0
%3R?kh3VL]!(iTib]i[cb)%^I_U1Ju^]`O"IL;7-9P63&lGHaI#CP2o?#S#hqR&L2WL0negS.W;GJ&kBE&9C[^OlrV*VMV'hr#t4k
%RrA7!V=udg\'#(0ZXSuLS34l+a1.jlc2%.2UH%]4q,q\OIba%[8'T>'q#h.'Zg[QP6W:;jRs`Y9^o'SdrQDuCh=9:?=#d[?q[=J1
%(7>Xk1W#87i,8.mYHiMS_nl41^K>)[?t'UX:"G,^rT&Bg^F\4U`,Ql*n7f[0m9pq([ER:NGjVL#qF*oYp6Cr=nbO&5%pr^/XJ(8c
%HZ$/n#1cug8&'7e9&iu%p]9i8rIP:7%8#-blT/W'@Q`#dr<>/-+&DXS[-bisrg&]5j^9'h!FcPXnJq<-"aYM_PhKU=Gf#Ke,o@5o
%rSKm2-!Y*+J63hP[5("khCj!s%4j]>qoi`lno^6g^P$*-/S_-(Y3;o(=<[T)IB-(cltnN5ABZiH(B+Y>R2I*Bb8E(.3s/,m#Ee7Y
%VYOTJb$/-DG!!P(Xc\E]%_1++EUS=?JXY<Opo'g4NT)R-SFkiiRuG:7gG^@t'G'`n%mr+\pKDL.no6WmDh+4YIa(X>i+Ac;a7I;o
%m-qWV:]mSi.geWgF<Iend:#9mVh1&`:=rucV\b1=X1rJsON!FBG"%8hGG?9qJc#jPYa%0Wr2thq#pTOaJ8)K*_qBd(#:dk1^cPI@
%"(Kn;Em'XL[4="#(?MY&-E,DPi6S\IR@XTGY,Gh)5F??n-3s_];arS\;Fln],)PJP/7[W-9Uk"qn/&MBd'Nr3BkG2?\=k(Zp\_$'
%I"@4/]V4@\PeBUug0\PAM@j;-V0m:<M6]qM=[S@[n%/LpIl,Nn[:RCl-o,XdYns88Q1gph+m)U+c[kOR0b@M0aBfQJ6FHi?;8._T
%Ck&:p-q9"QmR9/(7JU#0S)[h>4j.uVCd@fbHVk2S`4bnB?YM0N&Rl4rU-A!6=c'6S@P<T^);BM?s%7W8N"C%Y>5pB[Bb#,YNM3o\
%KQca'/e@jM4@;3CN\b["2f9V\7/YJ1luE59lMeY2Tp\4@WAK*FL$0*HQ][0_U"o;3eLm*ce[PPEe?FDiQC4LRqi"gUNcrYI$]]Dt
%B\/8fm3(b!<Wq;"_mO!a[a/QFKgL*mC.G>u3NI<3erIT#dAe4hg/kOoaq^W4%bA,`N?nd2n>#<l#IOPV<27d?&UdV'""ZF3d8>m&
%1)%T"5m&)$,bf(/p@'M=G865@j&"k:AGI_$Hu&`BdssM'kkNn!#+-[A6UCIFs1r!t@`"lCB#92Y'f1Dj;=GY)*sE0K?YILI(V1Gp
%RuohiMR&8J4h)412^3pqCJf7CeJGk6AMSuVUMM=BH`olk#uTKV_fiSQr_Gt`k%`*qdu5H8;S_]W"8U0#0DcM'r<lN@*L;l'aq$27
%%/nQJ_//*i7aAd/2ZCTrG1la+jTYm)hpl%WJ3RK4BK%;&K]-%#J3]b_e$Dt;B[:j9#h!eZ%ak\$./",B.V?iFJ3Z2s)&T#4DbWel
%6XY[0VZ@]p(uW4?mB7*?oX88/BHRg4K%t^Fpc7*@pV)b%\S6Q7:5qXm#O<UadH-9n_FYg.6Gt87p3>$SGgc&jrqjmiIt.$SI)kp;
%I5SWDCAeqt-<pQuYc'i64g+V[lUa+>q9$Vrf6iWp^;i+g*W?bmER"4o"T-4shrC0o5-/05f6he8r*NjVf>*)IPF:&,!CYc-?0Ed-
%SOIH$@Q1IESP@bD0ER8aA41WB>3q-XD_03BIr$KpkBd(U!:[GU`M*Pbe2Gt>l&uOD;5mM\n%%i?GE4#M_&%,aL+2ua-cE_uKhSe8
%d@SFbUF=JP2@?`%XsZVek6.BI7Raa!'guZ0]39/)SaEe+B#o<>lY$)u5<Jk/m'2"_XIgO!B4&)rL5-2=\M8SR_qA#XQhaTM@1Kgu
%=ecCe_t)`L_.oVEG/n0_%#5Jh&e$13\i1o[,oS'iZ8kU`s/Iq$O:Q`tP0+Ri5"rt4)aq-o00;1u^H*Z>T)E^=1'U)LbLIq$,LCsZ
%R?.%T("q+aa26$f$SQOg74Psk<>\\b3>Pq]KpQ<.j]Haf(1*#TQXf"9=ElhA?N(+^Qed?,?Y?"Wh@u(:El)nE'r8$VV"R_EM7p*s
%I(@uYIX0%KQ^6m?0:OY96,<#rM>a)Uh_1HQ6GpNE2IUtXgAZH<YP'If?hU?'Ssrau::K)/FH1]ad#QCk5D#,JGE-%h-DjS9=aTT[
%NSE9aDqt"**H,?^=uS-`@U>,)0-+t<g6J$P$dF!ikm2bYJ#)5ajcUei[o"/AjmP=iq/rV+GNhF(r]%N@+,]D%pn^jkZn'NZ6A(lk
%<713u^8o<2CUqgZ:=q#F#*J9i1gPm6o+a[R^LIcC4gY#CPC\.OR:!IGE&a&%bg6hC6c0"nD7bK#_0$0'7?c\RjmR0:#VgbYfJ]Z3
%i3(/ki^!\-(l>)4(ePYj_FRM8_jGUMa#ID6r,5KRTT4/R"3>GAFc=!BJ4!\:Na[Tq@i]&t1YkFIq-tH*=NB('R5rhQNcg9_WFN^P
%D9<^L^iR`G^-[;"'q+c[iNEC0aF830h,_NH]&*fcm@V%\B/_naI0T+kBe^8Z-aFgMG18F5#AE%>7@TED?q.J2"UO8ZL+`F$!q2#F
%O\hZje$`S.=&n^>E".gd7%4O0B.@Jc??\*4//]VnGf0-i+n#A!6\]Dg<tpBY-p_7QUVssOYtP<G/m-b7\\s#&3o1g_Nj:gX2s>L'
%OT+klY7:@(,TX&tqVp*2rMm_1@j\Wr4E*$1>SR)s\"=LpWqS[BrfrhAm'9Uf\O0]D6E-(c``Lm`AVc_+g$iR+Qp'?pAV>a8hs@am
%d7q;Qji7OY0=IN-h%l:sg2[8W_nL";hSAQL@jPHYD(dC/:qaU"Y+9&T\)QRoREHH]Z=>e:biXr=gbG;QK2h'%c2DFa3<K<P0q8%I
%g"[D!*esJ!>cht<l'qdsNp5=RSNE]ia)pa:c5kBE0:U5j^J[+*LmWfdkIgR+8Ec!EZ2Z9/SKN$#,%JQs*qQqGOO"e8&.\IrL9L2!
%'>Ns%L-6mH:jrW:i9upjhN)rp=5j5KQ.R7"?cREiS-q)q;iKj)\17FqH)/D8m6T5II3ji?2E1RM0iZkt9Y^*eWmifZY2mmdO00R`
%*Z:d::t-lu"n*SAkkje)g%utk;>JpiBDU_=GP+U!#8;3MAbp2q[_r*X49KpD-8VpM[+Tbp0bt(o^iq)>#&Z;\IlB29N6q$X)p*Q9
%/TsS=++6M3-$f:kcb5gl]okWtK0>ehad*eZ8eptQJc-`I%0,2P_>#>:^EEHn006p@"9*iHM]9qMXT^="G;ZXiJ\.+J*df_F^/r,<
%MBl`,GAnqUY6pmW*:fpP@gfT6?TA[."A5s-4@XC='[;(!GisuQ#+tasiIcssN*O.WV`ak>=;\;tP)7^9HQ6nK#Q'?gBsl&;-oqQ$
%^G%&s`^E%>+E^hB%lu-8C)`C%j^n0MB)$B]r*LKJ*K/ag0[L^$_'gZ5!prUm$om^,hR^FYL;88e@)NHaG%cShd%GTBO,=-^G;L/?
%Hg\XMr+^R^)3LE^LTI0kQT-DnaE,f[_s+%[8*@D&#4:UopEN5^GNWXmL4+9+T1lTbhE`'h]1:bgs)[gNlPgA>JpdL$_0lc=IZ72e
%SGDrVUGtf$pk!_bI'$c5rlQ&$*e3MCd&nYJH?mg;a(u!01!u'`h&3`Si#lhqDSkJLleX5-fhO,FCIGkuJ;9e#Hge?4T_2j5QFd7-
%''M;NH'>Du\!d$FQ[F1GW:/?1Ltea9*W-oq?3;qXhHuH)r<g#Er44B,:<9F4MpB6.;Yq""P)8XqSc`(Fq*_a$pDW\c2V>jB"=S8L
%06nN+@;d@*NVp<]6&*j\PIeH:$;,=IS0g?T/NWZWqC?h6-u8Q_<m5RC%dP562T&IjARorpU,kl5$nPX+Jo?X7+'$ZL[O/Q<W*MJU
%1\-fabX\-VdoR?lr)([]/S=e02eK%[D@Sr]%Qs=;&=LqACZLfrp/'m9IGeN%Wudmke+Pulr/uaE8a:I<8KUSIlXgB=Gt[`+0uNfn
%Gs-&Mr&%\0J'eNcq'/G=A-'`>fhlDP@n>gq+T/6b-&ejs(N^IS=8kD&p:-7Ua`%3h)P^pgkuj:DJ_(8*,nhu*A4L=<VNa'0oM&n/
%`:R0Z<"V3"N8#DBUo.p]kII2Fct1RY+RjjL3c"KA4SHB\5']DD#k`.c!GOUTK,!O/cm<TN+p')2_pCXCQ]UnKrVYW0V.WA>>)*oG
%:OkK4NeBVdkS)H;B6#8V9K3>Ss',RJOYdj+UYj`.N#t'3fr27Tbq*M=cYt+m"Hnrp&(9C&@3fj,jX(t'Zr*`:3iPoCp>AG&q><c]
%b_0c4L*6m+p+otckRh/6jea)Y'aMAcVDYe6!/^-:V\5ZH;T2tIqes7J"#C\.]6Ec#+$_#DA^f*9B'T9u*nK7:n:(]:&(T56%"V@)
%f0ZA9Ei@J7J!CVDCT1"tm&9M)5&I/&oqs-m0LCkQOC]7)FDN9R/W;_HDJG+QF]Z=GPb;"R4<B-0.:>tGcC5-0rLFs/3q=q'5r;6c
%<rf%W$k`RB9RmX$!`YNkD_N@L$:+5IMSr)T"E.tB#R80(9diCAFO5-U5U;t`79h@$Mimq,8`EgJ&@BRYagPi$0[dl7D^K5s`Y8-=
%!R^CpdW*dIiL!t5%S8Jn]49f,8`HBoq</qji(uK!0GPeZ)iR$+*6)qI0GhmmVaM5kM^UVU[$cN\s0'3;bOj-\jmW6<n,N7]J,Jnf
%rVJhYrm/@ZhgbXoLI2Yon/s,U\G,B16C$N_l'.ISW4%YGg\FeNm3bgEXo,oC&-qY'Jt,e)q!B0Rp,Xfdn'JJ)nmeHM@ZWd)5[i%O
%,=jRT5uSR09+?Jp-kH_0>6k!+V@AtRn1P=_@:\$OXMotqD9Bm)/7;)hE.XA\56-,85$JGW%MPYf4\:cVN92AK5S+DeYV<*8ItE8C
%BFONcK,FgjKEr;&c(bFk!LflnD\s?70gbC7OokIh#1pM=@g6K*d;'*'Wp.nn>;mW8%.ocSY:97HmR$M]d=j4j%,r,`/RS]Q8HTD'
%VF+AakCSLdniZsZ%q'2KY(!fI&tfON#85r>BduC.lA;?VS>LmO-q$%F04u(3;R!&!^1MPTcfV;VE"](A0*DqR"C]>m#brg/3C@4;
%+AFH+&'#948E&n?6Qm#RK77e_Zh[^Z#2N1A$D[I>Ot%U9"SBc!J-?=6e>s&%Gt/'j=?*,7*=bR\$E[gor/lSP6l6;'S0L;F)U9Lo
%Kq+@@=`T9aZ6'@Tj4rYI6>1?GB`O/,(km]<JGGMqJJ/R/$NZM<Oa8Zl+UF?`+AdQpL*4aIT;_'&@["6iQHDaQ_fS^a)+!3q-HR9u
%E"\%4#gE_k'D)HuBPGgQS7r%TWtDHtSKjj1JIj-lGT]88(l@+4OrXQ/A4ZcqLBS8Y+_3aQ3#j]MSg;RUL$bUd1_O4.%:U/#nVn#F
%H,kN`lG,n8<$3Fr(la1q+GGNB>7,K\H@SZrBII)136)rW0qab%8&<uR*lAgd_JtZ'Bc]"%Z?SoK7nN>CRQ&SF%BTYu?gXYg*\Hl8
%8IFDYRN'1RpLK)S,^^FuT]s=(49Q]n$3<VJ<"@1b[$/SNL"/(KojEe2"H_#-&82]scl3$2!m#B^Q3K(^;TMC^?4O>p$]?#n7KN%<
%eB4T\fh_0(VG06fJYnl>L(0(!i,a$p'(Gl>,:Z^/\/MkJmD$!IJRd-GqR9m+i*f^ePHqcrq,S#Y9Mn8mc\Ce"RUN'9n?=eKo.OMD
%#=#5'[GVE]+a;1@rN[gO?5,m/<SdQu/:-t^>B=<Qg"(9!8!E*(N&ZZ3/Ns8EpgEDsmUA!douD\teOUNo0@9k]?>'l%XnV%ROj$*S
%HU2%t)o8/XhL7j*^]Kq'ZdUEmN<)A2i'1-gI[hi+9Dl5q0ii74pOXR50J_*=(PL*RKui`&blWRS%tTLX[V(f'0\cd%pIdq311=S@
%"StrfLW1Y5?_KFOm3d8[e`6I/W]]PFYm9iJ!1&#LF7$/@`lVUJ%.^ZBd,_C8%)7A]5If#4+(db_OWjJ9HkR?OD'c=1)Yo3i1l=<W
%?4[@i6!1%Y[h?4D[&l0@4X&!A"TokL#Dr%1]!`Z67\fae-Zn>=F[9;Z>/Cul)'u^QXb^5#qaMV`R+4ZQ'2frW.ICD5_+!,WLadkT
%gP^%[fdYAN_:DC!9_aAJA*q>P'14OQJ4<ltCi"uAfhOmOh^\J'5HI-QWdMHu4aC@I0mns$chPW[OJ90@'Q["+M"%c"N0>I/8:+aq
%72B'LVoUQ0U1"?Doj8HDd1l,n=e"r_W7%M&Q4,\io?=[!,7`j`qtpEkqnN.0c[Yrg^]3?_s6&kNr;/_Xq1"dI(]X6err]q4TE"`E
%s7sEt.)=6"&_@4\S243.j5P.NWl`uM-e"5a-VPFOLrNP,q1__0L*qti$?pguda2Jjm2H<E:'Q<a!(DU#pOR)h<ah.*V_*H34*!4J
%C7T1d@1_&R;kR\`8^.P_1S)gS^Cm7a1Dskg:WC7N$chblgm6?/X4nM555Dg@r)HtZ`MLp.$`<!$.[XtpABKeb?`^]fA-'_FF3-<L
%7RDGEbbh8/.*T]#@C_611K2lSK$3g,r.Q4EFP&E^`iNjBE5NR.4G:>R,7oNj3G;UqOP\Ed5_(<=l9AlKGeY::(Y8]d/a.^h8OC#%
%R0YLXR:4a>a=aR;<a]oET;$p'18k_@/'"k/<]Po:^rnIj'H&)2T^tcpRMl(L9^58oiMrlYMX6!2IqMIbp<T]egYo#'MrVA42iS,/
%^l.J58-<L7;i)CbAk\7C<JBs0;O1p:?'?7iJLNY^!eCnY9hLT\>hD/0BpkOa(G^moa&HQ"]Zh-W6t3/CQ.^6f"F!M6\R8E?&`1qF
%%;-`<<3r8(T9hpm6<skiB45nU%#@J\kVUKS9&9e3!N&/aYi8fmJ2ppI`;,rGP*kOOU>T_/[$T5J`CYi4#[CR>;_Smqi>Wn<96hj4
%!Y9)Ibpue/$XKdKOp"M,3ZTI7j`%\\.`ND5L1n9j,$<rW0c`O;fbWi!RYZ9p0EWBliGUQ1kR^g9!iBgTaaRHhMjUKU:l[H[NIci%
%ZIGL3_gA'NL#$*>"'$!H$,-(W0LfFd5X</Y]C.YP):+RTpmi/?E.r"8J=e6Q0u>.<Qs+G'f"roT:KL:&TNY(l\lo9V0?:HQjJ^,*
%>G4pG/)VT,U"j\T+2H;r^UL[[FpQ)gTg3!C^s]Zp:ROZ<Z'ZsBbne'k]<8B4:3#PMJ&+g01]jP\@NdO)"XuL:,lqD(L04\^KP3VZ
%L8a:o+AV_dTCUq#+Bce1G^ce#[t"Z:9^m.4?T-5Lp<VtYbh`=.B35=ql,YoABR"F5R\mmHXnjrM=U3oOF;^e!fqp_"^*[N/o3>o0
%$9'R63QR*D)$Bi:WPne]nnSG$.6;'1;pGN]RE:m0d&-YU$rqI[6<ho4Q+>JK9c6hW5?9-@hVd0tDNHL_,r>#mZA#d3Ln"#;*D.bL
%HY#Mh:2TG-c=IaC+r34!m6p2C!n7A?3(:Xhe.e0sd:!.R[Hn31AubA?<mbIp&j'+,:c.BI>pctfQaN?Z_a/pFKS'1p7P=;C_PkBO
%=_HL+W:S,#3DQ)\6\GSR_i3if>EJKP'><Vn]B=Ie_s0)-1i@9$V'LK6/?`5km2&O-^Bk9E+W>#BVDP*lptc=$gJMYa.>1U7-kcdj
%'b$:(5:S'M$3G$(H$+7pUf6q3EL-h.C0,L/=A:9N`mI>=r6s`8:<q*]+>gP^WX&jK2<d<G#M?*1E#IOECS@q^#t?LGY`q>Q#U)k-
%dM)GAqoq"b>hP0u\jca'!\r+c>;'OL%!sJ1*H!c7,RQ1W<>Irh5RP1RF&AEJQu>>RSqM97R1q/G3U/=.K=nQ2jOI3qh?n'fp,I2[
%a2.D`)G;HUN#*(bPTBR<V*Hc3%2;gH'l@3SamQIbqBm*^Tso#2lI-kk,iJ(&;8_WP7fkHe*P"ZlHZ3QT@jEVcC(iNmn[s67foX]9
%H0ns>ZMj5Yb;Y.\&>?CD#.=R<;):><Z,9bLaab>>!25#sE$C*G`!IreK9)KfgB,\S/\+%ko5_i`W0t+l/@*Ep%*7Y,cmk!cJk6QF
%DI^'=FND%U6>BWPKt;lH1<dk)pN<:GctF5C>2Lt9Qf/X$jpeQTc4ECAr5eX]`gs6F9"R3OOR)$C`18[=#.tL<`]F^d_a31s#A?Dg
%l_U9Tm\<*pOK-i$>dm(<#kZ!S"#"I%F=PM8<l#?H5>VYg</_tgKJs<@JsY&dk"Z+O(pH.D;sTo%,D(G3e.FRjI\\`lX#Sg:mcd*<
%34GS;6!7%<d%(qi70X;?.bARC&05r2og[/o]%gK&Doq<Y)uE$b6C6`?Olq$h121aW+gY@^e3^5!A!LS2oF7-YUE0[H^;70P@9J'n
%*>!>O2Ho;iOj"km/\'I'#pKVk,pb)7+M5Fmp''ui\^]qqNTF0&NUhT2pO&HA:^3BWC;Vc30Q^UZU:77T^MfffdN8#ID]=Y#"OnKp
%A2d\b.7d-s.iUNKJgo`JYlT$hJ=?f]pP&bl4+]neNCFe;9brL0ogBXJ8]Fu.)B3(8bYPe6;MfchE36*lYe],5TLr^Redo.lb7`Q[
%g7g:X"p<m-%QO9$E2)?bhc@Cop=!KhaefALOoYubdaK%`Sgs!Y#-;o)PV2`m&I/uo8.7a:7q)I#3KeN2e/_83*I`qFPCUY^<u>d2
%ILpBPCFsXk>W5k#5jkqB[Pe\bpf\XGpGPbB`&D.PN+1IF#7?4QYirMaL*.UX5,0^CnMolr=fraH(P[cbdUth4c#2MVKOUj`H8kud
%>Ol9@Ii:"eSaHGulr,PWT]*!T'1M;g)HsgY#MNA_eH(mTUnU,dDJkek;Y>/?-uaF#Z,2YSUWuAP+GFf^PJog!P>0Me+?D;gFU(XY
%/MROPTI'k*"p4,97dWpe+p#egrF@eW?\)crWG"BGf)24)<5qe\8M-Pi's_Ou3fihE5$Ta&)hN<0)>1*>,QSJ#Z]lslCOtV@@dW-`
%:$Jk`;OI0Cl0pUSY"B'1fO#Bk>%=JqIPtUj65qKVCl=UUk]]HWe`h0rhF<o0.r-ZOjV!'.qig-BXOq+=g7ZUXp&W\j!3$6h(RYaA
%E)"QT,OYul\.:i><J%'=UaWW;Ri>C3WGtKUSPLJoRMioL@+rbL?=3KfJm2N&WfNP;>p"lF7V)L#;_;39LC8]LSe'IlF_TG:$^]k9
%j"\`5$KJ:V70;4'Mn&3%7uR"R>ENKf'QTrL5FDS"^>/H:QbL=M@"QEAFi:H.r6CU@r0//lCf41Bg0X1rnGE^6Kn="7=f!3"l=qZt
%S8Y?'i./FS5f[SN/FBRufSs54'+=^'rUYCbARQjkqk>bI-K1#JFNS/p$.a;c^^d1=1iV](1p'@s(36)unD)%=C>QZg"mQ)"As7A-
%%sG5&EHAkq#WoM7)[tML#RumsEk_bj%0/!ZVNqP(VFf@A]P`=d#idgD=6HeJ0\:Mb$Z7M_Hbi/naHMGm=VL9\-Fpd$!c]:rWJTl#
%5!(MoR,=Uq1*[Hs3g\njAbh(EAn!+VTl^eb^pD\/k;1pf:rhL:,.1?lr(WQH`^&HU_T9Yf;N->RFkVKB:N7VYSOk!o*YUfOk[4PW
%2baJ.;4BF_W#![GGXcHB%;n$+Es+m'g93AbGL:sB(If9A,$K.:@@$Ea3<Hq?,]o@Ti[1PUBE56\n`a`Y>Ui"bD35cUX)Y)8YdPhi
%>0;tl0*&=h@)ctu%rSH(R!#E`O]'1$gVFgJZg!1k!cGNP3ME$s2FMG]*:^TS:!!_rWN$D]RofoF[UNsN0"Jr9287J`eNq3r:3.QV
%W^.5c7tEs@$S(r3^NJ(U=C!]ae-*`X%8AQJ?]uf5h,%om28T?,nU\GmoOl(mLuJ+hQa`*??7)WY[cn3>j,T=_@NqpS_!,d9c?JLC
%%2m\Qb1@tRX-:DAX:9Up()@XRF23&%4o.MW#7B(e=h!MIS\ABH>>\67"(9au@m45R6:K:64H_XWG6"Y#X#ecgXhNU?/,=b(agTXd
%0@d!$=!Nk[iHHNo$_"9l.N$Yi2TBq*INmOsW"@`WJJOOdPI!h$A<C)o&*n!Fl`H5q5fqrmbtj0cT`]ZufB!cnjl]U^\>N5G9&?O*
%\"A=KE4Ud,.l%ko'UJ%.P(DgXfbT8W1G(?==E3n;9NjKsc%Kgg@YI])'>"lC)mD%PFCEZ'@?oEj(m)`0HPCV`J'1='c)qb#8E3?-
%2]&H12%CX.V\WC*>,q+F!LkdHbG>VO(6&a)+9kCj!0aKhHBE/]7Kr&'<)CTY86H2LPQf22bR0dP[Ki;'Cf/TsJOloXAfo4M9KUAf
%FVYI.O]g(R=Ljt<DSn/.:k1\`.HJ@<ioYN3ZCWZ_6GX'<:Pb^BJb+ctaaJ=KF$uFC:Q`"c]W$RO+8-qmOh$i8H^p*Qa7pu/eBLFJ
%Z:5Hcq04o=*[s66apE(=VK5n7*4"OSJ/,sKRJ0D$K:O9^YJ/K(R:eWR9J-W95a."ibi0VB3)0&uY"OVX!*`6?Z$8@jo/V+I\4W:s
%J<8(;C_?Lu5L$jUU]QT`:N@kJ-@eV8^,o(mB=U^oj=^,N473*;9G]4ff(O8RLV*3Gp![ufOnRVr@o^B7?4pn'ge/hHnI=:lO):2(
%juZk!#4X5<"tWKGqf53)p]Q'gl)+=+FJ"$#<?-:jBA.Up,B7np\<ArTK:\lGH`mKqBE-$e3X'TI)gX_?f"KXs1l-LU1BV=-mnS'g
%gC@OOe,;NfHBtq#G'E5ooB&fD*B1Mc4$/GZ(9ROK]?LcB43jDaQMM5/*:ktnaITt4\CY1;`S8ZY?IA^69:"l:%nM4$&M<]JJ;/s<
%^*Jl:[U\N]Q(reSp`/=-g-=hb8[2R:h1H!Ikd$a.:2U*qBEq2fO]X!JV>UgiA@rn'H9H)%VlN1AL51pDOY3/,n$8O(&7.Ge.6LJY
%31Ugkh.O3fV[1\U^7]r8,9%aS:7YSIZoh30eFa*Q.\7Qg.'G1p\"+.d^KAYs5BCG_RGEoJ6pncqYG`6?!mk=,9-JgL\Dt+Uq;'_0
%p/6K<Ha7QfDo;`T!"s[?\`<4]LWH"[@WFt_Z*S-,rTY-Bk$l9%^Ift87g#D^`PiBpQ:&HYYo8:)"6d@i3L+;&G(Teg4?u&-n*OX1
%oBsnGrKeU/L2i`ZW7K5dfgVbU:H&(:BsN'5/ghS@#t5t.^H>UaUX!BCrp>*Ai0#@u.VX;O/:.cp54N)GBb*P->L.I(90p=Ob8n&]
%n"a*<4TdOo-LSTB"n%;ZKIHP4!g3'03LZd@O:s&sK;Tc78dN1H\Z$o]ane#uUre<r!AmYtD!&rQGW^ZpK+[U9a#L&n37SWSdDj\!
%C_WeR<GlP`;o/>+m,*_5pg"!UZk"7Fe?Wgi$aVjkII'T#WS1jjKq4cH=Ae]uCc)u6N'u[HJfU\8Z<>,.baj%:E_p=#I@7r6c,`pN
%Rak75@sFEC]V`i^FLN+(nB4i[QgP8(O<n0g&,?o8`U9%_;q"Y20m1mJ`\`;JBYZU[8gZd,YlNDK))O5serAGkX5haI[D=rN1dAFU
%_I7XFE2DMbZnN*'Bl:dbaE2a#WeAQ!\6./oAL$mld-6u,$<c%&.m=a3=F8B0VNKf9X`U#(2ESferN2IWF"q<&lCdIQTTY;?cqE.P
%$;<&k]"SD_cJ2OqH,5V_eg"E33BItd#89<0BA8%Lq]#]9'V:H2[/J*D!k'lH8CmS+W=nWf\H&MR&YNq<;d]+dTam,$.kLN:TUBK?
%p.DpgdD/a7jOBdc-699>QVbleRP&Y'&HWC1L]sdnCh]Kd70!At<1ZV-r"QZk]TDeCg+gCalT:d!pF#BRN$?ZuADNFdV)dtT",Sg$
%O@JC'o"pkXb6D89.AE\`3g/D?jb,5)(GR#%YG\4kd\1aM1m#4aq<@05\V@S"Dj$pPI$,d\-a.5HT.VGJ]/Ymo4GL,Ca>r[.VU$(9
%`;pm",7,'4#=#)YKhS8-kTa(\&_HMd$oMC"8Ajmo;HLsrDiP<R1Gtp&36jjP1MEI*4T$P4^m0LJ=3HUL1_?@lO2PN&nO8?a!eJ7g
%U+r?-5\`PS8SKl?;Mf!F/BFIgr%<kQ>G=E3BXn6N]acRh3+j/rZE@dfC(u@t&L$=1DG%]`F:ofg^$,-@$$F27"e%4n29QkrDk(1P
%PG+BNJ4;=4;Bs8dA`nj\`%!W7@Yh2K8(?&jFac=VJ4;\qnTBGmEE]/(UN[*W,co1MZD=T;%g0*<JP-B^QL^c8>aZL9I`3R9OTs&j
%&mJ6CJLg']W_loLB#2KSL=-60,3hA;e\as3gS1SaXRiu*.\K+G<)X`C$82I8bXem6RHS+9eV+m'6rg*2LNn[P29KgU+>sQ9i]7bS
%aNI$8nTECo&\$-7cNthb':EQI$Og^52(F9k.d3E["UeLJlIOPjk5:d7*FUof9%LSe9+Z&KN]$e\fsn^8jUsO:!,1r3HkW_1kbJn)
%bO!r+Q>957Vhlg&27p3(pD7o.julS[(lCjMRmnjcTKpE-5mh@W=*?*W2`qK]R`cE,!&:258N5J"UQ;6VOrTu+;3mk%ac4^RJ0lNU
%0fnXnF9@rSo8eD79rc;^CSU`#Z9BiKZgO"6WIE"Q&n0O>So`CdbOeKF:j?`&,V/+Y'h($$e2:4q#,J4P3`FM-Ld:0;qkf[TT8U*N
%;*982f0M0:nPVnahHe#9=ruFXD31Ah=Ab(b92l8.nn6i([IA$./N2c,.--bn(9f`d^3O-?1Yq@gh9T)n5Y.IE85$cY8Q_QBB1oh8
%&jW59QBm+0M3ASBqd_">H,"-l\Tc1<m1*tr&Gi!XJ1^:MR]^c93'-L`Cm$$u3rcMP$4=/qgXf%[W7+2o+J.hC?0;iTCGPkn!k=+4
%h02)ZrEMH#OloB^.TNK(!7L>Z/[K#%e!0H#]g,KrY``$hALL-U0?^;',^MJ+4YDTg;@fcD4A7l'l%(lS:^f3D?n]uZUlIP2er5A?
%q$4J=ZM#i#&c"[pg[DQ'orQ8DA4ati&\hUa\i9%>YhHVriTar"<CH(&F9uBtLqTD5#C?58k?_LjXh!e3p.!]O_pDWkc9*KRV\%Z:
%'iW`7"JFmcGU4.-Ae2?2oi:rKQZ701&!et(fJ.\+CK7XfAS\s&Up\/Jic+t]-Ja/08)3W^ZT4AU(E]#6hdpP!G([TFg0H1H"BK)?
%;Ze4U?9VI*%'W98aCESp>X=*/0'a]8.9qN(B;:apW%4\WO+#XJo3:?eNhJ`dU6cB+OCIq.lHUp%HG8t\jsDDfM&ULQblaDfQuba$
%;"2'[!OQS(rQ,JmFSHcA=FfP!!IZdOg#a,i-)*=.T;&8R"F3YI40-(C)`PtC^_#J0giJ&M_n#7hCpg_$!UFHI:?^ub%DDgZbgfhK
%RmAnY<CP!RRZ%hXd[k.Vf_SW+<f@0]E=WCuc;iu$\P2LTE5s&,:05%a:^p7n>>hD>WmpA[QGU1h;oMnZ=6k)EOfS5m_Ik_S95]u[
%X,0(E^#KWSbP:P$M)e3LXM<)q^-S&[jO*'F1"i)R`IcJ.'<,Cd%c*R'*4ZEP.PpW-Ye)g8\kf<._M'S<%gj"n@f6QY,'P,6[!U3c
%,pN(DAQP&nQ;[X"$eD#F(I.LR:`$'OKg1ni0dfNTVen,CO3n@tY*;bA6!6h]/,YFK>W0`j-%>]V0/\:C4$UhFZ-c4AgW7/3ERlA!
%B?=O*q35_tH']k8P,k!6gAk@-Y_A\DYATP`;?H,nfXj3B1M9&HL1eVCc2SF8?:/!PlZ]7GDA5s/jI]n1+?-,q&@O^YjI4K1?]12*
%Igj.epWSJTo/=4.!9\-`%(4)<++A4qOhV"I%-+_7abMh<'Z)KI1V?^;&Bd6Q/f,#ob+%CG=;M7fi/rme.M%C"3/k$R-c;Xg!MFPu
%=ub&d66MCcVtI;%o'">+iC?Bjbu01),K&Fg5%G+2K]dt\6n6eNRP^kG=ck#;\e/`8569lfP`rLEiaYtRXHPIW.o-e?S;j5fWV_)>
%.XcZX#TKbR^S/u`p/@j8Y#SDO4(>cVqla$VE$j4[c<37_KeK$=;`R+/-di7<m?3?5Sg:q9T(OBp8&i8"#a2^HAQMbh#^bmC!gLBr
%1Y7Jc$&/:.g[[RheR?!F[SXkj;U75&p,\knrLA:aT=.VMEg<KsBss9fFTOC^ZC?562B$bF8n?3TMge<>;+m47P%9a=+.m\OjMI?Y
%-XT.*Qmfc8?nUJR";bW=BtWCj1>>@JiE@lSGY8JHR41fG"Sr9+k#*i#aO=7ED'2Vign##hBCR]]-;*eQbeBqb2DoGIMlFLEjlRc\
%*,lah<K@)Y]f:Gd#gK#]"k&U9TN"0++[H'0KEY7=E0.GY%,s"Slm%+;bZ?gV6Znj1I)%fNXKfsL:8TfUHW2L:?u/SGoIGRNdMbb*
%=a96;'e6gtqiK%*qau+ZFMgO2dlQT,iR43?Q:pcn$`]n8KEd;6>S)j!V>\`.bKD]V'Z1O7F`/mjGFc98Z=]NNlCASJJqfnTjc]-J
%AK(k1"bsLgQm090!o/(#6,W!2>S\lpd&#-c1XE0!O@s!1-CFR*.q_'=i#p@ZJW7MLclhlgki6qZd4]e1F@cceh4S-<b?kRFAdM8q
%6T!sW%$TZLo9D2"WKuj1gGf3"bT5G2OK$:9;CU_k#eXB]?"bB88_:*/,kuSG3:luOld7sGHQErjT)hoW>ZE]J+;o-qDR.PZlNPuV
%>g"d:id!qU!&W@*TT>sV8eJ4D@r3<tUY(-Sojq%b=&,$[eL$PMd_A<[2_)V;DZ>Aj&E%pJ)5a!TcJ.nC+WrUoR0%V:b.Rce8=Z@J
%">+bj(n+']1VQK]9Hh&gas5tB>oj>@7faRM1_MoSZ])3Kp8tuf7hos,Zmoi+k<prfYq5ME<Cp-#no:RsF'e"Hb*b^CHi7c7&,9\K
%2=='C,sb[[WM(X1XpC[5(ZUR1H7o.*6?>Yg0m*'!;GG_T2oM_K$&Y.fOIH57Q5Y>unl5%ZC^]Q!"dR.H/9I`3SW\-oSBh:s:g!4r
%ZRt.Q]*5?G^O+'XDZrdKkdE!hp-R1A1!07A4d^+^Yn'+KRmI-WBS?qngB818EV]^Qn\Whn8L%aA/irEAp=Yg-"_K3F$A!k8Oh)d!
%TechqW@uGmhVYAj9VHMjbnQ_o**c8k81RJ-Sf+8Y.6FpRb]D9&\@fC"Xt?a`DWM.*[!&,7H'6dW:#Ih^6X4>qMmFj5GflXme7)/^
%#[?#BaOP'AQ@!s)L/?=>`S16b;P7K89&U5P`_2i+@=orc/+/srY'k,_VO,b6Y0$S=C,F_HV[$gEE_8i.h0$6%jOVTcko,[,8-gok
%JAWO`n[hGD16eD)iB@AUkS9K^`5He:a]oTg4u2KXX(=;*;F^-k!,fD1#+"?':ISG%]@#cFD&?ej(DjXEoYm:m37rt37?9e3+rd"s
%hG=C43oTI]!('IFrtoK5B3UAV?)AFFEuI][0Of,#[;aoaac`PJMl$UEIXk(Zl2K/b7kRq=N$IH+9Mee(.I%!Gf.u_M1WZ),r\f0o
%B%cN\[uam[1_E8!k^GZ"I2.qSH$pH129@'N-8DY!82oBXr41$&M3^*(5oAVNAoaYW)0jYc.lE-SH0)8!dq'%,]DAVV=`+G+/>M"b
%[3ZQ0jkr=lCaYD1.86WJd'1Z_QJ$JGX9k^^.fSBF-kgC;k*4o-PkD\bbb-OB>aBID^OS7ljri.4+/d(Ol^k3Z[>SDQ+.D4KA2"g7
%Ur3/M"NcqJ(bk.0S<X_j0?ujKF:J`Qj[TZ;Bi.bSY+8K><G0fU[GqKAHfN6$E$r`0YA9_'dG2^*1e>DlS@\[_-BX))fh-?Se+j%^
%8m9O>fGeD5_M]?JRar7gA]p\Q_5_N#5P'kAPF%?5cr(#)Q3'Rb4gVeU.MlV?9R;TD>gma5d8I=7W0%fOY$Bf1>IrG43T(g%82]U"
%#@f6U'L!jm\7MJ!H/TgGWho0\.>S\+g[^L2WatuF`5^o/,B(b2$l=1&aIqrrI$p_`)H<HnV^L/@bL8c3'(1Qsq<O`n%VNN_"1^3f
%NVnK*6smX6A0Xf-6"\gOM7DHd,_[M5>E2JDKleZ:M<N,WMB3KNGikjs6GU/tSPT%D]`HSZm/TT9c2c+h-oIL#k=ajs<[XNm*knJL
%,1iS.hM4TFC\FY'rDA>1$2<jU0\?bX@:KX?F64hTe/S-rq]g`aGXoj:#L2L3*2F!1$V1J>>'X4f[Gg1rMuU4F/uRQDQU,i]9=q?n
%7t.8iL%&sb6%[SBEMi(hYt&rsN]j`%S=PA7`Dk=a&<E"mJ)qjobqV+2QE#/Pee/k617Q6Eb\Repe3N/cR"i.Vq>%3jj^H_1D#3J$
%^W^<A>K1JCF]ck"B@-dEr*UsXq.od2TJ7)dn[a7'2^]gI#Z@aj*Y7,[Y/-#BPYWUX]JLgZ*s)QY[kAgUnAaEP+1#nQ64n[*U5p`Y
%'Kq3n.hZg]YoSB;gZW-&FA7e3)lEj_I[1CBhn.g;.gA4)9:^;%Orj,O'LGr;?rF-unBQ(YRqG$gdI>&7BW+4)-G1#]`f$Ui+IWp-
%i5Zf3d@5QBIlQC+#/#VA.AG]4d79%^0Gk`D*%h8BZ[Rc0"cW/b%ic*ladiGWmNYBfVe!s=XX4u/'3d)Y3[Fd@SM/[I8`U2SGF?Vl
%q22\:pdlZ>"(o?>[$pk[VEgH(bfNcdHb774J,Nq#T88==TcM//o/QiriI>O8i=t-jjXE;44A&s1St:ag4&uaM[C_:0K[%@-76mm5
%neHO:i9%h@#b7V]'0I_nQ34"Hd%mi1k99Elb(o.Y&!+,/X`JAUAc:0[)NiM#qfm6rie(@a0&3)];pWrtC(TWS&g%Wh8g.'TDC\Q?
%@*]/qFR0*3eEP4uB=U?_U+Y2>Qf^`TSLp1I=KJ7Qfi%6q,#;h<^]*d7MO2+G9gsB2g;Sl\Q_rAc=%1QTkI;&"+>iT;\J0qkr0L]5
%J0$o52k'9$UP6fY"k[,,%%%cF(X2'S466oY5Jc`T%[>+gCcB<<D(X;`aRBR:'[(V2i%>>O70?nYaqENX&f86#QY("S#s=E><4O"#
%:96RQIj&8"bA;=[?F/2>*h"[OMg)KfEu+hn/#LSRoAUIEe07\Ulh&/*G$WpRQqnsc;^C_XliI`$H^uhZ'6"[Q#lBOkoC?c1Q1[K5
%OV\A8fl"7N?Qs*_-Z`i_+l"ZUN<WR&O&]RNf'J3#H*d+4IknXAFhrHO)>0ER+ODfhDI7>,hWO7;g"5f+bl/Y"1Ln>f[2GU`XI6Fj
%:X%ndL,'#$B14W<Z+cZ@]IB::M)&cTk5lI^aGp#G*,W1D1mqkI45([8(G"Y>gK;dl(u]@R.WUt4Vk:%bF4Mt8Qugf=K_`JCIPqul
%A#oD<\.`q?Yr0d-kAHWsC8VF$lW00)f*g\jq$+IG1#L:5/`qDrP;PQ_@k_[Q5MtAFk1=DJg&0D,HH`MG>2@uE+.nq4STr93(RV1I
%@)jnD_oT`N=fD,dk)]5lLO&/./hH,d1UC3(WNsL7ZJ$nUrr%hqSNb(FhMLXEJsDb&KuD/%JAr4LNta1>.u2RdNJsG\E<gPs8Vdm!
%Q?9lB\)^jK".$esJ[^l80.N8[V];qjq!4((ApW494CFhWk9OuN2!a;$V)8CS]?p[giGLmc6gONd19Q@>)K(s(DCDQ^/tQ24Jb-V+
%`O5-8hE#df`Q<ms2/"Anf$KMH=O5iu?#-2.rb0P]'e@jn3gR+<mKPC]p%^XVD7mp%ed&8!@=8HC/QSakLfUrc+'RQYbBJKV3i]%R
%eqlQC40_c1]-e(a\p*._c1b#<kiM\5d!RW3#sU@5:?%UMo1:uq4&.ELV"^\O^'gO^4HnF>SM--jH1p,r:RHt2l(hOtm%4^C5W1`r
%k']./F9]4^f^/?6-(B8D!$UA;1U9m,Ut^'9AWPSD=LW1kpTOJ&nn$$VX4+e9mD1Qk\%V?b%pS4fUMTDD\#O<#D%H$r%MQ'.#+]PA
%cTW?'"10@hO&YWsH\+o-U4PO(h-SgYpOeUA@J@_,O4X2nS\_gd]uL>Lm%_dqcT^s3mMtrBS_)h3rV)>fm>K:&]oG9<;O9_c;5hu+
%Np:]`gi:@pa,\bS^[1/^%rTFl<+n=iK>]dWL5pN&m.>G<pJ*237@^XWd+"K.7IQdY?mD5%;;LYfIV.<Z:2sNZngTN<:/dJpQQsJX
%?2h4ClCpqJ\Ej'8icF3G1)!a>2s@d>Ms3=TRp`sPEUa6$j8.\$_,FS#_gUgV5?Ud]Qd!M7q*e\1H9n.,Vq6*C3IMIkf@(M]4J*+n
%Q`&<3d!TlG>eLq4&JCQ#k_5kpcFdRkpQ[,D]C3o:U78D]D!q%<aQK-uC,A39EAjpJ&!8AIH-X(>P:&H6ELodL@eDjr<(Tm_NQc^'
%XhgR[12761?<c4PV'Fim2gP(9kIorgK(h1u9R>Tfn&jL<YL`HnHB4H>SU)d_.!pmH-2M,-`cl^o]^ssFc;&c2jirL?091:lV+@3R
%]sV%e+6ls\rq,R:eR+/,8cRgFn^S/g1$JY9^:#_n1O4_;2qA"Q*b9:nEE]bZ\%U!+f"*2\fE`V>D$;:\>]K\aji:kR=!'(L=;ejc
%BEE,2B`T;]<,W)t#F?]lR);Y:Ke-#)VI(F$qbpjnkcf2upaB8cUao@cO]9-h7](fV2e81K(!2g38V2=Cog/]&>m2jL#5lrW3tOKK
%m=F8LgCh"\4dcN,LQb;;6Cpl&m_S-E(quas_0e:\$f:Y/Y$g#=_h&u%;joa19q>3+r9]*YV>PJ9;6)XT(@U=`O77dm5(*o;FP,,0
%Hg(%(QhU,hS/BTn;)kC"*U%=^Q+PDr`PjfYR8*oPO7DF6Lq??nLTQgE&LQ/RC,fe>*J^i)rNku4HNH#gFQSFMEY$ca8BtZKk3G,O
%H!pLlQ>XVrE#6=3,qhXgl$P+PaZ(Wp7cpN]mG&Esd4'_(SRG9/n19]NkK^++G2\Ad4hK!'\rUban+f=3(-h2r@TQ7<*GaN'>fOe&
%+;sq70?&/eds?jX?(Mhkc,VRRJbYTOgX!Rio\_i\-,,mN`hhr\POi>1`A&$$pa^W>,"[uY7,;Q5-T]/]3,*hi)'hf9M+_GB&&%%0
%n#i.-G;+H,_%,=#iTo/NFZII[e8$OP9o[-#)^\(hX&CdE,YITKI6&sW]<2!Jk2_!Baj?<R8Z#V[q(aUIrFBO<<j$*6p,JC5Khbq,
%RqHdtbFK+bEfRd+8M9;sLN?P`i$R'U9IG+,`"gH#]qO&*_0#q/jBl`jErNuD&hgKYAbmTL'aGQLrG;C@GfoafT#P?SOEA%i$TClK
%FQ#BQ(Q5F6EE.t(<d1h*ke@i/[qtuj=a?H@`ZAK*05E*P#0)jrQCK,gTbM8TE8tB+mRWq8qR98hAJ]6u/]YD$]%jgSM"5mBC;+`;
%^&D#pb!'+e"g(j-_mAN"`E1>R/"'ItW'"3pT#sQHi2@9:``asa5L6@Sl0Iuqr6h-ALN8".\e92?!1N5VRr[&Lr[Lr1-f=1BD9.35
%)d_>7l[IE6;pY>VXnlhP2/\d5cgF9$EIQK;7\#`5Dq]'aS@3@<2lW^uaN\3XEIB&iU4_4YCCIs0pZ(AiY!)Z2k=X8,!6nfTf=e_A
%%,!1U@Q0mlV_2<4mji9goY*74[iaCD-hKdgjeh_?njJ-Pbm`3PN:]d+Nt"lQGT:=$V'io;3ISIaH`p59f2hh&'l0;2dl-Xaq7/AC
%^R/AUE-'c,oIA:8\[el0?A&MY^BPOtqH>U<G$d9+oVUlb\]H`;:7Q41n,)N3=.h6o998SYg[!=qc(#JOccg[op5XDl<9qc0:q^a8
%CXm1c[W>YiM5RIZ4*3?6]4]jj$3&Ei/dk@.o(:d#f544J$u_bCCnQRffkTk.`U`8,X\2uJ[(DU8qcS-i9oqN$+:GkTh;7K--A&d(
%?B:iZWdf9Jk6Ia&"eK!smeS:$`/Uol0JIpQWpRZMrRj>]+86,I6.jJ,#.L!G4d`mC)?)16*TA/Q3'4M&&*(RG=a`8W-$$te_\mWV
%Z4?eXeFmB,_*e*s6LfZ?'Dej+fpKQ)eoA+SHlEH2EtP)@#ee30+*Rn.,+;(F.jfWs[pnrnc;.]RDHNGG05n7\N`.Ek@hPU6as1[P
%Y_mL;d5C[>6t&Z[&8l)MS]-lUTQg#[N]0mQNuPp9JE@AlqZf.nW;LCY<pbnPhe;c[D9J"9h.<ee]K[_$4!JWe*?c40Xr$QRK.)$%
%R&2XpE.2b7Xi6Z$(OLrkSeCHnNU!!=j@.;ZofHQH*onl)1D%&\L<Z;R#G/VO6!-:.eBOTUIE(Wmaopjf4ZF&QTK2DN%SV[M)2p1(
%#b4uQiaaN,L-QqDHpe3;d.YWD;s^7#_F69n=P-[&1VP=c0#Nltki1sSQP1DB[or7s&^*<!*ZDRk1=jH@POqC86_8[c363q55#Da(
%XIrtpL:e\9]BuXd\jGnuXP)(h"O/Q:^meWY'F0J9.>\FWC7%4^Y:WRDUs%9#fm&#OJr\q1M*1teeu",BQ1Rgh=djk\A,qA]!NcNV
%itS,RVZ=fk6SipKDmh=plLRe<Y`(ll*o:)YRlh4Ed>*[dhrs--HuW`?E2]c;!d949m`0j3Ln''/39"O=JbA,Zat0g7n3DsmGYJZ9
%4fiS]bK'6E#A^n>eJKsE%P&6E8a$Z9,PNAn[Nu1EZ(>+b'?>q`?ADON^%kEnXcqHp_CElk!\p"YcHgU:;V%%.Zl<>42=U*ojVk,a
%F]\[5M'Y*@fIC.:[Z4TDD\YmU=<5@YTWH2m)tCI5'HpMDZrX)5ZK7+R"fDjW1*EYlD<)rpA$%d3RX#?!kWFp1![VVnQWTAr7OKkK
%bA@X/^2"I!U`$i0o_`L0^3U`"\l`Zr\*cL`@D&X1%&Og(l6PA\XN+KJ^@8jDnuT_iEPrsgF]`)Em[jXZ0S.?L,8X,B"-s=)=)5'E
%E]s8p2C'd<Y[Y/0QQ3l"/@:^Jb%_lSb%X#?%$pY#h6+eea-$q`8O$mmc>B"0[<g,0EZ_qhNUiTH"_,djf'MuNVo&:TL6ZF*%^DV.
%@(fqOUp=rPA]IQ,[H*XF*Z6!"Pa*;3Ej'dk1KaJF-*4oid7B'$+-FLRGZ@t+[2sIP\l^W=3f3*/II^k?V@+0#f9:Q,_-T8f\t!Q@
%hE"+h?**_u[;:_e=:lGhE?;a**1s@R=s@fB\\qWe4k=W#U5S]QRC>kd=C<_k($tAd1:&$;3M(*%?GF.S`VNIM'Jro<1c"(bLL;L-
%KCq6X]hE\>HE:3:j'a5R,1g:@(;/!\l]NdPl>Ep<eqY1qb70AFZ%fEo(3AKSRfun=*saB=CJ,$mCXPopCQ!:KPfNH!@SRM9_@^uu
%W+dhlDl8^C`9LLq4O*U2=N818bm$EQ'=E"',1pB\f'0_L6`V(aJ!YgGomdk.7aWGUDW58aeVCC.L9<sI>,[$s:2YBX_$\@6P_A]L
%^\"P1#5b!3i9Cb[,u5`L9/Y96j9V.(#U79qjGHN0R#>t3XL6'apIIor)S,QU3,B2Z[t`u4=JeZ(6]U*DNVuk5/-.S'+0P.mXkqMj
%N6,\tT$A>W0Z4j@:3/*"G'DXe5CI0Ybu6*F2s2EX$pr[GUV>i=Y+FqZk\;:3XSXhBSCZQhTD"[Sa7?3qBp:JHfH8kZbtIKP3MHJ[
%<U!!)4dDC(=Y#e]lU%Lpke_dgFu,8PFr_Z5:$4HQ0)@1b`@V\hdoI&$Lt2a>c+)s,kF/;m[[,gPs7A;bM(P@&1@<?[8tY<*J"Kc^
%(V3BI[m]M-h:"C5L4`b/<NeD*pc9>CI9IltnU')im89ojg;#PWfj8neeU<l\Q<UHYdirdL_)F&"BdQS[&Y8(#$S35YSPpPK7Q!ut
%NU+]sr&!e&>>`_)``rF!\IJTgn*.si4B,Y]o_^F@;*G0*Rj*,OHV`*=Z>i"'Qhd++H-8't)j3-hH32RU[+SXl5CiD$]`DJfn@P4D
%PGtD;b8i9`i=cp*b6aqSCh/2m/N#J]U4mR)Wa=@=i&7FLLg*HLm)>Z_%"[J6TiM)4B]K/]k5>]kBTN`*SDCLT6E?`:[9UMm=gB_'
%nu>Bm'!(ngk[!L^V6&7;1&n&,"dXt<#Cb1A$=)"@Y)=%<Fg()rYg2nG]$U.3EZs"o&o4.hU;.\Y9%=YY4*J5YM03:pZSc;F5\cZ+
%s#:l[c*?DV'irq=/lodH(pOS:4B+hM`I_>m_do-<]]rmQGgWG>P+)U(Z%/9JPZm9[KrILj4k;EqD]Mk->=43>%UCEV3(4W6$rS"D
%H"Fm7r92sA"@*NaId@J%K1^*dZf,RJ*+f(nc/)N$`^U1ifU&F12B=53olJQ`-t"VaprtfuQ\L#LaN[+`B)lH,M7J=H[e+XlLhHMr
%+$2On\Kl^J>C`pIZ0Q5-W&DI%io,fZG;P,#3<,3D(6$@%eDqf&<"'qA[E1(nZ63XB_=\ecE]ATZfN82P<S!649_nR%`jU,kBbCre
%6rmI+B-<YUP2Nh/q0^OJ<UeBGe%OH!S3^%BTW.9`9:<.m_+"n.Z!u'l6SD7kn$\3i&2(%''3rtJL=MeSJ-;3%K]=%&/B^,Di[/+s
%nM3aC/fDEqlgR=aHU*ZC:g,&OXh\b'6M.R+%dOn;5dbGIXU>J3FX_tunVurVU4h@T1r;6e1kN<(?ZK3rjB1dY5>AiS[e46#k+gdE
%/F^RJQ%/ecb^*r=N,g".9TS)15oM6RpdLu"_o;**QeDeWQ<%Z?$\/i&B%?KGId`5+T*qBVLS2CN_QK&04#02bm!Hu0334nU:Y$c(
%aR!+FLf]<)_5gU4V%I(<SuDFnQFI1%H7igj1W5F=[uKrj?DG'Q?eXJ[CH@*i\;ekS<df-o"BK%s/"sKgI[DCJ/`%u^Yu!oLZ$CED
%_#Wp[3`G,Xj33A?@[eA&0F"55H%YAP`nqTfZ+0uh"<(:$f!?7GFLA4')!anuJ>]GV!0^WbI8U[JZO4cUmUmJOdu&KiE"@>ARStH7
%<NLu]0U'fKV=(G1V\Hjq.:#uh<s=8.]1B:U;;#18H8-tifDmeXr7Z_@o<$+q18-r8J-<keDu;-5fnO3\Y>._<YNthBhWPfNoqFST
%9lu!jh,&.V4]R[S@[s@\7SfkOAA&l+6_7OrJm4541)s89nnP5-F]/PTOPlrghCu%qGu83JQ'sfTSM@+D*7D(`A%fkR)4JJ4M)HS\
%M)I8)"KFI%D%?363J?(SO_N$@LHcsp8gb'pX,h^qI&Xc:Ct!j+[ti4"c6o$g-/eYGe!f8lA"(iWI1OfHWiZ`;\<>ZCj'$f*Ebh;(
%S1d'i/_9Q1>3`h?2OaEB=3p-Ajl`UUlMfh^5WUK0"?!Yt@<`66cLK)@;$O-A%brh&HEc%OO?rEY_Gfc)k[gEl5%qU]DB?6F"JGjK
%0qJR6O(<l+OQXUh>LZO5k=-YN*#I?=J0oP`lhJla"fuu6C#h^FXf]bgV:Et)H+^TPP'ED%I#9sEGZTEITA<aGd:/1q0<DAgKSW+?
%*sse*[:HuP7QmFK'TRPbCXsSkF_b9uYUOgbg:!5VP`iK.'GN`@$FCMIlN2T-a6+>TT'NE?@D0G'#d7R1s'C6!MK]7QK[ah-`lo.C
%^.e+;.j(gkq`H;1>0nXH)S]<0I=7Bu&AQdE]<4Om!j1IK>1q#]nA)5.p7bU@f;<Pf>*N>J"UM<n7uIkrAKb-[ih7EUiLFC[<!W0o
%`=u<(=-#>]Nt<[#Jg/tu;;Ra!D^pF1j2IG?;j/-g\[<3)"q?7EKD83)PQG,qEO=V#,T7HW)Y8T91$dWK<o.Yn%Vgq(8GdP(:<4R#
%!.ttT5uj(ELY7NP]K]+.B`hct;LdICAm[1.CgF_/^qRmtD=__4IW86Ne8pW1q$l`D/f%[hU9$;?>1`OT`49uHK6(PH6=$aie"71q
%Kg:\P[D).B82@5oTRM$&UFA1;Ym!@1$Imh5A_o8O-3!??ErgJ#So:r#)[g`GHC%"0,6ZEu^2n"P_XCL?1`28!8?%!!'Wrh]^91ba
%r''j&L$G>?T2h_A?*1-bV_'`)*Wo%T)L9kLM4[S8XrB2Ipo'NjVRb>7nspf';8m[kaMI7uNdbB,A(_6k$[gYElLq)]A^h5N%'=Td
%Ess+f3YG/^h6aa31gaQH==6b:?*^)H5O3AdfGifHj@Z*u2rE:e<3st\W6V.57dDrM\5o]cADgLa;*Pb$U]GBH+5>piH^K#,o-;g\
%>J(3SrA<h`Za=U7&4"'`[ScA!fa<8Oq[(hJ&cm,(m<^qKCu(CX@!bC.@20T$ZscDFPB&8kK)BCA83L[U4Bl!Q<\,aM<Zp#70(M33
%q-HRQ&Zo$_iHOR`h!a.J"dd^Jfcq?=Thp/c1n+[f?eK6B%9m'cC"_ZRo+/n>o79&,2QYmV9J#XN^GFp$bRL()c(:p'0b:K)<Re3%
%6@Q)4NOpYs^$'?a5om(>hVU,ZM">WX@e%H_?/+,2]%>[7Bq,#FT[9h6O5N+gAdt1VKgttbA#ZTdF7?`9nG_k=7/p.dC?MNKBh&$\
%S^@RFZI$17o)/%Rk^USFJXN"&q;I>l4%Fp@%<Z28qVUMf:e*_irPMsm3QG]:i,enfq.#UPXuJq^d'_7c2HNtNiHLpIBSbe?f0;`p
%#'Y>E[s"jN?eP_9'K8^DP++N&JPqj&f."6WP;]T,pR_eEjgidho6WiN^=A%cR:]"C[jRhV2LXo@?$@6X::(+*HL!L:('Y,aBNPJX
%@_Ir(h%\QIQhG]+4B:+55Nkn>ECB(5rM$WiV_YP8:-C<0'a0a8IR;B-`g37,[28PFIJLq)g(3NWTHR+*Q_g;sb@r&8X:DAAYb7T7
%VNEu+l:O:)Ib;0Z=!\W:`^FKAfKZpg<mop&K8TuXUU>s!dL)YBH]t&S41]<%=2&pCj=<@2QSj)ZD_\)(cgi5,rA0K*D*H,Jd/9Eo
%Hn/<!BDH)eq;]Nk2P9)`eGPQkI$2e>S`Q=g*^>%BDt@,GhrLPj5CAu>/_7mD^>IK^?2U;SI%/IQrAME%j@>:&D*H/;g[Z'8NudE<
%I$P;r[%D?.:M[)^)mFJ94[4FdDq2<GG<\a>'YVCT<C^q2Sup6%oM6YS1n-GOW.q]g9UdqQ8Z!.(NJ>_qjX(pj<9Y3p<Ycr:g=UX#
%X7QJRVp*Tf06TR--`]'-WRX0)&tbJQ[c*%sWCh'[lsks]S=<<M8LoMa8DlRVqfAQJh(Gmrr5PB`7(o4e:q;%]HL+C4kgEu=p+cBN
%$S1,PG^2te$XK6VV0dZ0hT,?-H]k1AQeSTb-hjP)KMo\TR2XmjZ?^qVDQS2\5]!+KSGiBbP2Fi\?@D<HJ,%[P\db"`GO4`Rqb)%[
%.!Y+H#:`r9K6$rc)8R\FUVFQ3Oenu[=sm1hl5gWqR.H7ogCiB4eO?)GnZbgD%9dElp\ElprKOb3[JMcs7EA8qHY"a>m2=!iKf2L*
%oP+AV?Q0d#%2@OYKuSh1NXnHd9go4B^\LIAEIO*("Omh"[[fq;*(JD:`>"(\%%eu=D=^Sr3E+SaI/_-cWc@9qOgAlXH#MWl%+UaA
%<kU46PUF-QSZ:DLoDUQ#&it;\eT4HTBQt$+A^s^DlMO%ggJX-7F9f(UhR4HPfebD-nga!C>977Db[jNBB/"2o_:?jeD;/n:gR+iu
%^6?-Xn>c4[?0E?e0cK1,:.;s5YsGd)lh<?1g\Yi-@E+Ts#*pinGU$O7q!tjgad%5'07I(gfXjtHK@eu*ZcEAoqq,L/<]\SGS)2-H
%X'Cn<rJ;bGs$(l!fbMQUXGMD`C[iK365$^URoP.N*[(i8j=LGAUb)T[TK2ao\\ERPM0+m1e_Sbtn!SOjHKWN+07(2Z.rAhlk_`I[
%]Lnfj[LuG5.Y(p=[b?OD;q`MXooqUdccDbuh'SUdP=.Z')L16DX[/QjJn7]Er%+?p`'FhWMY<&fW_Ip!%6Yg:Wdg[J5_(1d7cgN2
%](:iOGPk9bg-$M%R*P[qpM+?UO\]aO<@r>Z2(#uj*uY`-9B4\1?>akVO=e)pd&3[.T;86&^JMG6Zo@r9rN\.Pe_jQbIbb@=2k=jR
%c11b(g7)D1XbZW4r["s22.@4`Ql_=^-CnK2>]6J#BVE,M58NE-C1CianV_U`*;?_B[uZ:`XM*#!E.d0/7b6G#l+?e_NFQl&6jHG.
%7HF2aU-ZS&GkP<%Wjk^5()jfjG7fOfoRfH'Z2GO($(3Il?$S/SFi5<jlTpa2Vre!.;Q?E`Vc>FO;ucL%UhOek1F!Ej3FPJ_0!S7c
%`n"?1jbJN8$juMD3UPM'#OK_lKTC#SV4-]<&D58s&T]a#0P_e#4m8q,*>ms@pB>pg%'k=L"!29i\7B,VQ[I9!PPc&UH+g=W@u\^m
%c\rba4#f"!D2cMkOa0.1,7)T,FR2V\aLikW_8-Qim@2kTWp=W80h:B6+J%PKbk(2Zjl8a47-74NcC$FcA7!a=r,X\Rm`<%t0H%P5
%?Q.TMA-2&9&GV=`Y,uh<R(dpH3RQQZY*\,lG^8#col<me=kY^k%7[OMXMIB8cc,!4jgh(=;-E1DRY+![ras6+`Y2/QpP>EhohbHa
%R862??Z-,%YV+L7aQ@5mdI:iP(8Ku:I+_HDSd:Nm%1K2HUp[['$&R6QjU1tK(E^X/=`mD_)hE#@X1g<S<6$>-EH=B-=IWegXn4eH
%JTpkHL>"Wc&'E2(d6HOY:sS42I)f:82,%eZ6@3mL>NLPM\3TBjN5\/0C-c@^H4Ki#[%S-\pC3;A^[e?YZLnhrZMR_;1b'9PI%^=o
%2Qt+7,l@T83.b\gb#j7+&[sZa+B^NXHB9[]kmEU@Q0<O5(tkrB.6MR#@+%'^Kdf-FM[ek>Fal:$&?`^A"Q_LICZ>rJlb,2d%Eb10
%3Ub].pm2H4lS3,6%a&Q;H]Ar-2t9u8DN,9nfBm*gae6<G*2>2$+o84JEFu`IpDYu^M_;oin0*7?E`:6B_[`"8NBV$X<M$I%IYWJT
%*Nb<sdZfq2jA52RN>cW$i)mQK)<.f&]4[2jilcU3)c6FD644jiXnOu"pp>$bQ0P)^\rPW6&'krr%U;<lcJrheJ%j_<[!D?6cdm7s
%^%u_qn'7-!eYS0C)r#]i`>br^^\N'=CisSbmG6Z%mi6.[X=l_%fnJV(m,`?VB:%c3W2RS+YW`),\#/$T/nS0K?%,[M6AAom2\-ro
%P^7-8ebn1W[9HS-]u'2DpC$[V^Tr9t,S*L!lu$aTGH`/=Omi&@lKA/_IWlSYn^Vr:\)mF,pXOTB*NF1mJr_YsD*li'SEUi5(O(1S
%FoKt:j'KQNlKZpWlHf@a_1$=Zoa?:3mMG56]!p;`eHoHXE;/SN@BX(RUOIcR:LEkqlIM_SGGVZITB,7#o]E&X?[^Y9U$1:#n+0mu
%].Z*[J`]I@[V@RE^YAcKreq/uI%h]?Qg(Yfi)8qKhZ!,QI_ka$#.H'fHX#&]Qp9hUc@9m5[(d]=M'H[IaO;VG]hks*Xm,MjJ%&VU
%.El$]fV<6Gnp4#hZ+3$<=^J;rL,:gQ!Vtj3:/t(cbTZq$2Hs-b$!>OQ[I>eO=g+eRhOl$)F4nelYg<_u2Vj"%m+-^P$N9fHH%F4K
%SMpB;WMXVUjkSWS)GlC7qpbne(ZPhgC[,Aq.:Vqb^8@jCOB!Aq?sf+HbjkgF%.%bel4ZXjE<Z(/Z$VKeYcfG=*,f6BB^5$:JUL7u
%8^iD80sE<=*)'==N=(UhYcfLUYE@Ir(>.4a>rrkAnHJVD7J1pVmaqU<%*'2Qof:X\nHJVD7J-tXc+!iPRT<Ok]>kiBf>G6^m_HQ6
%5$?F_(^'Z(ekiq]N@D*8.B7:d"*L$I^8@bSrYi)M_1@#ONQ!+Hp=5YL`ZNs2ok,%qS[9/`I7$]^."Qe@;16H;2pT4QVPq4cjoU.0
%"SO]1ck*H;C1*[$(h[[L)6n5X^qM/0HK),S7^\?\qjO8UC@44E#jc>1-#`;j>@='CY`7p`.=:cYOd>N%I15q<%I@jKdR66Ns%n8p
%@A!D;L_G2gA4%6>_05_%]s]r!#)Q4O#*n^p(D2Bnqf)O]d'8p10W9k9&!g_\<W(S&MATI7YANda`Vb^acg>;AC@e/a\'^9?W)%]N
%0Jm7k4unIm9``#;nYY-MHFk0p>>Nd7Y+VA`X\ZEP]4VQ(-U'KfQ)7:J1DH6Xiqqmr-$q[YrMoGjh7cU#e7QT4s6E%GmuK(#q=4Ed
%8\;@]A)H9qmBmoY('!mgVI0;:etH!TMZ4.M%t3-jIhT4H#0li@L==U/'`VrHVR5r4)63J(]06&Bs/VW]"rI;TS_NSaK99/Zl,nqZ
%>4'&7[%$*.(;W`%#AO6/rp.BKmf.Gte+dh,NZ?O"e%K`<mr"0M]3JUi6nPM4g;m.%&";9?\o,hpEs(UF5pnX2;X<F`M$[o3K[VQL
%8aj$e2sO778-Rc*X1+A1kjFYp0)=XmJSG9,d"cVKU=NND5.>U@U=S$XOn\TaB.>m45g3Y0E;H,+DeS2s?Z*j<JUL(%bD(=iBFS$1
%EZB3]-Ys76Yt"USYPVbtm7HfWdMnp[#/8EQ,)-JMU&MJDCpa<`4hUsl>0`uZ2B19UU$.r9l^%G\(O5c:"^N9R@gJ$mVfcn"rQmT_
%Jm-pr+-83NEC]lm8IL1BTZW"L\Xs]j&@63Z`C0_u95&"g!lJ\_@N9(jFH*t_*56BK+5B\;*f$`E<u4!oT_+)8(cm=ZhJRo64MDf]
%H*#QpX!rj[$WLnKpWn;cpN[`Oh*5E>k["%'R.JtBmb]_"q?V6DC9hJrl+]k3UTV1X'-e2&*(&ZQ`N$PuIsi$&6e)((cm=d"B1*ig
%>!6i"8):q2mQ<(rI:)YkSSCmJhZ"XNq5Ng>C2I5'^@-PqPs)Wf6+YY?jni]r&b#L6$pjL78nSPR?/3d,+j4R)#<"E%I-!n3Qe0NZ
%U[N=?_7lM&_aiT;cRa1/a5r_8`,q43@&rnoHDj*/B!kn]RJ*m5S(Tiab,J?SUqOsJ%:ub1;g$>\pS>4AiJuLC*7$g[c>_3,>,8oK
%-[WRF)b\^7OQt:tc^S!cB"5A*f>@hk9lSU+Dl0c_ocqLm%EU=/*lMK[gutngFuHlHhY?)Jht4;NGWr6Xh!LTiZYK0aWhZtA'Z5"r
%"NM4#]?sdHB`R__$A7AV]3IFDDMtY]Fh@6a\&M5Qe#82/'"\=.VJ.)&:PdZ8S_JL\5N7[qV>IGSY9)ML^:?$!I.-dnkBTLGh0l$X
%$t$d,5"okL\[&1f,$"pRP@jh,KEOJBGp^9E7-:%IIJN#^e80i8l'=9b]r=H_9o.H#hB@G_Im,O+4hhnP7ruA<&Co=qin<[R5f=,l
%`npG"J%W)c/+*;c]3!n(W-qZQ"L^/C]e>q[]h6bup5+oYP4t!\424Wt5Ejs[BeAOhG%TjlcQ4f]Z[L$dmFS*E[54nRj9N/co_>Gt
%H7aKNq70R;hPWPE]fW@5F&T:Bp[mb**a^LCJl'ei=.e$WC4&%s2Lb/$pK+i4?>PBi4,mS`gg;BRoZu=[V:p!&d^gMp2kh'^7\Ak0
%f31:l8R"Blf^]h+%K&q$pOdGYSqbF1UQ9dK':ZCOd%ks3B1$agAm=`JM&'[YDYK3ql;FK9`#fkR?unlZXknK[BQTc6&;b#Q``J]A
%n%[_3Zg#m?[r^>>%+W3phq$b,^f3H=i8?N@5!6!%j&YL8\,jmJD0D1]8m9IDGn:Jn!,Um%jog`/h<K"_)no,G)8lLbis+)<:X.&D
%bFG'N5!EAO4&#l:C8>Y2rLLK\FD[#=S$jLn21D`_h/P]->>JGiRG50Y^c./R>\oj>jBfc:$u5$f>@%TF]KU22Uj%7ZBj9W%It-6_
%NH@]P0,6hMX$q2;D(H_^2j]eE)E7;#9@:;0.n\Vq4(0W9N@!!Fp,FA_rU&Qda?=ACM#HYWIgr5.f\^SN&Ib-^.9+&m^Ul6gr$]nV
%$K=_!g!R<9pJ'*p30QcBQT0enCL#gf#FNE@"/G>>7T3;c,':(a.Ycf"G5]k&[UI^=DY4JPBG$IGW)RJ3InYnP[PTg8C,=86it;S5
%!7OY:Lb_'j>3fN"H=4c?I#om_l`LA=fjT'Y4\'7(:c-QrP;^2X3om(GY^d3@bh_W6mn)i&@dY]8%TR1=hD^c,8Sf?,(`q"s6P@!m
%d2\2aZKaf4,keKP\(!dS$;#%QO6D86U"^EacsX2\<U5ab[df1Ih"86oRdYr=$Oo#NT'\lXgVtJHOehl-,dr\&*+ZqP+-O.6]@/pG
%HEffs#oSCYr!UIN#B/f,_.2ki'i#00Qnb1AKne78qj33Uesp1KX^ZuI,jB:b.i_/uGPP^%'D60\s%]i9n65_@MA8$*:i3+&p#2s^
%4"[aA%9N%<aK/F//U/\C<Hkjg-I7oL'g1jO,3^NJW!*_/%W5ke5#D!oPgud6_8F)lXi=9.Y^a'uM':kA7gR#24"=UKi*d9Xn#II$
%)o5&K&&n/u<'-V[9L.;#5*<N8:dZ$]lsK.!@c[BWVVpEh]$@_f&,QS3lHbE_i*lX>JX4TcK*ra/NqXNqi*gRU\fu<d2tSC'*r7"r
%VOObBT/KBZ_u?^i.,S:,i*e97.UDGGNK'T2_8H9(?Yd.:5m7dSW)GZr7"3HsLD(,:CR6MqfY<[UO06Y@4D\cO;tBoWY9=5o[NM.$
%.!XB/3lWT:7k],>hb-6J)mjeQJqmX<),r]a^G`sY1T95?s([<HBl-BWmh]j:qM@MsET;m7[C>>O68"_-*=bjKH5&L.cPgn^;3rkZ
%f[.dX^b%6f_8H8SoF3)aVVkn_C5;a=Ku8UL*;-@UW+js&$6JoEG%g!,OUE3?)]grHphs=&YVf,o<:Fip<kW@d_cCme7k],>^Y3+C
%&U-LV_]e=[?FJd#fLe;4@?83ki<p\b.GokQ!n=7.@=PPO5;S=OL]+7o%MEd9L[+W9FuUWP4c`S3E4C!gQS*Mb$]_<V`$R)SMq_8$
%n?T=/6P_fNdn5#Lc,^r3[btR)4h,L]YmrH4(HcN!-%>K<L],b2+gDoYi*fP$Rhs)5Y-gn;4R=`W)b9#;$Qf#.m^nMBAIBP;9j1bV
%b9736[Zs!G/9ogm7<.C?LKtm0;!lVZB#K:VDK-Vr*=<%=d0^rg&(:,Og^so8p:'h<8K4Ye@G%ir54e?89s*>^J'5dKJ<WO*$Qf#F
%FuZ1:%?4]`d.XG!8CptrLX5=me8SL%m<McH+/m45g14g/F8&m?G"BW!gHr$Ws$V&?abDdtg9/lQi`0</DZ:=PfW]DY>;N[&m;qI?
%cV:e=pdhr\IM<'h]B<g>an`Cp\n:A+c+eT^*A+u(;<UL]eMT5_nBS^B1ikF[FR\^"QC`N:&(fZ"5<i+C?d-bG*m`\Fs1KK@I!rAF
%p%P)$2>)Fu0VuNJY>1ECs(ktjq"XTir:c72mu"cA*L%)D?[!Q5cDL0g]@lB?B0T_(*'SkN?@CQiHBeGY3HOieoW,CQD"F8LHdA@?
%riuCmf'Ce[Q'minT8MOXc;m`jUT%=U<c1U/1O%BW^YdkZ2uDdmeT]^2qkI_/?Oes,o4%1abGieba470MlgL23\'c4rdJ!Ehok=6k
%KDX&%FoC"Hg#m,4m(@_"F)ug'U\]#&IsLe,`?jrshd0K6eOatc.lICrT;AmcpSXt*=']Z$+:%G>2rF%PWn%ZOrW:2hrl_JSb&..R
%*+,1>>M[!M1g`?i1uO;XB4pK$<8Xs0S(YPro]5;\[sN=r:X5912V4/Zl^t4B&#TmLhKn(6X%rUrpm"!o6eoQmNf]c7gYU\s(/5kk
%')(BCjQ:sBNY)`gabEm;>!97,4[fBJ,&p>@EC]E?5#LSCMsY?Lq"[st[Jsu?V%:#,=*(EWDn^OGOjcOQ8*P;e^#FO=;`F13JEskQ
%I^#63(S;bgf.Zi:\mPHF?dQb]BB&_/"emR*HsF@q4*AOf>WY.*4^WR*lIDg.Xd?58n.uQ4aj1HKMANW8i(j:6b\EfFV2H493deNc
%'RD4sgou:I1TZ#%#qA^6T>_cT-5.-*pP]#rH\)2g(YlVYqWC>g^:(_^]p1]2WR78MIWOHdUp]TXSU:+jKcAo5frdN+jkn8me]#9"
%@:&r;4+H1;=Hl$t/<8Kr9=<+DgA'r^MoA>5f7,$biR+16?Hdf%%mO6Z5CC]ch%(MY!ZCH#Y=:u0S;qe/[o<2?)[^lb7=lDN=k^Wh
%2SSW5`R,=c*COBiQoTP7Dp]V\5BDQK4k]5l,OC4^s*PS.+3qX>':b$\&BJYCDS!,D)]52BAu@_s]RnPZRsVdXoU1^6VYTMH`uY.Q
%\mD8qc(g?+IrB^5gQ0s9Q<-^&Q=*67'G<@$>H;-,^6n>XB1m*2Chh;]Ck=!@7(u7ciqDr_g5G8U5Atp"*rK3r><@+abFqPZhp$T)
%r\XN?5r*fVqR^$q^!uLhih:k(o?_bMJ(\+HVdQ-?E9EUmBDMTnB/6Ofg;!3!OoM/4Im0e1>(<%0i;.__I/%dK*rhL#=2u-,^t0Qe
%/Fr&cchr#RI-m320eH^WK7BZ9f4OY^qpQLnc!pV':L&+Xckg#ifH7h>p7T(Ch.XNu.ke?io(T\*Y#E#>gg&RJFaa)Oac.+k\$iSl
%\jD8B^4'gM?2^D]JS?:\]d7m``OdF<&USDT8);R-]DM1<(-TG-RPIA!f_cNZaEL.f4l6"Fq=h;g^"$=;YHtVAY9UUundd`$L8Qi?
%9@N4aY?g$Hq!kue@[,gO2PeWb-</jTqnL='GP9#K/%6!aMCWo%ce#>Tq5VRfX)kU#YH/`AI",^=AI"7<='!eH='&GPUUsUYerFY,
%dJV/0im,e!X.LIt^2dlT*-(Ju[%#/&>"POSfBkN.qee:SN:96RhE8+DHVmE=9LlE,:IH5b])ePUh_8I^jke96+s`5Crnr:SJ)6]=
%2#Y(l3q\'u2gFNiN\KYP\+KXl7E7D9I:&YZ%ua@HI<4_''5pXDi6_XTm+d*[_[H<75ns/j1$ePl#=FR?gn*[Mld7hfqr.85&+HeD
%9ig]s06]<<s&_@IqtA<Q']i[CX>EaTE*HZkCD(DQLbSl'CR.a@1:aZ_@Ar&HTD.tVE8gh0rTBH0D%P9#'3=#ccH7pSgS]*EQpokG
%L;R9*`sE`j^!m3QEjkPH=T7gN@C<P='InLf>$q=-kisDlkOS;pc/m3N7go("?EG;4>Q&n%^.uEicaTsU3Q.l`CAQWB`eXFmGAdEU
%9!W7\4*sO-n(caQ9l8?"/90Ns%W;Q@mt4Edo^qG>f'i@Vl,Mk`[CqQ\n$dJ3I#h?YY:Zm(B/]3!Im;iIr#)]-;ikjFVfn\<J;8P`
%Z7?3(XR0)mSo;l'J,=)"n)Z&&PheI%c@2iXs"j>Mpq?98GAD^.7VD&SiK\?*$.<J/5FOOFG5>VLp!oDA7+1eXHDg;b?R;24cE11&
%T.W=GX#KMIGim%/E59D_hYD5@W[:p6`$rXbbYOVu+!qT=p*W_>?/ISBQZo(LS0*/ds"Q>$FLY,Mgq7^A>;bKVhZ)%`+&$Uehn4=1
%p5cVpc1H4<=iY3-M,/pQa7h3ok*Ot>(H4D.cMEMs3&[T(kfN4;OA;"lA*a*eD^SB;KKnAZ`qSldB<*\(]LH6#e^L(q2qsr?G-7u2
%rd&@Hjrp5Nr;5aS1Hq&d;]fmn7YfSj2X,H=5Ad[\9bVCJO%[d/T(':okLZ*):,WV(Y;?]Zo`@L>rXqT=G3ejQqH(*EIAU`Nl.Xh?
%VSBg$<e!68Ff-fc]le,\iYH^kTDcC66rorKXtF"]4BU@[Vp:*]DE_Fb8p479Xn#k.lg3[&7hR1FmbId:o(@?UjB].(FT1SFO"c[C
%RV+rcJ[$6m?<bdD<sPgZ])$2PA,XH-PP:Q;il:dj`:ic?B(uDUB:;BIANnpg_"=&KQta22R[2*T:NKa,rj3\'I:gjAM6JS'/=&Mi
%Na:E.GOMo^;OkHHhWR"U]@htSegFup^bK.L[Ai>[p+NX*"*[r'koOTToU-J)m]kU%O.'(KQWiXNo/6A>)i]bcI@<B5`3_nClI:dp
%JH2XGAfn^gVWJCMX8($;e3^J>8H3aSDEXCkI)#?%C2rLX/sNsYk_DS\[o3YF?U(/dQsJgO(8_kj`K*s(hgaLN>!.*,*j8(YIRQna
%;P6"'c8iG/1Obb!B+Ie2ZWYcuMe8m1-p$7=KE(f.-`\>t2tQt=g>:)(AiB+k;tjupB!.5_]\RRb_;B\^QG-Wd3?t-SI8qA3Y>7r5
%=h!,:?QQ>`HuSs(Xi'#Fen=[N>:UcTp=lW2^H,eecLi/uEq!d\p#c-iT/JdW5+c]iIJ`(ul`W@X_W_4n?n#;6<NPDq4FqEt\'\jB
%Y`p_@]'"a!JJrFOa)nGkk9l"o<[V\iUbQpf22VY9bm7!3gDes?CW"NRImIJ7ReumOQP84f0"L-I0l"e_YCF=5/Z3=:=DjPfijq6i
%^TX7)=nhWZRDUu33@8k#iAVQ2T-_!;k\bZ-6W_OYCjTpUe)>`Q1R_MBrTb29%Job^Q(,9Y*`(%0rk"\(Gkl?;n!d+.l."_klHR(b
%hgcD+Orf2Pp699,Zr\c6a!0"+qm?%[C-h[)p-3Ko=?ZJnoU3Gnm*-)CmHMLfnbXZCm4S5!Scbk91lRiYc-,@r0e.(Fdfp=&<;su>
%rP9e'g=+<]YQ)0@k5#J1_ni753@is#_d9mk+#:O'gRkfFmQ&!E7m,c_p)J800^%ec?_u)-6<H_3BgWJu2MZ)SRauZ39o$s\Zk5i&
%RmUfDi!,f0pdVpoh5s),^(D=MSLE0;[Jo=9g;:%,Fm\,OU[?<kq4)0Q_WgWNc*uFD+4bVbk=;S&n,9i.FnXe;j-qRhbB!4>iLd6s
%Q+=#=HZ,a*F%Ks%5T@Oa<&g3*(o'R\hmO-hiO7Im#hG#k&nf638Is-U:Zuo3U[X^hKH,>V`il`Y^<cY_ECdS;2h#+^>0(TBZLRb)
%)+K%"\PLiMC#b@5rdE%.PC1u`:Q$m,:Rdc$f7DrJ1&h!e$Smf^`[K$K2i]LK^(h`MC*t$,B90t0Hf"Phjko2RZ<)P6kH\oO",>Y"
%oGP(-D!q8UhMZkI[SgK'?e_3Mkca*M[d)U:@WQ$kj87?<fs[C*4(^*7/$DIJ7U:JYgH=E;?>Dn<=;rO1R-/C9=0F6WZ0OJZ5+^e:
%jSf84db5NR\c73E1ZMX!rW>%cimARQrsB:3*?=#Tl^]qg7;g/DNP*@2#7Tdk@2@NE`%G*Qq`<uPO8sNV$dQaO;&bp52OMDWQ[JBp
%2&Ek(kB5ljh7\q1G:@e'bhml`F_Jb.KBr)4/0<VnnB1?Uai<2(bg.eL=+@88%rDE@"W=Y0o\#ii:O\4krVG:0^)-r^;n(X(4(Hj"
%TQ1W?p_tZW?-c<U6hLQ!l+M;TNT[k^'CJ9;_S19K:N--ZNF_a-]g,!'9RQTpf*K7JXMOU[cPc)iQ$G>"CN!)^Rg6-'*Hk`0(c[k%
%Ei"ZU<aX,='@T.[9g<_2G51.*]7pn&?S'EgK6m.a)+P-L.kVVpZA85;cPMYheLUFR9j#q[`imYQWRI[qmA>BAroTcdd:^0e5C62C
%@s/Xh".eis%m+KTVXW+b4e(.#]BaWUEs8W0Wpbu'JmX[>3shseR"T7aVESe/!7+$@jQ?P,qB>D=EucAd&"Db.?1c'^3=12l4a*#c
%/#]j`o`G*T+^KLW1LoQUJ)tZhWg:uuJ_"2!P07;^_;(X,o<8kb5<#KJIJ/5]LResH/-!7qYo.YP2KMGcV8_I:Afd+"Z(-T%`t*N6
%L)ZT,l(080T*FD^\f*7aXfDo9.0m</e:=]gj;OBsL!\P__1bP!PL9D4q"r(=Z%(m'r$VZ0gX8",F?KH/_5Xes)2Mo1>oQ1a3hm*/
%SZ[Dm)&aCZX,n@ghhKmW_s^=E%R-DFg[d2`Hq*PKmKW#Hd(^%#4YP=l:".nkP\md5OVt\gHSg9#"T>:.iO<Ig'j4]=EFKlS]2ihM
%Hdb^CV7+rKgV(^5TLTrMHhNlPIWo0b3hr7jk?hK!]T_j4=hb-8mCdYoh_uYBcaDPBIHG.M7L4d@gt=kQXmL"sofK;=0&`APY9-Jl
%E2\?;G1rbsiceRU!n:k\c1]k*XZOquP+K7iq>R@-,<>c@[P9]T'f>[0lZsLfHX<uk2(C"-l*cd1-hh5bD:*JtcaDDsI>QV3#a[@U
%AOlb?JMGt`W/!,]hQPd&480Kt\Xf^Ra0Q-n!J@m+*Q_u;2PNI5<RK(WQmWJ6\GaOgC-FYcED=c/`=$%fhI5`1#seE.70b.(5e1R*
%KA2S%jI_hpJ,OGAa@jH;iI`<aMZ:4L"#b45dJS&E>LK_RrF5SS,KQUUr*JI%QT1Xt/VQ50.1C(aA%6T,?Mkp4g[8l/qB(=IVL(u8
%LNNCTf/<)da0GO/UJVNV]fkO5q<>L1$fVE]B`pQG@@/8Po6t#$5(,Ejk7;Lp]?arFGtEZNq%0JX?g"*hI;5L`%]5.qZ\Ahu3U2#U
%5$5H,WUB!`CFJ1pQ$ZW?Vm1O-l&/LK*`#YJp"!+Q*(;U<CF6-)0uH'=M*Tg+G%L?D1D2lUs4R3/\+\n@n(l4npSOO/Mk6dX8D_/P
%C1[kK,Y.1Bm*>=,i>_&sjlu2Mf*^#Nq8JQ^UUqW)Q=&78s-`l#p%IlHKJCD/4uE*)kMrQONW#6u]tB\g@;`4^0$sBYhM958dg_hS
%=%a2bIiA9<)ZTA:(4X:]0(9Ur.\>Y'eGYZs2R[KE/,JF5e)[D/NZ!;XAD_eS\\Gr8MB71@5.YFZ\#K:6o>e3u'L2T=>mREm:(':Y
%?e\b_Aj<HTN*]9*Mti7W1WL0;nqA-Js,Y8\B/7E]aZjnF=4?KAO"mg[kW`ul6&>OP]>#!Sgr$<5YfoZA6'%UTIt%3*@roASh;7"7
%pp)aKki+R_NkR%pN]0\1Dr(8KON=ml4[e0]:!I_NM:A%;9:.'l3r;?\N[IMaf;;oNk58>u1ab97:nL;'0nsEA^NV%(;Fsi2dO6^q
%b</dq9W<&Ql.M]$7q[n/^46*11:]+/f?K/eQIbKCnV`UKe*XK:UV3H&k@4&Ti6Ur@ai3?3jO2cRNI1EBI.QR[o^HPBBM^nih6CWS
%DY/`?+%`,5e<FJ7n*9>%SZC(Smr/1G]t%)9rL6N*DSu2Zc8@:mh9n3eKl>k`_99#<2?.=b3@n[0;iB&@KXYGiZ5946IB/CchHKii
%I9O9UUI0;R594Sp"*!GsQaMNSO7'28W6Xjr41AO=[SPdm0=T6`^Pt//DSOlZ^:e^eJ2]l`:o.MY[EE:tjO51tU:MC@:&fTcA``=:
%lW7,9Sit#A2N@+QL2KZaWc9d026I"9jkjGsC0ZJ?UQ1nMW,WR71Lk&KC0ZI$!63;de@5jf8fn:J@2!$eKW,f:.?`XmN4r"E0cMgF
%JSP,+b_BGn=%iQKZ_9VT2ZB&2%;iSD3W>A5%6^-jfbg*9ek$$]7Z<p1"cE-O]o2\1g=h%`(4X!nTZj&-Zgfg*45"kNhMS)]r&EDY
%Ptp/JH+2L*nL]')/l1>1r/I7J4S\L6Ytb)T&e#XVj:+IO:!Sl(]<k@/%EJ):LShR$UT978pFB%B4!K!rX3#`YhU1%`c7_lkbd7G-
%fVqmKF*TsHZ/*g5VVU.ul&D$3S"1&P.75t]%OW<SmsaUGRHDdm=)AtE4*;nX3W&.9LBfWZLrBbLa_-sOB?p!,)qTP,/U1onR1a0G
%TD`Ajat/S0!Y7=I5L?TnB_25*e#6Je,:[)'SD/+.KTG8@qe0G/!s,fU["sTYBCXebb?0TkqKNoZlc:@7+kl3#:KLjr&\WUu3nG^X
%Phc3m"0"/$HB(/0^8AmJeXk>\NEt4>]AcMB0>#Glanb9k&F+[liVQZXNVSRuPq?E9SZ1JA2,!5".sG%^>"e/F>g3t0IV!m'>%$TP
%NiqG9[5M@+I^8+ipc]@ef-5)SbH:NTf)(qpl1LP7@U_nf(U-LmCF!EJcY7$82#Q>1'.Dc8F%``$?.;#&0;fdHL4L:]8B,adEfJmM
%]^ZK_Z4Af;VHqXGPPu=kTg\3X`-en115bU^eQARq39S7+]K8d$fL]JgZCQZ.[tjGgZh)OH%-@S9Ba.[[kGH3DXDIeuPnm%ST&,uS
%rHX1(B_Skj[9!Ye[BS^M=gVK"`YgLnYX*=4fE1#dlJ'<p;]@;,&8(Ug\P'Bi)OTu=/?FL#^lr2IOC,:,RcQ5KP=HH\VuQS4()T#m
%V,9;d[;uuEgIBtm!W#L)2AToZT(="YHpR3O4)($s@gp:f@A-11D-(76lmqp+cSgB+eD'2o=:t#r_,R)qqQVa>elmlE%8:a5j`#(T
%/S;>45jCP.$]/^f?1mCIr6!h#)o6SgF8i`7PP!uNoA'%Z&jA83DQ!.Hf2?Ac,^*A)NPuKjb`^U)oU/@CrMAIrM8!onD+(-/UeZHq
%:)dXbambk"n$Jp5n?L`iDElpDf57&6ajZo6UlbZA8S^C*ahf>c+YN"ie?,!XH>\Z!P4#e'8K3tnVt6@kUm!hKC.j(Z3%'i2oph5m
%9!S9=ZgZXq/'Dk?c:AY'5&EeQg=b-YHN,)\W:]@7/a'CI>C,&<RaL,L(F-CQ0&JG,SB",I7LFSB@kmedF1>Tk6#(]B_tc7:-e`!C
%Kg`a-g2[amiW<2"E)e$HZh^5"cAluj8=!u]eOBG_&*HGD__,^Qi6SGu%j+l$Ea.5IRcl;OfXU'!gcgf;DAQWt0#Oe'SgRbQh64<f
%G/$K*V8_\Ghcs>iX`]WlmTsntHQUB%]d/Os7FrcXqu[ZVYrZ@!g8ZhJ79[73UNTS?jfoW"I9'jQX*CqpEs%@"d5nHS>dR-TF%Q8j
%1!(/+*\V5:P:r#.pj8Hk(GW[8;S#&;QS(FKrWABnDdM'`FiN&m]3^WsfmZD&5kPFd"5gS5R?Q0$Q0?B4>#?qK2L7:7eDA,NfD7ED
%Gbi[B0:u;,h<i`37sga"%W>.rXLkZGVisfM3qha7X'R[UAj6qhFG3Wjb@@)"f9iDK]N?rCqCf%Ipri*==o.GiCiiN]4skKRHO6h+
%Qi5G5FdR.NXA\0QrUGi9>i`a4oZu,^k4Khb,5]t^Y@[NmgfW7C@rpiTVW*Al;s>[#.erVQhq.d>IN5C],VSlkWFmitGhm@H4lH:U
%T=O_6`HU?BfGXEnqq%Ofrd/%5pr,I#=*O4nQeQSfGA\0L(U#sVrqu7hV6cLps)_R8p[?DjcuHp?B/FThh<r1Es(DZ;#AXRj@2jpC
%(O",#>:53Sk"5&"Jt=&ir;"<mjIb"a^4&<"h>cr=Z\cHV8c=,Nr?)#C<0M<":*t6]s2]cZI[TtHL7b&rB.%mH[=2:_41j/CIW4iU
%oOS!g^F,?cHi7pX`P'O<j[oFC-[PXOj:(]1qF$Cn:U=kTr=i$[4ZhBt3B=EqG&cutJE[!1M8,e,2>lY1Infk6L];id\b6EPA,8tK
%b+^ki??W'=W6/BC6%;p<*`Zdh+0YFdJ0#mlrSRD%IJW7O_Z"=+N[>iC^AAI9*_t(CcR/W`M_aOqW_=`U<M"@(1ef=]@)a*:"M-,1
%36cJ\OPZ6soRMQPrpDeA"+cke-i[u^kBEB5V<8Y-hbUu7UjcZWIWfgPZ%)?;kL&kk`p)0udFmB+s.[7A1Y62Cq),*6:-7V%m'V*m
%SQraMEmaR,]p%n$htMUarNguu[XW=+*fbP(aZXmWJ,&ugq=8QBSfZ\YB;^5S%dAbQn*RiP[f2/STBK0kV1)XPT:Rt5m-!WLO8o'*
%IUo$CU8ZZdG)j:drH<2&)/A(+n@eO:'ttKnh+_el/DV6DB;jpOL3bnke?[feV5i^!^&!2&n]fK8rTinGs)mu3gHHO#Z@B<4Hu?\>
%]NXWPG\LgjjRD?[fq\N+UE0l"oTCW`g`Il4^R.:K721=FPsnk*qVNJHMS'"aN)E+*L41RO;Lij97@BtpVFd&lYpPZ+)FYZH-AjF,
%2""m74`DCVEE,iqE=B^L,ZW\mij@tW-ZRRk2=X>&U?LZX<:iMp-AmJTIF8LGSZ=X'"-/:7''7r?CPHCF%J-8Bp=p$=o)tD5-Zk+j
%8_g"(E]mo(eu99e$k?%\PjY=m/+oghX=+-$W]FicIi[Hi!Rl7V\=+++@T)]jppc%QAX_L)8TOW7P]s.%b(KBj-9pm+hb2Rq(esb?
%%sVjKaj"d2@auok.+Ro%B:V$,$NUnVGN-9P]#JH^Uh`'-K$FZ^UQ*)c\e]!n<CT3qO'@S#:6J@<)^BSaaj!iQ>831s[YK8iI>_Po
%>pDQ>p.V80.*]_OnfC"*i$>#F>*YN4Lfr6LkZ%;2l)RZTbGO7.;kt>73cr"LFXtXKiM.l)_lTYtR+BhB8b9HeBSqC3M.;D%;X"ZZ
%-)N<@4)%GQiLNjnAN[N>Dpu-D1B$SqbOD=%=&^1-+-kFS_r"L[4gt>e3qmV8Rh%r->_H5-8Q8mWO#o=o*2tD]msDiDPAl`9iOfh(
%H3cn]Z6[hu=t)X8.O!qL+F<UY:)+S]F#5,,fb)_+RIfL=:6?ohfhGUeq@C*98e'6Mb4MH?V@;Q;W09*[O5@_30PN\.DE@1DE:a3T
%UX*UM=d0)bapOU&4KX[:p6f'4s!7H>B8U@>D:hG:U(OZHHD"E2REadMYcHT8V+ufhZBLVp(EKBnM_#CIE^iI1MDW!ImGKTtFA<7\
%/SJ#G0CB<iluA9O!o>f=.eo)pZq>%d(.qaj6ZH(qJe1oRSWkc<Mt$pMWL[DdW9PY=im/uqLK%i?3c.'DA9N\I*7J8+)OVJ;(1OYI
%B.-?]e[.]u34K5d>0%m?C,Z?VVrG&H+"WYdJ`nj`6VJ+^&(C&"kaoY8W69H`#046#M1Q\!IP-JOR[Z<5oE(=HA<[]TpGU.;rf##M
%f+9Z$]Yi`()J/%n<(,0p.M]1ZX5'kX5@cTPV'BU747s)/3rT1kS-6jLM8.R$bj=EV=+V=EF:r@(W?MBg7fQD;fcl#RW/U]u#"Z^@
%aC8=rQ/\^/IOXIk0=E2fc$b_n8aV\^C#J,58oB?[PVsN44+pO$"M:`Ws."=m1l^NVS.q9h'.4@3H(s7W,.buT0nALjjB[^J6aq9Y
%9'8T[BHo"?O"-T)4Y"$N1YmHelS$_HOB0#210OnAB.]Wg&kHuX7g>>(8^nMq/NL%ug<t0b*K`bY%%sWY4W?MOC!K5U8>iR@ji9<K
%8$L`ea6,huofNBD[")k#<OC0GLbdLPc$l^LeGsrZ'B+pcf-(UMYefnib]3)^AJ.,)kg!7W`tC+e,3lk[j<9gC>r&oe7$EW^\8P%2
%OV8\-\KLoW7Q\!*4.meWO"20eNg8S;o!m'=bb;Gh8M^pCom=Kli=>=Jk?u'd6le,CZ2DMEl#rY1M.A-`DgS`eRo)$\X;2D>fN\je
%NYHVnGV%Ycf)Y?)Oc$@Or^/X^+H*O$(=T=_/DV#$dL7Ik;)^&+K]F>'fWhBL76er_$#*jGo9+o,,rmfR2S/+P,$2TMWtKKUGbIE2
%5p$8H71nFQha$ni_+#q/V,]";;oJDCEtL5VY[EANfQYcO-jJ-XCjAbN?_q!pG>BS=W^%-:$b?Fsm1!+6@mS]LCmWe`k_']ND(4$I
%Z).V-Wpn-Im7uE/JE3Ukm!Iu$oV:XhGLMjTi;%B=H9((HJ:lm`^^`/EecWpBU9q.Dg<%V)'3-;aEK[QI831WY.(YQa/;IGb%VR5e
%gI6!#n:k+=_N-"=,`0pJcKUAN_sUq^IOQJ+AYB:(AsiFXJetK*1m3Hn&&N"&;BqP"$kYm/N`d`^nGj^.(/Yf/$MK1!D/-:'Y^$tG
%/S,tJH'JjB%m[or:V2so``K2tFVbTpXrqf+2-@:Wm(6[IHGHn5Lp,6SQtW9#9LC5WX:(kMj;V="FD4/n%H\pipfUShl(a^mb3^?,
%O-9-/jN);r0sq.C87NR7jrT2IMW`=%i4@Ac0jUUk#W;K_iOI=&Ls/il7SDr-!lM-j00)^MMWUaobM^dD0\eL.3H7s-`9_4#5'\uP
%^*IhFA2>2VNGkU/9IDXBoD0Z`h6>Xo-QWXW9_T]Y[,UDDetZ&F7OSriHVskXL5@C=6B?"D`b:@qhn&PuJ(`c34e-dH6*t#:7tP3N
%CSFtZOsBgfVj]uK]<j-]dMBbLZ,CED66].`R,ruB2T09@0i7hSK8C9XMJbnH^`k/c&FWfA=b)',<TZX;0X_N!hRT3gXb+AiMj_+D
%f2JS"Y`uF9k+GC@.1?u"n5qeq]:Ue:eht36noS-4qOgA=-db1nDS6#lCQ9;>V%kQt:JmWmqP6D!":.$jJT-BXes"N'8b4(WeOg]_
%b//.KWD44!Ai;a[EM(?8HE#4B"@G4[+dN[t!fb-L)3BQsQKRoi$J("/%G/9P_[@(apH")T]9e3#=S&n["Xu.sKk=>dMLm)e&kYc;
%X#Lh_;*\mDr01#Td)IA$4g-2dMP;5e4=X6MZY7TN;1e;u;B*HIY%S1XTg#4oc:tkB@ds_PcWRU`F;,c+F;/CR$Wp_*;3Z/8o1[::
%"`]0/YQ59YJ<Eff*`,I2iQUO7,UU#@!BV;*>-+bb)qIP8Ij>^HNJc4_'ID82WRMqr<=DTA8d\lRXmqWJMP:1DO\"<IY(<oGX-TlN
%!iod06LI3H4_eHL9%H'nL<WG,d^eB>``8/?HLI*"ATsS+m._36^7d_k.9P"Ie++JA?Q*D=^jr11_8djfEGpA[bGPL)d(?:_*1O:3
%@A73\1!8o6`DlF7gmKWor+qaQNUVIa`26Y5J7)\V\j2.QY2c/iUILt=mn2Z[>mI\(6rKbZ;I+8'oS[fuUun*tTs7JKhBJT[mb_o1
%"=;lHX=^bn%3@f)oMFk3S@51<q:-miBd=!*o`-0k?RGX9#T,%d9(CZ=77c32Q;5S`>>2e<dIcO#n7YS[2(d:M8WO$^(U35'CJbM<
%CZP=7cnDbC=R6E;BH@ZHQq4j;(8b\'>j^sflRP:gB;X+g&5A56'qGMSSW[YcSllQ*b!=7.f-?\22qF3;;jtKoR#Y[Bl!"oTPbkdj
%l!"a,Z<@a=O=sVqLk\a^'4OasGVjI'5iRPCV#j?==:&VJjNrCfHn1Hd;@C2[PuUuIcp^J'UGO+JA4"a5,Nc7tqEhW"Pb!ucYi=Zf
%iCS1IGZ!Z?@WUhi<J"e>Ml[?U*9,A%lRucD@%LT7%Eo)XP_9lJCdg:6hRO-9SPrKM+,SP<q/u/_+uRZ>,e@?I=e0U^X%J<IU9P'l
%Q+;,jk>:+E:UEY<3/=dB\#[&0_)VKRS&fRZAa,GXNZBNV>tD)O^i9j+ea\n:4BZE*f^TCcc!?W;",c+X4<1LIR*N2KC`E.C9(IX?
%)Ib?<edrXne-8bH("i=SZ4.G1>M?uTD*W_VT`&V-*m$7'<@mc;Q>%JPN&IlH0(@(tc;(=+#%18Ae<kuR#%K4TP%aod7TseAR>/"F
%f(eMoeCC<@VP/mLDF/6P.LqCu'r[pjP1\Xp;!MlpL:Q?`'sO?6'fBPC1(4[[h]V/>dL6Bc'JYnXrJ/?%\3$[b=oM9SR^&PrWlStC
%Tk!qA%mq=2nL1dE`a"pFrIVt\etj%W?["1^CmFLVP"8,I]]7d@b)KQC@.45oB,-\,^KG:]J2!^5Z*oHhZorGV<%RAs`3Td3OYJId
%h\535nY%/8#;oT0n=`?QojKQ1Vnr`Rr_Zk;dZ@jC2@64-f_)id,[*gY:\WZpUPqSf1$GE4U;\Yi>N5r(a%/LF^NFD9Q:AE)-m7`D
%.=6#e!eOh,%,T\R:88fSSm!Ro'2#_>@C\Pm`;%_CaD2[/Zn1?M&=cpA*sr9iA&9G50LE#EZP[ndb'4G$m!q/43DU"VBUTi&'_DjA
%]biK:<"-ZmY2An#pj"'ngmlg`XX3!M44LLKZ44flk>2o68an,;``R,[!eA>YpTRM1$.Ng:4W>Z2Q^X#*Zbc79,]2-@<6-"_%u3\C
%PplH9;Hg&XqH1S-Ke[@,&Tco.Yl)jqF+a*k*%Z@/h?^)1h6jM11(Y.bi53nb$e'9M0#!ER=:u9k;udjFLhP3IfR5lL)=V9=*m4f[
%d^&ba4b:^NHeA)@[4"Mn4`GC,b+FA^Kj'(mQfeG4eqjnlr\85kOBBji!UJPf>I9\/q/KhB+W0'B;&2>f6G58Dkls9p^[+eS8)KgY
%9D>Y0Y2M4W.VP8%G>/K%7hPOWV(ljDASliUe;aQA]R4\@4=hcpC,P`E<At7s,D0B%6OgLk:g+Yn#`C6\.tim=Wgqqq4W8mN9+%Go
%K<gpg]%tfaR&>o=?D'SK,I".Eh>9j\;Pp3Y8EA&rg`*[aT8%'A.80/2'&t^6\b0ab]j*EM5kKX$6>"`oet`qoU-!@0SR.d_U#VJ6
%oROV@,s[GU"_)OY1aB*/r1ahT#f\D@8apC3gC)aS<4Ji[j%-7;7DR?E6839"db=<FTY_]tb/i<3?mQsi$,P@7<!Z6Pqj;Xc[]2<"
%:_B)-Gm#$Z+72M_AD%@r/)qT5"abkodpC\/m1uG$XKM;8'?:<Se#rmJ=QR3:8G5s"DD>1*oncs$*iaiIrG`gH,E5_340:rGY^h#X
%0A/J4\PZr3\ANRbo?:n-jJ.QQ*N+&*@r@ETU4'Ts-oB2BNcCPXKq_'lF+bte>.OMZcK\_Qr,(*\@d2N7OH]SbL-uZkZ6rXdhmFjL
%c6u/k]kNRVT2Y09'fd;SDeI@(8j$9;r=!ec`)-$'NR&/(2U$h\#nK,4p]*1g&iXQb!ekeLd=$Vri\B7:k6^8m9e2pnTij^SLlX9$
%`&OXZZg#ho:89Rk,;&;_dDf5>1@uS;EXMpS&""P;X6\#md-RSYGVmGiel$=`<J(<a/fQrJ%^u;qD@NHd7o?-BX>^O>UX=4A,R8q_
%cL_Q3)acolEEn.Tn.erLaI/<T&t1UA,R#LqAiGJ9GHt#UIGkL.?YW,1.]M_1Jo:E?X-=YZ4E6@CMh[H3]NL(Xe,!`/K+uH5-T,/&
%_/u;I-fFejr?r76OVX-T'@Osk'Ub.i,]?QpFh_t6.SZ)=G*A:LVpH45blII+!cGhnQ<(W>?W-7A+W(^K[?=/Q+?]3]l5@g0E:c%(
%"eucnR,mKWCm:FEUpm7i/!)q9Rp/nLQG0!jd5#`:)W`:Vh(%-kE`9bO0uc"I6rLM9+-HXJ]L8IL9Fn&&\\esm>7Xi:faKR<fp&_k
%CiYH%p3%3ehR,N3]FZf%`fiIAK`iqZ;:\!Sl0K]9>gU3I*jF^["R<K?@ekt(QsVZUTA@[`2iOX7qFNmDcDOm=Fo5f<9*@'3iIDg*
%F`>s6@><tHX)W/":.7Q);IuC:Wk]i[Aah*qYcFQ.Qm%4gb`G>Ifn5=5L_J$P_"IIlHGPa^lJ;reGaFX_?#ksSUWpT3Rg]]Kr^^HD
%1g6K(ruccr_G?#KLL]^H$J.[?oV?X8Y4]g1b6e'%+Y`12lWumpd8mBW'^d7Jm+k<F$c]l55@e8RN-e,'^N;(,#k&C.a.]rD"IpY9
%5oHD4r(@+8qj0k+qNk$.EkN+B^I2PJ^I5l_^Ec5JKdI,O^P)Ke74(TPi)[&06ms5b,!(ijgC<V$_ID[4kP\$Tf__"S$`3"1S9cVq
%UP1_Ulo)^2>kg8dj'e)p9#M?_q^C%9EY6;Z&RaJ57)INmK_n=bU\$7&R.)d9@'f6GKin:'p0>N/XARFtG&F+mr(A`"D^F6!$&ble
%WNE05n`Eo(>!oE.c5LfdQ\Fgn@+^Vl'gAY!O>!&E=SQkH]3`&a`E9^+XXAjMY?a8dm8q((=it2dY\SsqX[5D02:7E)Nj[\6mYJ#O
%\eU-R43E@>-Q+YjS5:7=,u$26690N#2Jk-2nSljub\<H5@2AM!]61X%_6#KA#CV7k+)op)&@BoK_g#UQb3XBCBVK=qBj'Y%!l@k0
%*:YU]jq0;0LcdWj*O2@lb)80&>_"BQI]0Uq3$!D+Ecn"]WS_+hAm1HSs1(WC`YhR^K^\a;.eUX-ZYEp_FeMRn/s4Lj4k!!</>0Ji
%LL<F^"O+'VUi[H7pC>^a@VmmdElqf+!@Bd$!ScNAdA#DW?+Wdf2HcIU]9s+Wi"\*J@29V/kS9Ec$TmN[UC.egg<^$!E=q<J1[%!Q
%m@tC.#VD`aUQSpsj75iAY2iKk89,3]cqEI=0VKHV4+<:Io?ei:A.!1P\:/UZW#hO&=Q]PZXk$K]6L3pqOHdO*U?GKfH8s9`9%YV"
%1SocF^6WXlQ+DKW+UHK;[*FU/;%eq2Ac3'@nXAQ7^FU)&*Y!Hg_S*DFp4,N!PUgMflN'Yt/,JDfM7)1tK1BUb3)'c]],bt2&&an.
%_)`(aT^R./gI?TZ%[E._.AG`5US0N,$%um0&_8!%S1.*6'?)^0.H]%tKqR'Yd@/.0!:u<Z&e=%:,(YTYCkbAh63%t(PH`J],<:kj
%EIF*QND&L@6S6Kkp8F=E9l'l,?>?)'YmD&/I;N)hgAOVp[T/I21R_rIC/G.,.7@s:g=O:U;h7Ng-=KQAI?T+7h8eVd&t:"CT_cLC
%hb.j.5gO=9Y/j%]$Q)qnM:?\q.e\a;"N*6PrRaR'2o1fDd'.Z"oh5Sp&;;<Tdlbem-Dq6m8H/17am%qG]>>.eI*lUt/<(ED+i<Ps
%)=la/Z2knN-U6[0'@A1QnK8Os>+tniQ.u6!.[,tL)'3tqUM/&9Z?nq74"8[sL.@P?F''PBl%e7Sd0<U3`_'J.=`hec?duNggXpC"
%qGV8BQOGBAM<bOi!efcTJAqZ`/Ms6E+Oj)u9dW?Cas3CcMjK6s&A@XJ%&:BXWBMi65r:OHAXRnd6F=>BH-d!=b6Lu'D;1M7gh3ms
%4::fmBSq1YaCA0GY(Q4LgHPq#U"S!87XHgeiis[r?4fW%9Vb/3qYBa[YOha=TA26K:+u=gUs/fPMgT%&_<,QD0q><hP/!L?%e=<+
%I8Zq];C[b)%-McjiB6pbZupEA1R45QmeOj$fgTc15'*+kC+X@+Rg`6XjaSque>3iJALWup:dfQM6n,HK*[G?kW$9do14-$R.2l&3
%41PBb8S7Tsc)CNlDGq&Ml5#$5K=F=;"J^OJi3AV:pG$anP8Sbf^fP06:UB/(%jiXti8rAp/dbF^d#?P=$bg:sbU8_uSR+E?3]K8a
%4?Cu=@*nBBaZfJa0Df/GCj,h7P7NuZ8Nup!/brdc8L8MdRB"ZKCnthZ&)_'Rf%`IhcoW98J!-`/LOB&UI/ShJod!o7jNQ?"l,dJ+
%VN0]CN,Aqt'u^6!WH&ceb:(PajB7V2/9n)fJ+t7H@B(FV>dK";$)d"kSPX8;R^T^s=PEC\c5+]Y9pqEIJ;pLC@CNMth*,l89T$RH
%<@T>8I=:M@i6SYCa1Bq'57h\*r1a2/T!H84D>G<o*>PF)Je,JB&Z=h'ip!hTaZl7<YDcN6gIAM)mZb!(;i*f_f5%!#lO]Ofrtj[4
%e%^+t+FSLDW8J@KA)0(?,h5ro=JBhk-l>^;Wp5;\*R`=&\G$GQpr&;X.sqa^60*/(C^$*>q`QV!ZC@Gt8*(6Pc-#FHdW"7!(:q*(
%GEf>sV6j#ggcA_CR)=Bk'[?')+O+^?8$)8N<+uX+$BSQ5%-U\c9qZn4s*.^n7?cVdZ\ne#=cK&[C/U8oO(YYh'30#%r;SF2Q*F8(
%<W7K7cO+fNk'#3R7p%PQ+4cZdY]CiP#PJ3/@0d?`?j;\$U?"-E*MSF+14s4EN+h@L_g9<3HI$%(]`r+gAt:n)1FHSpjCO"QE`ePd
%h2A]tdk0B)'W3fD#clP::/t<rKLJ&L&L37I":21'Lk>.Hd5lOXAoL<i@7<_/\r6c@2ec7](NWR^">:rb&)>(A@l^j_+_rfq\8pck
%bF)CiE9:#VgO]"]ddTt2ek)nlCW6o.:hgAb<Y<(XF6=`a;SuQ\pu<[erXot$?.d@`_W*32qMGpU=AJfa1(WHbTHDt(jm6*N5WZn)
%ZYGtLMqtcg6;p)2^Wj<K\<A+q(2ORQFCr[JCkmYpFJ<6X7?I+!9/o3]?$T;`2KY=d&\I$gYXf&=/id2o@Kq\dJ3>qla=djDJ&IA_
%"O!4i*--RI^jR%UjW9'C>(jtAG.L;P8[_`A.MJmlOg/8O!9)k4HN?&E`-*LWHlm$^coc2Z2s!&?YB00Ob+SLq^@*/%,.mEQ"V=Dd
%&R(8u<L&$\JkC.siAZUjb,giVg,8cE)P"]&^F4(EYfrBp=M_g&*'jsQhV\YiX:f^M@2Fg&il%2[YjmsnG<JM[\>qp/Ve@YlZit)7
%4sR6'Y"gg`p`SC1Q=,`/43S8tE\'L9qAB6m*%B_YVh]!g'o_G^gSb#9N?I5Te$oU&TE^A\=^mR]<P2$Mpr"=M/,_h\"=o]]ljS^T
%r*r>(?.r5DkG=2H7,&#Q0//_6N-$HU%t`I6XQ'00,b\VPk/N`##WoQWYTd+ZiXtg7FqM@FqT"\d(ZDf_Zj6eKRC0qi#NZAjR81*9
%%*D^sY;_*!j7BmLG;l<@,u,/7S"q3-W]feKB!:uSl!>WkFAVJZ89b8Z/XY$6!^oJ59TK1QgA+c8$9F8'ZsRF8HSX1l3X>2/6\@`[
%]5XFeODMiuL0LiJD\6<8RnY#^F1Clc,4onZ+!_k\s($`65ZBgb!7A2Hqh'5Del4\ca*XN`[J.!RW=2Ye"BJIk(u:rAOqufQ,c=;E
%d$IDL#9A0,A%E2<X3r9Ta!NFtEIl\^>kjteH4H%3?^2ZmcmtE\+r66U'Zfb%Q;>K7$_;<hh_J;oPd7Z)Eip11j@2[!Kb-M1Lq?<1
%1h*9HU)ocXb\ifNI210OKoG!sglu?iK48%8p*IRfB`uCPnZOm'K'[a/Or_O'4Q>/F'1E%ij$k<IJWNVCBCK#[d)4@q*F`-pFr+[Z
%J=c+HG1#(V)(%EPmQR.Ne'\n`:gVFr.`dX%o2Z'ai#[M`,WHN3FZeT=Nl0rMT[$7Mo`F6>gUA+V:N<sI2P`<)AR)\E44W2H^a`$L
%!u7si,i8]%WgF'P_UPX1:HaHn_8s3ui)Q4#4fo]sWDI-%W:V@43O(J7+e(c`H3D]c,L)@6O.h_-RHfDuNrpP'Ud(71/:6SLDVW/"
%(irf:'@t3U-WF5\D\Pu.O<do(8j8Obm%.k,UmVfcl("t?aEc&+MaVVCk<Nn$)cgri'#&;oJesP+NWf^_=O+m43*UPR7IVD=aGCFq
%ha"skO3rNTVG+T7[.GEAYqmD6Fp>Z#h-_$iLN#1C>00\<=DB%kYS$PaOT(:OK1bf9n3M)&V)(4#l=nHtV6<8Cm:a8a7)P*.FG%Sr
%"U#.tMeq8L.AT!l$lKXUF&=nB2an'ugKDlq+1hQ@CN!5>]-pA\\ZKY:?gs"V_$kmc=D/1^4:]/3kPS3tp`8\,Jg>5eR'J.N0ag],
%@3lt9$Z.>X><Q4V+QMEAVlgqu!]sA4i8CJ_gSdFc^k205,M?C[%:8>1ZiG<ejAusig$q>M5WD^:YT()OKg`#dg`^AP<8tq2[#>1"
%ate%63Jf#tOb+F8'O(DaGU<dQJYh5oR2rd>;e-!^_&*NaX`;mM8OA50?TR[>5]$"ce>ca<%>Q!7"*5at`Bf-Hc8RXOZ>6fd_3>W>
%gJ>XmLs+8"U'l)ABZ50O-tp>E]b(sFV[)VN=[^D)J;,lsLmPCk]Y-E8kd'/F/06#b/GFa:_%M[KK"Fs3rpD=HbG*_&Z\V=62g6\d
%&74<V/apsd;6if5m#"nL6XT6:kn.o\3`'.I's8-Kp&O2\E3D3Qrr27jh!k:o;J`3U#rqW&ZcW@X(<"$hbU-Mm^YnBW8JXkq"^<"I
%30="$[-2=g:?j3m;?m1^EPB6='pV)rJB?&tf.g%>A$iPKNhr*=O[U5Z9S(\H5UZ4@S5hDf^!pC3o4on\b5s,p\GP8d7JEib-jL)=
%M6dE)9)TeC;SNI=e6da:;ctTI[;5I>"ilZpOXl.b,)m&B[NN0%L-R9]@h&(\-\VIC9+@X>K`2$Q@LsIEUjgO4cHM;a^>=\NE_=Q5
%&U90+..)rZ0gY-`E8oNrDU@6L!0PnV`Dg9.OO('XLl4[*R9t`d,]4)mMpp6InhH<ponsqHfJ3quX5uV-FN9s5>B6e+4t'G>r?D5-
%ai>m+1P7fBUOqu=^@.<7OqCa5JS*>R)^]T,lin`DipNaMmlJ[uEr<?HOk7:r\u&Sb0mQ.sf7B59q507A(l8Ut(G3MA<CTL;+01?h
%(E#"??HY]/_2dW^9<K\Y;J3!`bH0TT4G[5M^3qr7Y(??Aq]C=,0SIL+$paJNpC-M/LESMX;Yo_e%(-TWN1D,3A-1kT64tA$Bs>3j
%l5bYq<?2G?LmSSUEnrf2)6PELfFK1!_h#7/0K^P!C(@@E,=o#-PiMm5(.,Sl;;)Hd?.ubqF[Tk"^b5Ei[E3Ih:i*N:XqcNODaB`X
%0[Zl&Gn$sS/4&,d*h?0W+%rg`Z<V&U_GR=TGr0$!<a"eo0/nFc&r,V_-lu>7]SIdeQ!W5Q`Q'c8K]<FU_=XP)_CO\WFKXQVN!\PB
%95p=HXuGrhDeMp]"6MX54c^aVk,=.r#%su&TI'3g>Zr[Jo<HlQ>6(50/IXLoI0TMOaq=^QJ641['M(9J12#Z63BO/FLVqRC'GKnA
%DZZ'c/^XTKh$[FkGfAqiZrCdX$k&-H_-XJc#AHSbQt3l9"QfLq"fOD3$:[HN)5isIi3!:U\De7%dZilo_*n@-@bku<B!`%n8eSR"
%fJnL&]M-7Ri2K#JZ+LEp:.3fX,W-KQ=*sSVK2B"@g0Frb5P4VN.'BrZWt!rQSmZN?mj&8H#,4%d84WY6BXM7YiF<0S^`s#iQGuO-
%0o.\8Cs+D1WYEq92>MhM_2k*R(_,D<_nr(>*I&EZ@<,<-5N]2D$p3=L!R`K`Kq8o$b^&G-1F!4EC1o43234tH9quOboc>sZ,7*2f
%@Oo:o5o/Wg#nVZSFM_L)MSn"-Jh&t,[#X$pG*R5nCH7Bc#KXG*<J[=gBLtRD\WFjK7tb:!W(?!*W-dHZr%jiaRhaF"!A:IB<Pn>=
%kqoI\g=3)ffdk@(A;Ec8-kC*M>kq7R$d91-CcplOjJ")m7$5#"[TMZsjK@`RKY"]KdZtd#Y%,5L@r5["Y$QAb-7n-f$eFmLdMTA#
%iq$%RO@U?qIXG)d'/Vu6MZu0q<jX+Z*_R&J.p?tDpn#B>YC&F?k?S2>'>Ta@Gq%>)=Ft#InI[gPBb+#kB6Th&]*nsg<Ft,J*@RD4
%V);'>?6BY&RPBN<0TPo@!6YR=M0gTbHN9@?&qc'L&$QA?a@c7FWr/0/SD(bEb^1=tgRHlG*(22d&`/BU('UXIQC;;m>KW&7.1%pR
%>Q!J_T):_&-;[2;4X*\9"6EL7Vp2NS#Ddsm#\aW23j`_P6K(cES[rm5F(XMnTOp2`_0HfSLJT<Beq_"6g#<L$ZHDt-6h)+*"!m`G
%2!MBe6bXh=%cA?V!&mB*ajHoGp#<Id.#7"O2ah+OLk!]umo,Fj7h-+MV+gfkZ'R5[pS]*Le3c,-[PX7'!bR9I?!C-KXD;b+p-.ag
%jged@fI!$P4N7j6;BX6n2^mkW"9IFa^<F,Vg-d(!>UO(>eZB]id-tcEBGR'd<1o=5B>@4E_BuTk#=&++i)g(/"6K\!55_;W.(Yib
%)Z^cLKK]U$EUYrbP/V+T'4Br8^,lMa^_JOrAeaTA[^nP&'2CjS&W!fJ2M-8!j>apsS>sVH-S-<Cmi>l=Vjs,E4GGU!\E"$nY:24j
%R&is'\XHHgl6/2bCcD[RMi_kM8fT#P_DR#-L;T?Sm(tp(g&qLs;Qu[lU83[+O3YK.6"jE.@k?Ig.RU@<WXA/P(M*%M#3R.*Z]G_A
%>u/GAfuK18$TTj1dNfk'#lLGo@u3.8"dR1?]GlAJ#;!;#24M`_?/PP-WrslWMVQ:R8;)2gQcj1i",a3Mh(R!3DH=d<lNih-f+s]Y
%D0+kK9K?l[Em8l1bfO5rTEE2]ZUMnX]O5\ZMWJ=OA-E6"`5f4G6m/a0Zsra<#$l-T'FISB3MQAcRqr5;oAIqAV1&p^>(_-nmdrGg
%8@32<WoLtCD)uF5!(R>mU5"8`8+BT^2'Yo!63\#F")sm*FM`bTEg[9QZhkf=.8CI)DqhPoc[SW);r8u&R-cj""]cgWGYtK*^HjgN
%Qo-8pqX/VC8hGF_%<k.1:_C;Op_s@-'O8L;02:/-O8-Nub[bqf%9[,aInn(,>fB^.Q$a!$;C7&dV;Xq!b"%OqKAk6j:",iB9<@"S
%)$7;2gUH4B&%ZKL_0Q*XQXn`2.!RPe$'\B=$hOiH%"$KW@+\l;9++%HfJ9Aa,hrp@dRn`R(lV1S@+Z18c\hN(_6Cb/=_Pgu0PiG?
%C[I7"$9F8"%66<M;*C7^*1PDRilURHNsKXCKCUFBLmND<!u/5&#;&">lWbRf.`EjW9=]9a(#'`,6V*Q2#`_Wa^9u$.a2VEf<EaX-
%NGZB\CKZrT5hmb.-jPu(*s_eK&X9&4TGo1>eu\"h#Cpik8JU$SfIRo@T'Sh4]uM_RL2G!!!0V'fT^5e4riWeSPU=/+PR\F5N70WX
%+H2k[S$@"$5eOHN5U4a7VMs.T^?DC\"Z[RB(%GB0V/[fNEesXf"'rrP;m,`b0ks%J=<4*XnE`55*ck*Pb*nVC:sO8dRl)uE>Xu+m
%SFL*+'ohF+oO*4gOdYbY'*j?\kqMWV1r[JgB$fj:4D+740`D:K'7Gl#1/O>PaG6T`NI;)@mT;0#$>EMh]Eg>@*gDil;#mJ]Al-cq
%"[X(#^q@CW?qn41:1&VPQMO(Y;qn\]iO)K)O!E+#E?Yb"m4q8B?pPtLQO.[O:EY+9$IEU!d?N>Lif!e(^td!X;XkUolt)^/VApep
%kWm`Sf9GTKI>iI^d'j:0rUN@$:eX%lCSSQ/!Qr[=eRl:!>cT".2]X<9:Qafnl%/[-[pYtD-19[-qCVMK^^deaW%ik&>q;i/@sOf^
%2VeOq]$FqmAAJFST^#HQM$pgY/IJ1*.9'S3_T"n:-H1"H6<@C1iqi>(4S]JO'92iRH(+F,`Ppn(HSN>baiTS!Z)0V3#Yb6a_tQj$
%iZT_CXgXIt?VEjU>`67D$T<dGm_W5D5a&&[f5H2L;*%M`#aGQql>-Ub-lqM@R8m9FD$E7,AlTS^ouh]YMG!CMS=KC=2V0T?*P73M
%ldpcp@pPS9[e[HnUh-*Vc3.NX7Bm(*UcXX$_Wsn<aJ@^[3YMO?SI+/4$_p"#SI+$%GG\ApE5h6A@tK<glk(We8p(kOV_LJ/Cp%t,
%2'saCX@g3mN5c!#\r/g<JjS!"4HZK,"WMTLQ9qjnXp@miG`@PM]Z*?I7UlK5G`&eeDDuQ8DUqGdN=!5tQo/kZE@K*WnHoqgO<&G=
%_F/o`[lMglK4k]30)\6hQ&Z04]+(d16L6tGe7StnKh2<#Eu*/W_F/o\@=i^2(;_Opcoe6"pCmfJ@pG3[\2\deWDcZ^9$g=AiXqk<
%nXr^G#gatn$Ei_ENOmpb?TR6j+*s@[q@^&i$n+$&d6NMAnbNk!H@6+bPB1^HV_>kud(44t#f023o0o<*5o'5)@<MQ(cnP5[3IQ`L
%]Y;=:Y.(br8L;AT+*E4G>,LXL,ORu':t#kX`c4Nsb9Sit)@;#7dqT/<KpJu8J/Wr0@WZPXG=3?HJ8Agg_cs[`9-K-ZD<jRtlCR%4
%_aSZ@hR'5rX@6Z0A1liT!hi?@QqM,Vj!Y:ObU>"`0u::fAe_]9BHa9f.(SoEe3+eE'8`!6ggdlT0%S+&NZ++q2_kcf)js@%K3=%h
%$16p"S61Atg>@1E'`m-c?"#s4++p,]YeD2514-qi@Q\7J"`?ns6I4"Aq;Re#a/nbH*S(Cc^J\Wp))q,nYq_.on2=l"Hl@].Aq4--
%aVpR?Ph8Ug>dPRGTP;GV^oZI\gBSI)!q*0AQ1j3\&sGfg9Ar0^.a#]eLY\ViR65(m-BqVE[q.KBO9NQRL`r&QW$p(^49S157,/M^
%7Ct$K+>\:>p5?-7WosK+K?:bmrNLXq922@!DJVmJC-mu@U!V)'f.r"p<?_rq-DbT2'D1?_-7lL%Eh2?oUborF5eILM5U5QMVMmJ[
%^?DC?P`+*"+o`BoHfg0$as$>6%Wi_49tAR$a/J/$]k*6g.D^7*c@2VV!Gqo"MKZBF;H;4ap*@p;NYUQ8G[FSb#fksb`j%iY'Jg5N
%E>5'Y*%NX3;3d_m`(*aQd4e@PZIgTFX9IpGU=`WNFcXM'aPtXSN^2U"WWLbVi_#q6lrcgmaKD7>W9mG_3S%H6-_V8jTT+4m56cW-
%4;"Zi7m-)c0Z,qPcjh=!%p5Na2Bo%Fl\ImQ`g=q5#4"u]H/>em4qc*EGhu;JSp0h"V$CZcX5_!Y%.k_mU4BD>>dgp6RtjhoVDM0j
%o8XR8+,.i>hGJfpGN9Cf<@N/_1g__X8#$_)W<"7V5j+%tb18BYFG+o))rAseJp6j[i#Mu7GXlST/1V+=WU"n<>\[LW*A6fDGnf#S
%J7>PsG"eurB-%6?R7GaEf<W&#*kAG_MFu20@]Hfk;_X7XV812PJ=-!Z0X_;+1QNT!]o>_%1,5O"^`./i+t;)Bj%5L@"]_S\!6K,(
%c(J.I<5\cOmo?E+WSh8(90T/oi-U`DHq8r._-D:=<EXmos2qBHWXQM_0KE1i;@tk.I[=*i;P?95MZU%-0US[D^$@.:FM!^];\bh-
%Q#RFH*m,^ZD=F3k`YGE8Y%]OP.*o@)XX9c?YQne"ked%Wk?2c<0e/>r`C$mG=KT.<';5jL?JPZ6:+b(OIEVuf'012.J@Im+:lYdp
%r)m(m!9G=DkQ[Gd`eD>(5;OVEj<1^/PSeWKQ&.79-`^IUl\q:VX'7\744^gQCUYVl$eV&*kR>a#79eM#\AE\g9G_hN`AK@"&rM-^
%\%B3?@rXo7f%<nalUiQt(.h7NNabL4NS0X@A/I*b,Eq[-]^&FE-jbTGBj('p_0)NafWJp3AP1L3>2O%R3a-@$kb@\BU(sGf(NO*U
%%X0'@3Iu@P2O8HGGaZQ]eroH*o$c,HYCccFY8e*%`#8^1pJW%Xn:rLA4pl,lp5&'q_i1^%Zt+k[nO4U+nl4"U')<[)H!'*;m+l.5
%Ku$ufhVp+n[jH%`&MpTXiA]Nn,eYXt6V+3h"=d.WTa5kB8OjCNpU!Cep([u;6EsFQ;i4JNk]&[2c&>#RfJ.B1OIVR]_:AZPbD&f3
%Y?ZP,6Ue"h5L5Z`K+id*1o_l&#o)K[ntZIn*<PmhejZ=OqPC`6.ciuAN&`PD#GI;gFgS+Zc1@39*sNDVY[M-@UHoF&<i8\po%\Is
%$=Sk>bim_38eBTK9YFCM+YWdbe4<0:3?q/<ms:+S;!?#o?ks7g7^"G5F&;@3L\_Llk56puj#%&_h9O3*S+0l?Vt;-B<,Y0W]j5Qa
%55bY\L.^"[3bmiT;'lSaP!iH$/-c9s&UXcB/9@ODDZ^Ls3hi+U6#Uh-"MOq0hNLBGj;drK="/VDdD^MR`:KuOE2A89&4Rb<)(A;a
%,7n2ngk2QHOn.jk6<7!R/g4-nLgP;'<Js`C9JpU*W*P12e$#j6O+35n6S`Ls8G)6tEs:"t<0HRhZP[h=D[`4!Un0<`<kc?E"4"O-
%S5Qk#7OkGZk9@A>-N>4L$uV$iQoUg)@$c/^+@[R5DC+#O&9VFQ;F7J!.dY4s$9*[5cjNc_;FfWKk<caTZ9;JBg4rsMar!FsYnYJm
%j@VfQ0rHGkLgUEM-r1&9bLgC;)>1!b!ErbHe.4UnQb0?GC!OO>/h=f'0#m/uMkG8BKT?."M)!NdKpb2Yo3@PACIet8;?X@g<jf.j
%M0c9ATu=%:$tdd?+Xg0N"Ol270(jocBofdFC(#fYiCH"K`A*a.m:Ai;O`1Uu#C2n0J;O^LA%#WXmWA9Nb$u9dlmEf9R(2oBf:7KS
%B-$3Jk?@J0kSgSah8HKd^>ugqD+p9bl!kHpeRS$,caQ8n/m0aV4LAcoRIZbd+q2DnEe&<ZT0mJuG1lJhGt<>4J\H'21#N#6JMscI
%Z)[[)nT:GNPnjb`XFbaJ,Ji](L+C8ZbFcO_"=Pl@]Ue?2_Ho(oL:/A>qZEBD%R]6MM%S(S.RF(W6J[MU'fV,&`)YhpGLscp`hL*W
%GE%-k?/ne+f:[j[&bnud>p[.Wr$GL-EJ=#qjt>B=hDI"j,g4BbbJo2*[_^]eC=G%Oa]2jr.-rO;c=iVQ?8n6cD6"E__TTVd`J*=q
%J)ps[?97;A^2Dc'iur^4#h30A=H+L486=F:X-5.ABh;J2J\qNu88+9UgUmdVUL%L>NMqXT(8q]5NFP.NL!UZW!T-:V.Sq#2f3Q=d
%HP"SHYus\bKXo6DRR_*jL(R).`t@q/:5E>L3L;-PTr^:IQn'?"2XJJ;'#W&@R&SnOCg5&h$CdfI"XLsA"WC&N1mYCDD)J#-)12gO
%W/)m?=S*MYbU(/l#u@>N<ppBHP4TP0\I7L2Euf*kT?%XD\$Cm%+=EL;jMZ2BD^oli>(Hn%8B'</3of3r3C'`CRas%I''202#'@[j
%80(^q!ais'LI5FfP78boW(fuYLHWf!d5VV4fk$C>0D,Nb7YTWgpu$6EGG>jtP3%ku:/FJ;:I<M:Fh0D&i#b?)h:u92>42*GPe0's
%9VAj#1nm>)p7RV];>X;<Zm1Cj\;AcPPZ&B&YEXDgNR3Os]J3i_JrNn?hB!-;fX3j7Xdu;1PbQN+;4p3b`!;NL.:/`TK,u848'GM]
%WmJ<S@Hb3n:f\5;GT+.;bN"9Ac,m0j;bs\72\72=MfESiRe.F7e?mrI2i$0Y8QOBUMZb5<)K`1pN!*qF"XJd0Ns9qMH*?O;G(C!3
%ZTtY$3C[1f*Va:/#'?A[P/)o/7W'&[-ZP3`9N`2;5LumU#n*#0&GX@TVM!BWAt:)X0%A%$!:h@XBJ?m-lHn'X5N<4_7dNr9@ecWf
%O)<_tBdEU9oaX9"(,692hfKJ>X(.3Q1WkB>GU9seK+<&FKCGD,0V.fI_g0HU;fj<E8Jj#"=^0PJSIeL]eik?B.2-eFY3iH%D4%mc
%/6#bk=+cqe+?LGh*[c/?lT@aDBnBO_PmQlf^k&Z/;R-bNJgg,_fG+_B)thP);_>Fs#e42h&&RmlmdKH#0Url<ZZ(OU7Jg?;RV6f@
%:oJ8lCgfmYO9;$d7XroN<pIWMkSIn1pAjR%'sl*o9CsOKbqLMRkHoU$Km\Rr[;#dbiO4DaA`L<PLq.(u-SAnfPO4\Z_9UXK0Fp@`
%[^)Qo&acH^fJF"YF!_2gNGH;0)\'Y[Q<J?A)R6iEF4,SC`!$A6J]_M*87SE.Y\UJD1S8X/OoUD6\dYMaPYOc9Th[Q4<TK>U:+jJ5
%$,W8H_k&&:%Z>5a41VDUm6D%-&GP.:\2KNW&%Q3&2bZ>8+*)V+Z7IeoNq-.hMFWqg;[$#F04T"%i..qVmS=SGp1V@D3)rM0PH[]J
%4]NBJK!DQEc3r^f.Qg\OD8k+nHO+?PR,kbE"i#=XAKq_N"6H5NGI>i;*@_nW=dZLm-+!F3jIs`SJ^#9ZO/:(..=\?#ifB?0c+2i"
%3#T8reZR"1k6aFgcY.=$11YPs6<sh*FsE6LGN[+%Jim*OIgj@BH*6^+k774KMQ",[$$Yc\Fee2+Jbr'`-=[YI=G!((0%Ut@i0FsB
%F+q8Y)3X,1j"q.iTFuOZpu]N?8k]^go\Y5joKZ36_4oHcMF0XIF"rJ?N:T#ubY_2hn?,M[8m*FNiG@S#C/V?[%lRt>O\J9BS<6=A
%if'+2WDT%8b?`aaAX1egEP_HKYF>c<I<]pX9oh%ZFj:IsU8gV8oQ<_TedZh+S-R5l)BtU+P4g>D(nA5Igb;X'HUR:5%q8J4#R?Tl
%nf#I@b1ItSEG$-EJiVXM<H7)!V2m==+U2$_=V`&e#BFPn?0DXaElLU%Mu`F%k$s,+&ajI%,j2ioO"bsUg&'Sg#$2[c^Hsb1fD"b?
%S;C.7WQB\t@Ttfj%dl3bMHu,\*flho/q$TnS/GYtHnhm_m'.[j9J@7bkr8/46rs*$Q(_Ta_Utn\hZb8r+AV`.=bL/*bV&LJji5-[
%2rtVH4U9\)fp7#`lXN"13HARRn^q>s/4"agnI=JZ<&5lHFE`Z%/V`R\nOA&^[+$D;"R'&[mZO<ERPE*;C@^DpQQ&5HW(C;#A$@Ss
%#YMtu,@[Fo"+=0h<-mUjVr5tZ<rOgbF>u#?jl(L=GZrL5)rJGh(5u)*gC+-f[Et_2Bn'm1lG<FNOF`j@I1_5Skfu[p1Af+":Z9tL
%/gQ8s!]hT]N1K4-'b6K"6a,\f,)r7_Eqa`%<bO_Bh55n./UYj/N`&)s=ErJhb?W8,%]2\@5#%jH?:i:51E],^FXeGc]4RJ#EZgIs
%P1\#0Egj>t#W+D!,Qf;!igaTr_7Vh$I.nIm/[4t(((HQ<+PJ[[r\(6'f7YUt`6Dlk=I"F1+P9l(U5!u&0!q[P+EF!>.8<J2(r?qA
%/R4B"?3hf7qA+P-J]Nh1rhR)E/]X1!Pbp1*=k4`$3n9@9chELJZ![f;65%Sc#0d94a!HihonKV:@R.N_TqC'K5j8,cem6pY]rfY@
%PS41U9.b?"$go`oEFk!`RsE/eP?:PME8uhsRSKI85\0c59]6\A)Od1c+thg1$;]R,M#tfr-,o'(Z[[OQ/-ijH^!B>VN#ogCA^Y$J
%&D*PF$P,QYTC<oFm;8nJFFE$Sc4P^m8kT&WeY)eVA3mu\LpjNZ`NK:L4/G@eXqo;lY'G?IaMu4<_q+sr_7i"`4Y[#r'&L)K/X_+[
%;AI3HdQU$f<i6^$NY:O\"Hkg:\c?SC;u!`]R2AZMTH![U*+j2&_Se=j0MdR&S#iRZAk^W2qed&omg+^%.fu/eG&_^V$:@`3XCprF
%3o!(+UmO+R(IXB(qin`9*%3EFpA?Kt8'&2P6CJ;)%k!?-<T++4P*qgYcom[rAg6"6i=L9#3)In[MqW"N`GE/q)_l=ue5s##5B%ra
%8=G_?@NUt:Z<t\uY8Iqim!(e"6lr_*PAA9[=71^(#t$!\Na6Ub+m:;u,X:H(nO3tWI^tblfBXY<9GghFWbP4p"3%X5Yn?Am0Zeuj
%[9/paW\PXf6LI/8(p.,Q+R6mY\NAc58kL3mj:EHNdM&E@Z;%kKc@&PrKID>G]4i@>BoGu5fVSf2^Z[u<1#J4jl<RnaFP$JIRjc^>
%(aSY"51gW=g:0\sfZ#]7&_S08VWJY89uY3KY!d1:J9`@t4jJu(@1"iA1[Ne<"=!!_J[SXo-/\=j!#oT&at[U9^YB$-B(D%pD1J&U
%>1,=7Ps>aBZ!jZl`&5)4EH"1-p&GaCbZ%UFNHP>VO^jtFb:]H&PE*m(>Qq,\E>j)l(arhTq%JHt4CZSS@BCN+j"]4CKQ_=%9dAk_
%*=>RW8LP*p$u.%mLq>]"Qe%fWV5[CEnSpT"2o/ec&2"`U]7b*ii_)k-.FAPjWRrP,21MR2UfA:!o;?EP$*!_f)&SpTa(kU8RODfo
%_eK;g@Ob2I:[/CNO=K5q8G<sq/D)8elMf/\U+"2MESs-Vqnp&"U1*4,.BqHDDb1(P-ukhj5tI(m8Uo/OQ)/H`/\U:B+Q=e0ctNEg
%-$DInZe@;4Jr\bZI8p["+#-tfk>SWY1$)CA-JN;7r#uEk+-3"7gBu1I5](#=RQol>dcM@tITJIs:-1Fu4:Z6HLP]:F%tQ.pJQZa)
%TJD@#iOPL&6PC8H&2[K4jWLI,'m#.P9R.g^ek"e2'T87-bbLD_3RNuZ]hr_`iBrbNT`n%"_36jFa$q4SJ0d/E]n3X8W;r%^Ll5Tl
%<>U1`B-%boJFakf^:b*m;N_$$P?oGjNH_+$\#M:aa-*$&=I^qY5F*4s6>@u98JMr?@5/X6hkS>Y\quEm0/a/*!_1gF!(7)$LHl"$
%G+^+,S45"XH@TIt!]1!Jd]][6qicZQCDJ#YQ6__^,Babkmi\;iNc]g@Cgo=[,c".Vd2<J;T%,cDaRGkLNXeYReg-<uV'JWjb7QUa
%7`a?7Bju0n-U_AeJ-9SAoWbbkLhjS@fa'mEM?L53,sW0-d1.O)`@2@Plro[Vq4g6*0[Z7?HI.>mb='>8TV:hQ%AYS0Q>k;$9PCQ$
%mhf'-j>DIMl\cGH5tJJJ+Vca"4Y'$>kX%8/VD.@?L"[a4V$X"h4X-`'Km?KI8=jr<q^jXVp@[7=2J_2<kW;;(a_s4:2Qq.bWim#!
%hs>*ap.`ho0."bN%I0/^(.=#omB0rA@@YJqis:>kb_&4uL3L%pQPL`)_2kk8Y`9)O>1fZ=BYk,+f.MqQ5*_M.@&jS9U,`RS#qO0@
%0KrMNL>44=I>HY=\-b226CnAAo.B#(.1c`bmH6qPjq49n';3a+&aMtMZr(KkALijg0Xp=HUBs:+)0Q>[:K>""X]'lr2iRI%&W/7C
%$52en_e>dPZn)CJ7PAjCUEFtU:o%PHCj26QR^C]t_GHo'.#\nt.`)>P'k)>g-R,pd0XS$K&+7S-4ke,U$$S<Q]G7J<gr.;1UsfoY
%<L?%a.a3N3'dc1?-*bL47&]"kopma\.I</%8;,]Te,J!ZA3mu`XG4hMK@#;Yd-JQ11<>P0UC5ObKiI=/>aVIq<.Qf`P;I!-Q$EWi
%rg['G.`2DKQ!ja$>t&oUmGQuY;]g,alW1n":b-QKn)co3:!3g)RVCQ9$0J>mF+a=$Nd3-X#SgSWncC+;D9J/7]?>f.H]/%qfJ7<2
%[uu`eAKJ'oAR`$SQ?t-ed7``9;S)'tq*@pq9fuuSoaLF=!70,=:f(r7V8EET6#j16BR#t$-2J?HilDbg2bC?oalZI*c`DUI1V#@o
%o2]W*/7@<g4^*DMR5[SpT9*X@"<n'85WL0Y[C#q0$'YPbTH,GVh*_mW'':5]M;!MU-']o>q@[oiQ"8cE<^[]HqrU2t\#p/]?C=>g
%,<$XOIh@$N8FHt1H;@JKq2pV+VqMhsH3&=J4^P7",J(4L*mJI2;)^[^s,KE<Nm'T=J&jd-1-KGaZ?CPT#g$"qg.l"\hm[Pu_jIJM
%$dJ>!Xgf!eHLA@&LDr<<7VJlR?JP7IYg_W<SU/H4l-XsSc2$Kk0%giN`l-<Q15+FGL=/F?Jm'L%+Pol^6*!XF;gDcLY:k&i&5*T.
%Uo(aTiT_6&$]eoVA9tO26B?q6&>2l[qPN&pg_]&\TMeT8FdL/QQ"<j;.1icR%^[8J9t;/*)PaeirJs9h=h7cI(+bU<V3JPaO3$a6
%d-)Ht;arA'5Nm6V86Vh&)@]_9Oi`SogC]73D[X-_\X$LH]*?o,,pH3F0#8h2QolepR#o331[[,>@m[I:/f/'kN5uL(SUH2.P6V7[
%637t*)f5`VS]g8)R)V'n_Ma7,a)E/gojZpF1RqA"H80OQ2=t@XORH5L+ug0*a,t@"9m7d@+)7VW?BD6?&@k+KKGfp_JoAeLFoOmM
%,*9<%].Ecu+<W#b]anOK(&,Ze&N5M`kbK4-Ak7ST74.hpZ#DRPE`Q*c2fUWcR:ukBB+XB9,/KE-Ya_AiR2"fo5AL3AU$G&bg:PLZ
%pl8+[7m!6C6[mMkGg\>V7\.T@m:-@ahYl?E]t'0s37B2;2ph:qk)<.Z6qQ2#F;#L,0YcA`G15gTDk:&AodJQ7VblhR4qs>+)1*LV
%",`jcs*ikg0^)Z,css*;f:1T%bP:$U+pD'GS$q$*S4-$F']%hdSs+UbMo[k'8`c<>qdkUa@WgXuApude,<N\N$Ht-MlmKk(50)1)
%MM?[P/*Lh'o?bmV&n,g)0Lk.e`OJ.0a&EY#Ut^,dM;U]ZfQuKupKf&uB]en%NNW2RN=Y/gN$L;r+neC(c6D\qd8(t!fFGp"U8Jk(
%`rt9J!/fB;dR2g0!V1(9-,X.`:q;VF__*D'i]]gT-IMY\I2jA:]m)Qf\,Hi4)Z_RP%kjfupc_.S@'Q`MI6?=<(&.7=AG>t'Ej048
%%5MKJoMXk##8^iLT\X5(8=Gh^2%t(Tk%8B).%.D=2\+X"eui4(7HuFsmAkfXkc?S/_/lJs1b_*fb"<9sTt(W\X(o@T6/("Y?G@R4
%&':b5,_^s/<d_^1"nct[.k(>-TP6l:\(#iJDZ`^R6%2"^MOUD"Q#BWY,t653M=;JnB"0$l+B_a0;*.H\Y_H!(9#3ZW4rCl]=[[c*
%BT[)@C76%MV/i8kTQU#URS8/LW8$(X!1QF7q5$YmVRoiK8SNEk2D"Mck53_Oq%e=PBnR#<8_'+[:_[pQdiln9Wi>tjn^Jls'!=iY
%NJo0$3e-C)Tgs$*41BQgX+4t%6^LhmrNTWaeC6]<4tRUK:a*'6$mFHg3IKQ_2-Frch40aeXIf(Yo,plj`#Z6M#Sah02d_9XjqM%0
%,g`EN,o_+j`l'=2IV0h`7/obARH@>'k%kR^7)lcYDF@aCe3MGo6;3l"->fKCrHVJAc%%_+$oDZ3A^r)15"X%T]TFNjkVQlUb(2DL
%c#*h4:;jCXB6b&$TGqmf+gfD^$0&%h]M>3%eNuthil(^WgYdfa8YJ#=c@hQG'+O6>]4Ip4l3q@$c:!:GX*Bb$VPt*cHVu4BJ\C5&
%q7D44<=EelM>hfkdo*V><2&YA9k=_'.N5j5A't+iY$[3<A';?>8"rjT,:n]VL=0<r.).91]"7Q!5dHb3H?q?QhQ10jDD,Hb2q!e-
%O"6t@]OA.69/E'Z@NFO'racJI7ur(9b2^`6^7>'?O"4f?%/!)HrE`1YWHi1K8gu/SV^>KV<!]=9"[CUjeUFXA2^D'HXpYY-*B<h#
%5m!\,cabnaXsisiKcms.&rh5A\V8OZin$dFI&dAeQV'R6i6&<l1gm1BV"QN=nY!KS4h<1^'dPo*)#N]$$']@nK%_2BT/pj)Hpl-^
%#*Hu58dHP<'@tiQ):9!P.>GmQ<=#='L![>0O:4EiaQ9N:cuuH8lF.*U+dKnkUDNcRgaWJ*m6)Q`H/0A8AK<Ajo9/Z+7d(5JQ=PU^
%\;W1g_IM8+4X2AN'(([#\2"i-^6:[kenCFlE3q\Q._)AlQQVHa(f``%FB8$jMqs!Q5s0b-D8l#"SEgWHVkVtGba$j^Q&&A.9.6c\
%jl]hAf_)e\c5J+%,_(*rZ]4$ABP+`K!S_@-Us`g&Fh37;;HJ0+V6V4\mt2%?A:cR\i]>@_;n8$W)LE;f7u:m](JG)X!JXF;FL&B;
%L[qc&2jG?(--G(`>4aOl(XVm35\#2u)bo<P>EbR2`$3kh=`R-!?3YL5l_o;`r%NWoqKt_>D0SMd9=bu5Eli0OTj>p"VFDhE3uNmD
%,*BH0,)bo-`!E],aI^nc=;=&!-8#UP>4P54-76m(6V5ZN^+Jg;[Xdj,FEPnW81I%HPNrosjLJ_A92#++q<KV$PXqo)h<\"5nhCT@
%FN#H+!,33o>uJ($5Bkp-I3^J=(sR5&p!_ooZQWGEH1t,h1;[!%W%/ab2k&KB&RL\qOuUQ7hL%[5L"-@uA0*A.W/);Q-SQ,rWJSWW
%No'?ba(Mk#!j3RWiKOf1[FdM)J0Fo0U+nk#N@+1cXks[<@NrCAm=kn2aVN_bEt>>tE4[8WH@=Q[8:dSEn0fQ;dJO%Y+k`0oJJ:sJ
%^OJa&1l"qdTNTWYApO,!Oi0ps]U>9`(-;-]UkV\S].I%NNs2)?9S-_q#gFJ4q6e6:X,GO)!fG[$B?&h"HE5N.QT\)6&kibZ:>lZ*
%*4@aHWC%5Nl4D+]<M3<Vnn.>=Dglft%VEB!bD&51!c/;_D"=,iOGO@URQd8)#UN!OcX*5N7AZr\qja=ks4i4K_h$+]+?_jN#UL9J
%q)S?!aX8to3m#M8oV.PN4M)QgK'L77:*=U79h2dKSe"W.`C\@1/"IrJqXC=cBR)SdXek@pD`WKkSW6S=VpcnUKnV'g%Jk%BPO(W*
%8"E=_S4+H=`2-4-=$:us(ep&*7a7u/HFuXu&2/d6b[M)D?%Vt4=!t&S44^OUc;2bI7anb?I_P^1a[^O;3mFSpoWFC7m-]"ZXD@R6
%@jiAa#UL!C7TI,G'W?/4M!UbsK@p].5ka]Q,9h2n8C=![BP5E6Nm[L+>Nka![1c0s[AOt7XP;4W%\hG?D'tgW]A#')rcX7?Qr/NG
%o=0-MJi@<%6ji<jp(U)gq7E?_I3s#h;i\.lc3Bm=IRK/HBKY;?AB=7</aW,<QirY=\B.QC&G&qU3es9^jWtJqh/8,f+>re*3/<LH
%hUgR]C%5bMT]gQeUINDTSXrYb`UDEdrFQ]0,:t1W&S&V'R$S4`WsAo"9`%0sEMCYhkKec*cAr+'S"jDPpd>b'?FV"jG80%l'AtH`
%0Y$**M5Ks9ru6AmLW<E$^ii$,e2_gc5'!;?Z>^Jq@jBJSk1![58Ud#JkrK<$$%n]/D)"E*)aPDX4.>4$hJs5NZfOh3s%5cUKbc14
%jQQHkcq&AiG:0[,a[*8);dX-FVf/FQI]Z\VZ:!#5(tcClQ-cu9NlK_W\!Xto9ODKYUA)bL:FOoV(OC?XXW$9D\eaW6G)JJI`KkS6
%9_*l-OhXZc)h(;6n%;D?';+k,OR2O!-qUZ$L3XY^P;:^,R=CY"__ckZ_aRl;(*P?1%o0F^-&#"sWGi+d6&nd.pq3el$M0H45$ge'
%+Q<J\D!#u*I6"T]e%lliG=CPA:=G42#!CX/`gkoqjaC7eC=0asE800/?6;<,eLh5Rgb(*&IGGD+U*b.=-=6rXD9!sM\?)F:]WC,)
%gLZ)E+)S?2?UtVN3h#Cf+oZAP3Pai2VsuM!mCJ1iDV#V^ZlV*&LE-QF,rd'OKRib^"WE_dpD+QBI$F(MkZs3h;_o-,\8UdaODXe&
%b`P=q3W>(b^0Xk#R;>Z"6NW8@LMS0uVm61-aYbq#%bn/m,m1u;/CpSYrT]ijlB-d'l5HBD\9Ii#"f9SQ445))-A.#_JKV7*,oZJ-
%,UTo!$(%%m@LH52@D]l*'[<csZl<N3L`A^J>Mda26(l!G0Rf_fN4et&_Fg%e=SR.lK2#I7PVbUl?]sfHrP:-q4&8Y-@LZ10[2s-$
%-\tGuKXrR_!>]g2E>)A>Cr.CG9j!QHFUK16+i/qNi]b6q9KEEOo0+UMfRg+`J:u2KR6K5Pb-#eVP][K2\Q5[aSHD&q\qe!L'5dqO
%[$..)q.2i4PemkQbA6Ytf/`mm*]f(!m#f"lONugN8hD#Y^RtZ`g3^iaJulJ'=6QhL^eEXZF%D+0%YVF=iBCYa3`tWc_gX&O)Clhi
%AC]]+Z=25Ql(N2a``?Rp8EiAf.3/\:V#rd&$V`U%$q@QKYgri#N5KGN)PRS.->R_*K4MtBQ6%fg%YU"r!C(LXAKamP"$WH)(5$?V
%RQ[nRa(OE%qpl=(F(`$SlTc"q*>2qc"/2T7\>AQ\fEqS'6MSM%opDCJ>)+B0ONit+6\<Xd@BBX*Uij20dR'J:j/N*YW!MGK"KYfQ
%<H5.Y/RJ?&[DE]*1+cKe&4B+q6=\(jb2/G4_C,%^J[`,X5/!O0ZY,+--[&jqMqbC!5`55=kj?]_"oB%qU:j?_X"-a6]5&U$G,"@B
%D/7e+%(&P&(!4fQSl?Ep=-0/b2fkj]TYH);^M48$mM>],Utu%FDY!o_fau!N4gXbnOR[8r14tJ@NbeQLDHB,u((s]1W&CDdoRnFu
%$"qMK6">),V)R-DX2ElSIg,)"c2Nt/J?i:GhpEYK'q2$IdoOJ[+J*YIg[pT,\_cp2FIRBH1$Q+;()e$R\IWaRgh%"!lA\d\2rZ2b
%X'r8`6CL7^m5#T@cu"^`a5A+:8?-$Bee([\7R><+M?7LrKJ=n')6ujCAm5t_X9+FVnGV)0raASOO'c6Bn+*M.c_]?8J9]'`./K65
%Vdi(Hc'\Nb+$'\p.sSdH8tc.nU'*cgXN1]#l#9TIe1\t(8a>Gp`9e4Uc>t9%K1V`Aj0^bNZ8Lk2`jL);BcJ+j1:>t/Ji'oOBI8:3
%XIo@G$T@[8GR'AkcKZie1f?F"7\t9!Z'PS&FB[[bNS&/JH+OZoFS@C6l**tQ=N8nO(nMhK!-b2'4+rAW^c%KO1F"9'E-[BmH9u#L
%j<TcS3?g]SRdYs!/X?[2;sGhDrh>$*0^gL2rg9A(+-.F7@)Q[T&k;2I03fp=r=1UI4aYrpKVVA8[I#=CRL([aGp8>H*P"3#]o)P!
%YK]+9GA]027"?CoG`#r5:kp0DqM$)GUcq<KV(:)TFe&HI20-Q\4HLZ0V_<d]C^,UD;=oY7#SYXnlihj*?s0rPdT>>(VYQ2BRg<hW
%GZ4.M":m*aKScnU:=l\VFeRkm*K`!MPsht3#u<hI$ch'U.g?IkcRtfR,q'&n:*B+$Lckf(D+ha.SGQ;!cQ?'6o+mP8@UCjE"9/4L
%r91:Tk%8@_:rF^Z5]"Yo0-R5shJgMCF[Dp+O]Z!L]drI.T[c:G<$ju!.R7)VqU!K$]q7tU:Z?\jE]g.UESF5K9Q=!K@ll,13WkZr
%%oXTujq@<])*Pt/NUQBd`reQ7bFkFF1RDAn6=1-T"r:L`fH1d6;nb_E+DoVObQHoN]m:Z;Kms@'S:C2,39\`0JGG7tIMq4<`m?8K
%mi^tKk$i``dMN<QN(C#n863JnY"%RSofZ_WhN!L2YHF(XTe7BqL9[bb*?,'TW>;j4OOp73K!9I':)&-E%hLWp>X_3)!\7t+RW596
%ZCNRH<YY;7Ct@t7'1[RGb5gb4#7#i,_TIB2jKX."`P,E:s1K8[8\pNr#3eW%OIpR1hE\'.X7_8=kHCNhGm?"9;P>(lMPN$)-Hs#s
%V[VVkhhCtb/nu_f\Mf[ek#>t1LhY92(OkQ"Z$u._!%Y"7Co`?UA!!ViaB:(_T\.?gq9^AdA!X6bq>#P3>7lQm+:&dn23Dg-Zp&Fe
%P[a1O+Kp(gr#M<-RJD<dgrJR/6J"1tnQ/#]#NX<*>&$'E#V^tr-FqcemMfED^H=`-dH><4TOmj\2+TS@([&811Qc+M'uu^BQ58m5
%(H8q1Hpp\rS<CkaY3PS46&Dh!0d)Z^(F$Xp@"snP9?lK-"3GO"fBft7`Ua+Kk\LGTnPSqq\ZV\]dSrWR%g*Nd+Ge[Z<\0-k+#Y$c
%G9-M,`80%u\_2D1ecn[Gi`6=dTMlGjoU"_(2A"hP]#ojI:QE`']3NIe@hdqQbNuq'K\q$'/;,`E?n><Df38XED7_Q1$)4rjOssrV
%(T^b,miPE@TR/+h&<AS9+k<:]R?lgh_ua\FrBj(>-cFn1:g`=k*9I`3n_Vin#g=>#Ts)"4'd$s^qBqBF3:2ch9g#Aq6)$46%tZuT
%'+d3INVftbd"uK@9Vc><pW6fr5Reaska$7:Vu!*j:1b\7RM>dV+cDe_%%SA4-q;1E)+[\u3$W>DIC(^%M3JQ-qO%&9eu>AP:UAYs
%9ja+2#=u%CKrP?CiHNXurr(F2j-Jtnl\RV\.@r%hC)F7H98l4l8;Rm"7A-niforaQnMt(6OCheX`2V;`*u&D2Se@_-"rQBXY'fGo
%l053`3R,.?D1V5jO(.RuK9])kfDaI`A!LI?6JMl?B1S;)8(s$dZl6kBq<*:^#)Pq?j,P&\A02YJWkk$E[W`.he$N0aniG3`^OuNu
%$g<3D2_=,8"s!A^b_rZOfuEDZ_!9,9LpDgbQC8)L40',f,]JPJPs*(nI4QZ$0#LRt`eB=N7c$?8"*"VXe>Z@i8;]na5XTN"dA93&
%;Hc$)2s//:]u17LlH=!u0F&GOd*mD.,Fj[O?keSF8e@7Qi;maVTYEp`!>'\QT<iggq;l("Y[3t`$-N_`'$W=jX=u6?K-W5qHa]Fq
%(E&<B>LLj;[Q!D)i9eM5d3K4)&BQb2<(&QeOb&T.)%pHm00pb"+GgL0R`Ni`O>p%!"e+(!b-n.6QDAWK<cE(@Nh-jc(._F3,V^Rc
%6i5MmrM!uPZ)D[qmc0&26Y/d,)ToP1^[9__J1em\ljD!Tr0klkd;@Z8\)sh=>;qcfS1Kd966?UiL)""5^`Tm]>/eQXpiQ%SS00I,
%oMXj>LR'(3lpm\/L$ln_>UcGMDf(*]':q'8([n#rFp(0/<H!.kC)1qU&W<5,)K.\LOCnd(a6dd<DYedL#[L=2l@#'`q<aOkV#)p%
%'s1s+rpF0C'!Wn^i)<"S'(e'YITo?`+iWX!W+ET')i@+UXS-N[U"F_64.-YKDh*9eB30(4j,8;>S(T$l=gKZ,E@pA7kZXipaD3ec
%ldp1NT/1dgr9[ZW,]g"J=4#ptHQNB6fROJaqhW`&$TMCpLu?aWGZsh,Jka%sDZqH"5;0]a'sqF!O:?VC]*]1Mg4_l!;:fj"T_Ef7
%HbVph@+V@pV8)LUa%YgqXkDGTMg??bFKXE(dlW;'U=/7K/EVpfo'&G<K;g.jO,EhQ!@EuFN,YVc9mQQFm_hM8\@f[p^QC(Q1j@e`
%,\2(d:c$u*nfpr[V2gsLS4A6[%($2;.#&1hNeCPZW+B_A"7\C-(\6gHgf@oY^?S6a0#cDG-?WL8Clq6AI]mm=B(gSlcJ'F&Uhq]P
%/KAqX=2dSN@YmGGT,0A`DBFYC5TT_8NBY>SIfn`s.&erfl`dD8r>#:$q0okuTni.t=>20Jq+r+`r!tQOjiQeT^t9,tLK"L;,sGGP
%EK1%j4BPmrm":>B&uHtYqf]4%L+e4Dbn(V/FZN[PNL'NN3CN%FrN70Bh*p5eH6f%u7nV*2pN+l#[1>__#s,W\?mS,eMa0@-dM9GI
%TBjc-$e7"o#_NXgYPl;O@_!dU2i^pV!$<fR-EZBL[+\=aEuqI7,u[ifs"TD?P;PkaBhWRQX<V0s5U:a/UZS",+DN5oc!=eS\H<]>
%]4gWZ]sq4V;@Y.e&!s"aF,.ur&j)M@@.G(6e22Bj$a6Q>dbH#%[T(0SboP5L2pmHb&I_5`r1K<=2+Tfuor:HS6ZYagC@2]kboIF7
%MaLdKjH*5D9`2!&lXQl3BJr4]3g'2BF,)3ueu.Yj^sLjKAstf'FpdOVoIsP!8bCBK5BCeM[1I)*1-*!k-p+S+E>KJVmI8$jk\'2J
%,`0'h!.J_gmd,!Z2DY&%R3u_(e\l*X4$lhbQXD<2#VubsjHX26P4O=iq<Ysue%$s[gEd:h89AI4YhT<.gX3a2h@@;kk:onR#?n'#
%fNV:qF`IGHo::1h&FLhQ;`$ji[j_R2oQGn`hMsiCmBAoY3MVXl^K_QW^8@V?V<;G]p5tP$,EPs>Z%cs`2NgD(f.UYsGE>Mepo3>e
%$%"\D=/CUJ-k`+E\n!/K+jNZ\Jf_m';kj0T5apY"nubb"BfY-gNijW@:V9r"p+/;c.)S*u^*Z2``s'+o\>V."d?"6[,7rSeC\kEW
%EE9568=i0]`3<Nf88LuWmk&'K(Vd_$"q-ad=KZ1*"<#LRHC,@Z*^f-`dN7L6IVeaR'*CFCRpmH"Yi[to@0:Mtdj,'p9aID?#S9FI
%kIH')*Q?7^F1_LOMLuc,C^0Pj8ge7IJa`mXZscC!1%LD$d7oaQ"NA4!)O#qO^0G<&9>](SDBeTo>C-E.QiJGS)`$)::P`j?Q)F'V
%IL'+5daV;TXul)$&H6'h2D";F#QC7NgP(/bDsI.*#)R%7&h6iJ5=#7g[jIV0okc_IDQ)g^fs%dm!P$&'(MaH&2OVhZd,4C<($4tJ
%pKVRi#UjPfk,BG.j2B;<FDq=N40F4N31Vkc07ke0"PAS/"f8S:*!o1q]ECg%5Sj.f>4t1rI-_/,ptS"YTt+?qj75QWb2[a%Ojcu,
%d0c^@`h>>1]+6H\"oEj%N^Nd<!D;/V@5b=.#6S[2?[uRmeelJB-HIu0nEE#&;for*#S.09Hci$8&s2*7gB@EPGSrb>P!fO\SJC=_
%_caW$kNnI#!om.+OS1;Q+US&.L%n:Xd5[;nIs<+`8;*$,n1%Buktbgp*&gI]'6X/ie4PBRcWcroWEI\LN'[<]A3TAuFim3DE+R"Z
%nrXDe!ai5\ph5N1!e5/pQ,dL>R)nusO1A2<,"25-d\>%!BVF4*0Zeo#,7Gh*5F$h;a-"*k\>pk`R?lV;g$Ffpfg5H*KZ:HcNUd*B
%lKFmg6#L+lQ1>6SBa2X7_J<>tq$0I>9['D[?5b2`j$+%`K\`LSTaZY;Nb&1A7H=st$SP^/s29.i:\&s2s&66R3QQt15X?,k1s=cY
%!qIp8cl_W@aWL3O<&!?V[;"u&[Y!!fC8[X)i=@8K_ht$pjNmYLb9)5/LOZK$FLH?=3)fXR0.[,dPgJaMF.GJiP9/VVG98inY;V2"
%R$(\3(t;J,gL:D$_ht$pjNmY84T(?Z>7tbX=b0BrV2;.Ta%`"1g(bs?5??0(R9]imckdKj)H<M*O1-nn!AFC/LbkPLKI%Ni2_65[
%X[[hU=NI(c'&nOk!QMXTR?-/U$^fmqe[uL/FOl&+$/oGEafp<AO8GYQ)q5'PH5+*en7#_tE/S.U&=RNfDHOu_>`QoZP.6,N9/T4S
%L5Z;UZAN'6-:`65>_Fpaj=f>jOM/\^5,S9NKJ9YP,n5SqK8?G.M66HAY!b-o*C45fA(9jpfpUS#l'l3V>UYJ*f"*`Of?!Id;f;^,
%B*6EK7<^JCk>^h8_>pcZNK"GlPaDsVOSAtXJ^X(9l$%UWb(3rk<qj\"Ke@AV2EF'k*.+u#>;AWSHG-1>J5B,LaNl/2=D.gopU%M!
%)0*`2,R#gLb<c`GNFp)/C?T3,"W5CG6DuC=Uq7obOV(@&gE_5u%Z:hd^:/9$(8C5<ja^%6+_I7P",s+'5^olMiiXAbQ(E&[i%'GB
%=@BkBf0k?_7T%((8;XrT&L9[m!Wl(b+FTfAh0kI&c\"u])q6c,5om2q]"'2e?r']ti`0TD2^V@NjJfVY@XN?'$d#VrD@InNTlY.4
%CgRXu#8^\-$pLO\>Qaqip]a<\hsX='J>@9OOO2IKBL]ER3U/7]p#^&kI?rN@[:6%'Ro)Q&CD6#8Fr/N>!J1+BU:6Z2a)#*9E9R9/
%$TOSH*$IBkEF5.k],7<HZq+#6hLtH:L)t\+lX)%D\M7hrDN[UrS[%`,J]p9[a*fbIF=-L#d-A(r<V(!FMhK$A7?MJ@DV$R!(@CI<
%U"`""TWtKB90Z5[G`uR,Eb[0A9#e#B%nY(h]CS#:jV5mQI;IdY;/WXea:]po:QNM!OB[Gf*/dXB!t)=r(O$?W5aHf99`u)C[1H!6
%`=Z7LPQ@,Rc4)'G(VM0sA3a1)(6>k0lbc^/7W&?+6l)P0`0BME@mf$43EX"e$B2ssB\X.3SEROH.SCDU9D/f)b@3<fZ8Ac!"YXNj
%r;tjA,$V0cU.WZ-KU($WP&\BOY2pFi`CS!]&aBQ1)4\]"HAE>&'Ve*qEs@e,?Z!DC:/AHJ&geTqa*85/NNeo9WHMe4h(gT3RP2V(
%ZYb*W.f:(Dm8)cPTTu$Beq[$QZ:W5oRV1miam0<PFL%giJhFAC\q,5pe\ljt&I;)e\bpi!Q'RIN#=ncqd59+n^(]@?;978VZ907<
%.jp.F"%#`/OmWu?GbI?FK\o8s<DplAPdA`26.pOS@_o8&Gf8@B]_g!9eU1*Ih)<>j/o,PD&W4eM^7_4N[ceqXUNq3uOAoE&R#T+3
%e',K^ofbO[c:#Qm$J1grWp0/!-BR]bFU0l)eK62b2bO3oabo`r8l!\h.MoO-lq%@8ac0Q`7YamLe?GY?8\7pZ->4Wj6ri<FhIt$&
%CV*FO/Bn'?;@<o_Kh^EiDZ%4H.V<?5PbTiI;g3LPj1F&;Q@._&].%0-D=^NUQo?1b@mWaNVOtJN9HVBuIB::)Q(I!LeB&R)]:mGL
%+CfPB7V!-(:=56rHB(a<d?5AoE^[1nSQ>./7Qo5+`t@u83e0Cc+sA@?UC#aO_ZU.NlS"L8UD]%a)nMN&_j+fo;Bp/8l4_/">1jjt
%hjP<K>bj7G[n;MA,>BQsnT/mq;YGAXk3>>U3g+W/?"G6XbrRC&')0dVd&AW`l(aFZq<5n<29s(0FQC&K*An'Aa]9r1jN1+dZ8adQ
%CoeASc?#kTN^0L&(:]usUthR$oB;2q$\C7qA:aH-BDFM.>geJa,R8+?f5ueId+hcZU%HnZeD,1IDjOMf:;.3@_PJ._47(&`lC<PI
%8lWD+kr6l'MWuS6+SXPt1t;F3\nE4SaHam>@ueC(;^+jQk@qnO\Dc]'07?dMAA'Z#q<eedhE,]7d"Jgc^*DNsm"Td=@kc'ZdClUp
%@;F4VL/of5%j$JRKnn%IiF1)N*2,Q=OWfU3*Y!QC:8A&^SKcO3D%DoO*+_`!k8;nio&\it8nT1gJP.kjcKsO8B%8e(SMcl#!_iI^
%/@8U=2Dqj63T8B':qH9Q)T,$1aEi!#grCnW^(GC!qRo=9'>!"%GeWY0"e6up*E*L;."uUrC2qgf%m1"/h=D!Jj>")+QR(ZB3`Eqq
%M>i.jOmMr<`b-PUUD_6,5F;5;F<b8%_b?C0V_&eZ9=N[*j1.&3\@\_B6Rd@u&S;['bts.:'=t<uICW#0/%Y+9o^E*SESW;Frd9-U
%18&Yii9uD<C]_bjci,<'0b92k[90\A*r<*kYIrB^rQoN+nj7.W[`]cjj'`-"AKD+$jrr-CG,JrCq?(<kJP]u#,_rqMEsGKkU-fa'
%N\YS+RZt[a+ZTI01:qN:"4+IOUG;KSkVgGAm<S'U-#WN.Mk&-?s"XjUJ7=?nU%>k?F(3u]&:!WCI-taR'6WHe=b"+o_^e7\\o%@u
%QgM\gK$\?UZWm4[3sl5^knR@PYgda!,M3m3lT3V`:bW^7e7=1R'E<A0%$GiFM]n3up3/m[#=+GCpMNinW]j#\gC-gb]1XOR$7(T_
%SlG7))gF'07(Nq<+B]9rP2DS[K'K=DZ&?5hP`t0X79JL(2:'K-8Ld"O$<fdGS*VL8O,8R$S5s;-+42>FW"aO8;+:>(<?OBa1XXtq
%faq-f`1I(Ubp'M@":+-nD'jggU@&)p+h;t=.Q<uYpu6e:DM_L^F-J@(JR@r\da0+,(K<7B19PXCH/Bb"32PAU#7?4IP1>Bt7^jbc
%Npf$)^NJ.gCj;C%8bNo*Il5"]*P%%%*1iA=#Q+P?H[Yh`?iT`4s0q^Js7LmAo3_OTJ,aHebMVjiBDi'*lW?82C't=S*dI;F)p#Vh
%YJoRY*ZH.D82^^PErF=0(&5`GfDe*Z1pE"8r\Kn:,BqWjJPq!-+%;BNX;-q>Zo\Ui7f6`NS78-Zj\,f8Fiuli<E9pRKTlY!+>O+X
%SM0r8JGV9e_@<^,3uUJQ0,MlGZ@UB.:3\t(,Mf4C*?.mTAiA&C%7ua12@0(f<8@M,'G\9qoQLYj#<l4/^R()U6%k>B6IlG^P2!J>
%VBpcpXJh2fY1iP7ciWL5XS\]Bkn>_J>)R%@OJ+c0%8=GqiUnM^<d[dXT>F[285>Rf3K=4;6$,=JO7T)X?IKZr8Xa4bUJO"!-'1$7
%C-ouE%s+\d-m5"\a&(>Q<:*6)+J/5s\25WjEjXV@oa(c=33baIUh0iOdfpeZOI.)7GliQIF0QMO_Z6O7`miMmaBbF=qQ]f@2WQVN
%G`#\YNiT/6=b)Y\(FnYUb3jrq8@e])>W0[F$g/'+Ype-2<"l:/MJ@iO[3tkO(rcs<^A'&i,8_@7+[fGF<<?tq*j2pEn9(^#8'!$_
%/ZmpHC1kXR",$IP)LWjg[;1)S=)\FRW6J#q<C%n6i07D"_H\uEo,ls@g\(8V;!>bO'O..",)X_U%mil`&JB[MP^^s8).AC.&5kS>
%emqje6m!pN,gh]U'RE$S77hrF/@.=s?"\a`/crOZ6<t((3tWB+JgeTA&WRf95oQ!Gk4kYqp`YMW>TfMLL3cg<:k14ZP#^q"ElB]]
%jCu'/%_?+?p;)4dqaW=$TBndSoJ,kP,4*YlgiAjB7Xc5Nqlf%Q_hI%iKV>DJE#ZG_+frUfJhTa0,!%96rB*"Ol#QKS65lAe&X8/7
%6Ysc!+Kc>kqQW9d&t,p(g9pP[_X(do9F/"B=:Yne?r8R^A<#rSIk/_0#f[6Z$JA6o[H9'b'7)-Io'!$Y!Tn8l$HK$[<rqm=55&E7
%Ee`WVhHue(OEiPJ!KK(fJL"Ql!FJ)[;=f]%UcRISDGSP+;JEQ%RtGWO(%ulG&9B"L'n15DD$fR8fqMI9JVc<uLoUWT7rM.So]D*I
%V%2P16!T2Th?770g.%,+Oj?"e-4i]t_m1C6C:lQ`d#h)Mhje]]RhcD/>^j7lEgc.9)9&dJ#I3LP3ZW-6,4t"+,ek2o&4q,oYU/ct
%#<SW,>4hhLN0iQ7\e%AHVP?/OL*$OXB+mp'gpmI4\cq6jGP:&YOIr;->0N]&E6MoBRFgfBOB5utU"S0&=%(+(Od]23HqEe1+<MpM
%6"OY76%;N2lo#i5ETc_Z>cc;m64u^plY\[Yn<8L$dj[9_kBBMs(708@g[BH[GJ"8<7fTUJ>1pYT0KBPfLLa%T6Qqpbe:Yn.T!Un1
%]*%[11:rD]I8'RhC$>8^L^;U"L#NRIXmt*UP`BZfA;[FD;eA9O1d[*HHI(H<aQTruN9,k*P7?W)>PCDV(<H4"5]_1t>>F0f[[U2u
%r"\aCfPt%%<,WDSa3b&nMG:0l=1:[i[Qt).G#LO]Z8Z;u='r6-X@)8YGA&6M2/K/DT^Dm8^)LaE07(f5I*D<70J=kH%UI#\P?-R%
%ct]DZ`#<lEVa5Rg(@g[(@adY?J.,uEZ$'0ePP'$Q&4_SLJW=+'B`*G0h1;X7p<:4FFJZbY]EeTj._HkDKI-LR_\MUaXpu`'M*KKr
%Y]WN0Wbl;[jctC2;O/IA7]a-Z37V+K,Sl[:\ueZ!gDVmX.!Z','`^T*?f"#oD-[\]LX;r((K<ge#=NT>Qd9A1f;2\[R-d@/R6UnJ
%k#mAsW5'mQ-T3-Fk!].TLsG"KaH,n?EXIZ4_$sgp6U?[t/.heoU+s7G/`uO_f?J+IJ*$RgCfXR]O!6,0$MesAA/eL@E<0TgED>M,
%q*'B"TX;!^**q#3;g/7Zh[ME^(VSoU5%a\4T:ge`5a;sMo</>`RW/9&:[R79&=M13H>'mF7CB?,fk'%!m=3?Z$0N=^?u!V3b%7+2
%=0R780\5;#Ap2[JYX>asP4gJ6;&Bd6&NgYGZAXCF3!H.[S=(Td>,sq%oE?XC\<)XL@Z58@M'+OV/U;s(C;XXbYt,sP8]5hjbHik1
%$V=`rm6Th9Oj*tr>oTapK+'-E80gO>8Iu4NYU.s;hRJ.XMD%#B+%kph@o>+mZf0e/=f#AAjMs,<4$fbjfbsab,go!^D=ejTq3^d^
%$!%0J0&@`8j-N'RSujq$;TuRZa[beBl7/3dN=<_jWiSN0,!Dp*m%Bn>XYZ(nQpC(BeLNWDBN-E8$c,o&O#V*N+_CsK,`\DJ%EX=\
%_7PDcSY0m&MBo;;3(,c'M\P9`FdqaT5GfB:6Fu"Z=q0P07Rp+m*g3d/$mQeOV']_#a<UT7L50)ZhO:<cM4I2fTR'mK#M7cFXF7,%
%(a>mAkn?@F%BJNU+Io>U$[$Q6+k@ZfiT#iVLp$)B`D(lb^`P?onpf-?*:b7a-SatKfdWaAKBRl<j[!q%%+8#sYpD<l"_)6Fk\jhi
%#+mr$T(.6A7+qS_Vb^^&2g'&Wf?.2>=rXrN80eSfh)0CfJ89)n9X'D\_kD2o8/p2<5TFO)FaT="YA:S95^kQIhf2:uX(Z[T.LV%<
%m>8W=h::YR+IiO27!;iKaHUbf\ATMPaPp!$GESW'#"Tcd&^3mL\ncKb#X_69P"2slMPcl!77TDc;<<*A)ZTH+3C4InnBu!a;,A.9
%XQ,8=*YLCar"lsJ&2e,J:T]$ZLs-e6)f0%A>@O5-1RrIshG6[2*(=Bu<:GVN]'af7aU6Xd/h+6\NKXXJKO.i11dQ'cpUF0#S:pK"
%?MfG8JOkkFP92Q7M%2%$m%h.G"Zq7t8kN5@4-1R*$D_DTIGF96^\h@srj0:j`"$l49ao(q!P)LP3<p#Sb_T5[K(5f&8Ye+sh?1S(
%,XUs<K$Fj:=0Y:<CJ!lC]\CMf7,.bjV;7]X0#^ZKfemXi&K4Aqc4+;crliCfM&GOCA4d&\CfQtE'ZNe1lV6_2K#A/[Dk/&mraS:@
%Bts->aG1p]]U0d3ORC?oCD0sJhEg-+L)3YlIK58SX5OEYXWO:Xh?d`.;aDJSBQY$>Ig83"#VcGg&sWuiIbXc&,`X!5hhM6(>RmGl
%p;>oTR3ri\,pCHD[AY90GQQ!A"/d4&#nl=(I;Hn%>!XT"/fEdPpE/qARHcRoi.V'9;ur)=Ag52g(Leq!HlSTf!4>4\m$h[ZOc?kD
%)@'+WUO6&`RSWU0?4b6ojL#I#$98Dr&pDTjH),=_&lYS@>Yh7W^G](?%Wr&t0\-kDU-uBC`FrYm77tNe.J(&,,VUZYMBSZdpWsij
%!cL`T<>:gR(0j\;+moMlhTT\0[#rFt*=+j=f'Z#/9/]/CA>h2n3;C>J.7B23".iu`lC+Tg_'ZE!W\R;QW>@qqf!144Qu^-5d"*95
%b&O04C,A8f>^[0p?AqE#,Z]+Op9(hu:pT_PVOHbLGoup6mt)stLDFlg.hp)q`64,n<@D-!Q#ARE5YBhF@"D-32\FP@0W2Gar;loS
%^`mTFk[]Q5dm;>V\n;3@3K:qnrtI'#4[gJR$(PHJ_j,n:\dl,nm"&NagMXP'^_GQJg&m$*1t:HHN#,/TX`p+B2p0E-Jq\g"3K.G#
%$jOH#"A-/\'*/-lG*!dM#[<jE9N^;SSC#<hheXjb2CQcln^@fm21pd+$UoR6k`X"?%hCb_=r5\5T5pHfT/_WnU>ElRNep9$qN785
%)@Ac5o"n=QD@`s68;\8ArA)@[$(#YRGR<K$KF?\AQr/'(oa1Z?hd'N&*JSB4E:cqf?GAX*-m41hc-mk*!i;6%IE)tGrIMhHH'-nr
%[0&(ek6=ZR>Jc>p$?RCTArJ.'dBsHY'AS-^<JB^hVuag@]C;N[7Gp\JbGqKS6uu+FRiO9?+hZhGFIR?G1$@kE.-:Sd$)jHi8\:FV
%)FAVo40r^B5tO!YR6C8+#>/M(4:)Pu<bRrp>pEZ\SF*0F5Z5k+eK@X^P7,::3:9l,7dhiYgT.[(khf7b1/$J%/4!qin`^Oe!O;$m
%9D?j4<Bii;>ISl6@aBdJq*6>;XpU()=C[XRdJ/;4\-[;Lm+YeFQ^C8rrqZmIe*(K\D8#"XjsO9jaMb$?%?#H[?)kV9O4o8CKdIMe
%6Xf2E82U\lVZZe#-`g\#AV4Wu)7rskE%K('lDSM%gq7W16uXL6#]$mtq`Ce`#:_6WO>V8mFYQ-g`T"8_d8-D0(sAC+$#\LDX)0[?
%,A)M1S.knX=&"ZA\W1947k+a1;s1AMN$"+C.im2"L@U##9n7TKRSKoQemY8.%:ib_K$K$kq%=mj"/2lC-l6@@KJ.Q""$r`0+OlYe
%CCR<+0IAi6+pNU4)]bO@.c=pbL58\sE*]"-Eo,>+DULf^RS!k][5'_EKb/J.N[Wu801\WbE@%T>&3"t_QY\X!j2Xk+5tEIL&p-R\
%)P$+!>n]L8W?MV-p\5G"EI2:^WGe\3jE]A@Ed3Pm_gVG'h&(bj'<J%@lX-ST9]'%bn#2/l4,TbWlX!p4!um;-O2e+AbekJLP-<Kh
%:JHL-%7N=hF=Y<@C-gM:]B&8#5mik;+o!fc\poMnpKc]i*D^SbgEIuhJ%AM=Fam6LFbPPZ)F$Uk,m;+F>TdQ2JSkirbfAuZFPDW8
%i>!A:*M`$q*o$\ms0&'i/K(/[4V=07b)F(D,%i0'rbnpJ/KmbK3fug=?(_-@aK&%91:j&.a\D7XXG/[N;c.R_J2mRoLb=O:4K>:R
%?6?X-V_BbD<ATsK=qJ"4Xf0`LrYI:u,)-(1&,QOH!/g!0K]"E9C@l0fNVkua\,.i.(IZVS0;&c.<D:>6RCf87&bK$Wra4;o><Ar2
%3a>bd`Eb3,b(aQ>QmM`sQsDsal>OCKI4?]r%J)oQ]^#OV_N]s`TW((L9s6jE3.tYhHSgsWritcN56bcq]1N/sX3j\Mi)p'_fboX`
%^JC9!5S.T@$\IZmW.pD\O&i6o;,_u`?:>N;$`*JUV"[::KR`Nn[%Sok`'i@k:^"W<bUeW<[^50;0)[Qr?4VUa;U,_1*,qYZrTHWp
%NB/pb:^o`ojNI9Lp!j.rNSqP;[tu/p!0#Jt>d"^a%=^n#\J+he0h[CEC+'\'9%V#`('pq/o@8efN]%?I!@0R*)5($W^2ETJb`2LG
%h9KrEer!^^);Q95$X66*bc.t/BRO#iYr2H;+N,^%KYZT]6*f*?qLb6%Tt)"OP*5WG0>!];qXlb0mh[K<17Zj'SOj=0h[P;-9C<$M
%GaDta(ZIf"d3\!:'#.L&pEJU$^?XpkU19=:p/h/uK.I%'c3(2KS6TaV@!jO4/ef'_/JYkYra_1jVFom'bmsiNFbr2t[cul[qZLrT
%@H9s5MX`$Nd8W3UErVZio)(Gc<oWIG_j;nEEl^ac[1-e<bMMMf9WL[1U[es*&/f-Xq'9j]$:>777XjR;BUZPe+NXt/1J*gLh.CiZ
%^JNu@K&Pa@QN%rleuW3n\kH649sJKE3<K#]aJ*HVe-lj%Cli\UM^AUtRMS]%qP%\jZ.)^<#-KCRMuWU0]Q@-k6KN2KObrYY&3hp6
%*hPh4X,9Ru&(DsXq0d"URG\e_!GrJS%=i)bAjO5Be!,B$c!MT7F+l?q9.j[!NfmT,_J$?VO9D(/FR'$B5;e\gQH/\>ocsI?cQ@t#
%PiIJ8Jtr:VTnj56bRYKpEO",b*\8_Vb=&X-#`BlQ3QBXS`uQJsPEdfnCC>-]lCX64^W#E=Nkm+("qOO6qe&,MZ`-05U,35\ghOt&
%O6NsZc*0$K1+7>N,SUP?VGrDU=p8q49iI-^0r2m/68GS!eY;"jhR>\V43@If&CeqCb1./OW=3dmGe+[,/^\4RG9nJ!69eZ=INhi"
%2pBA]J,(kW2c#nu28dVW_>mli673PG_@ga1O)ZK]aVJj#Cb1N5L>A+tQjVGB(nHkEOaoTJ$u@I'Huqt^4sX5I<+2(b/]klf)[3h/
%j@nLU@kRti0UTq(*6c:LZImr*+_+pd+r5o1@ps%VJe$*F>Ef8Kkq-r2#SokH94o#pTk%RKD-ibO^-qQ>('`.9AH@XAH.br%@B^8g
%dh<*6@#-/H_MB#U`U!qDC%;XO0Pg\F],3CV;lp,;_oS:_(O4tK5)8^G_eB#<0m4Um;!26i.a$<Z%g,@S&iM?H28l\.j))LF't([G
%Gg7]rY&$%,B#g/)BS7`W]#M_d?`OpYh+7[on9$Mp;^F;g*$Am&#iaB,PjX#h<dq=VK\!0ff,eUf'T%X_S;<]">NF@d,;\=A$,XIi
%3sWe,C5@O_n/7@`ECmun4H<.t.caY"oraaA=._giV(m=-Mp\G!bL@n]bH\OY16?.8S,\NJnId%\R`]j$N+3@4MYbPiF:cbT3+Eu7
%G:$KoaW#47Jpt'RqG[JC)bSQ)`n_s%hj*(Gg?iK<G?q]fZ.n6WL!fFP8NHF<2:ZPod?#^<h0mT#SC_-ZR/N`#+I%ojMM[kDo<9L_
%47LqlEsEJ>)Dh7n:,L7:[q&H[QB<QmH620Vd9uk8@#@%LLHko?1@@<P9=(q"5_<J'&o^-l'QNiK49UfSp#Of8e%D'H$d9*OAlNET
%ls=[W"JF8;gZ4KSZ>FU(6lsb(iHeXp4Aq<;Uo6U)jcO^+>+7&(&Hr'X?*\2MMK$^hU5:^;%RE!GC03#SABH,"OZYrYD)uu"8b!fI
%H%]%)cPpVrSu4.Cq!N=@(Ui`%#j-N#61P;I92]>u4AmKQ?%9p?5ZIkAGm&Y(HS1<iP0umQ9__QBQi6tV'Hti#\sS"m&o8%f`7#;s
%"]7lc.Q%UVF\)^th$YKbJFLO-0gu[>]iMmt_<`k?U'RGT[61__kkbP=^_!KnM(W1%LIb$dA%'S?ZL_BkC%WW)/)@u-SEd1Em>s?R
%*d@')+h@mr[0mZ(fd6+=.R#qZUSRdR`g7-UDVj44FS5XPVh`ELFT2tGG8WH(]PE"jI(VZ?I;H]Y<');=6f>IL9:q=0@AT<ar6^kp
%m[E2IO9mFZ!Q462[HF:cF>Ub[`VO*.<7T]W<qR>pMl&elO$NYj^Q!2QO%o>c2LrImF1^<J_WX_=e,"eY,Q4C_ZjJ!AO!H>[J$m,'
%:lBYcpZN.P2[:/dmcqs/elA3p^g^WQfNl^b<`k,^YEt9Eh](:3*7e.:p>ct\m3BWBqPdDSq<nt;2k6m^E/.uA![?cQ6%k$nd[_!-
%,S:$3bd;0%M%o:6`GJdXP5jH9I+j`O_q6N,M@%/bS%CG,Agou`-Kb*0LsIF.HCES+p-t@%)QlY:WZ_M3lLVL6MlY^W?HK2U&aS@5
%/7n*\mHdGUW.pMsbL4-r12s0.<rrsp`U59Pr-7.*VFE[clUXsX.qL2a[TL)`K]giJ2!!Z-obrjFWI$m=oQ>g)6>bFg^J4@Ii[sA3
%nOGJF8FQ=i2+\FiAMm8*8DqCGPf?`\YVV&kEdA<2A?Wh1Y(<:.(1hl$Xm_HVP1FPG`4@&b2<;JeL#E(#Wb4-^ZuKc^1q?DbVWl!b
%&1A+lqpg=oeSfeJLNr>6)t^55J&,MF]9cIrdZ?uk5/u1Ccl5f,3ojHe#V,4FmC.pYR\l@]$gNAt^>6d[M<i9ENd8j<Xtrc(DQZ$"
%kT\(_>50P?blT[4oeHJ<`CLZoM6dg?]/I(:)DqZ$Y=9&Pl<^5l&5&#\4]oPUI(`GVj&)7D@pJc[E%uB3fidS5eeB_bdiEV97+[?T
%8kSp<#!H.nXJ9UQU:ae$Z6i<;Ro6k<X%,&'>m.8CEDHCJTQYacZ"l*mg":;Jo?oa%=!8goqpKa8H@(5^6Aq!MVC%hAOr9:<KEO)_
%TrbdF8f$9"J/9mD>1=a5Ub:DdV-ge6im+%a%n6W0`HE-N+XJQKFYiL+$4RDTfY*fqZnJ;(NL6>VA>r^qlh"nC@+I?'.jl#8D);)G
%>#dWf8DGM%bN8MA"E0:E:@RpK?2S:Y?K4-U?"H?L\*K[XOKDM&DChlt^kN+NTnuS`?!P.W5h"/2kq*?m;4FHf/LMg5=R@e3Z`_;6
%fOBL=K6/pAXZ3)5$BYea1QXG,??#&X@3f@e'Y[lii8s(cOq%A=aR+Ylg^`OK&_k6I+ID=)PAM!]^9]OMq5pTRF"*db'jm%-\mFIO
%R;UuG2+m%e">9CGTPgZ(PYp+VEsS%nFIFYfpCfluW=)sK#C)fk_iEAF*4h?qG!P&aPB&b_T;Uq8;Jqh'#JD3bDMS7WfmmR[Lu:ZV
%Q$jh^h(YPT)^6J-NI*:e'1?k&Tl`!"eFr+t:R'p`7ST8(X5#7:<J,pfPkAQi(/m]F#ASEcMV/]uZ%2LhCPIc75d.4*$Fq0J;6u>l
%mL5rQ:+/mIM*G"TnrAn&cDXP64@>0>;^k7f>^,EQUa^#iWEITO9CF"q3U/tX(WX<Q[&;h6]+iDW/A3j(dQ=-b\NI@ike$KD-#*"n
%\i*dp/PI6d>]6FAf"sD)bHG1=K1mpHO?Up=jYiMo_F(J0#aPAnlM'/iY>JIg%@H[BFhS@9+R;kN+]q;lW6n<A/kTu+N/A#;@p*3T
%+)2','UPYr<4:\6XO+\7"6hE&@1S:N@L70]C^3IOKJ/@]7@S8F4<FD.![R**S;B0m^<GjM/%/Q3dM>KKgLAR"a`h`s^d[S,JYC!K
%f8SgGdOb<UJ!hqB@O6_q*Z_Q*''`74HppPB/EU=pgb+]Z:nLI!X5%[arRYoBM:>*.fjYgV>:_\kBH,umeMuP.].AI5*lHf)Zlr/h
%Cp>YbIBga8NLD+cp_Tq(Ks#n_q:p9W)PQ%-9!h/Q]VEsYdj@[mR-jOqfDKh_De0%T;@s5:4d]J>mFj2?0Dr7ncH1JWE+Z6?\)n"L
%JXWCFU$rs?qB\`0NF5EdfhQi8V^6iI%`Uc$c`X/`aMZDDP>B>'$p-b2bD$^`JL=(QGY!_UIf>28LqKM-nt%)VS."X_.:V5clXLKZ
%OX"C'D5GX!Xi&PeZ,KU"%$7#F6rV]\qiW&<5Y2Ak`D<1aBu]l&CDRgS5TmA!fM;t<l/hoZUJ<<M@TpF"e=5,*NJs=#;;tJRZ/LR0
%5S?/dEK#_'4kfSa'?'??G@G^**p@1E1S`q5abn(=oBKor6$gUaNc9:"%63dB`eqd`_Am-E`^EAFR%PrJf1YRb$c7S>CHUEhEcB],
%,EYpNLmcCa^$-DcqJf1l,GD)7Ub-iq?hB<,&*XsU<:l,337Ted)-8P%F?SXq=,9.g7SLMN-gMYT7V6+$2</@=CD]p\ga^).#td'"
%K;N6KDj&@/\TiMp3r24g3(.5HkLQlQUQ<ra6O`5HTk9NX1&it,o^L9Hn&A2#=R;*6IhC7djPlMmll%@*rba-V+%_5Frsu'=AUj/3
%]V;@!Md3V"oN"_4+H!D8&?j^>38n-6]`4)!l>kK5CNsR(RNuR*;'er9Dpe6@&7=h`8u\uA/:MH[)U^?4C/RH+f$4.21$rSs--[5Q
%1>0W[oId,N;scGgdr[Zl/4E>d5Epba-I/B2mWqa]ETl#_-4*g=&^2HHD4um=deXWR%AY%O;:oo.>/"@cALFL7_R/LJchO]</kr/h
%%VXKp&j0ENEV8*hr8TgQgZ8X!SZ78:&k'iB'b$i\fKo+-pHq_QlK8G\F,uu?]74'M2j"s3Ht#u<\"g*uA(:-lJGcZM`S6b3Zm)39
%_rN(g$T3R/eS1L($9HE([c]%RF9=SCe!('>T,Y*r1ZA0jHpZ!$d2OD""S9IA,9t%(C0F+>@;jjts"Zm9T-KTmF,ZQ:DSgq]<E!K*
%3C$[#N5f5.e4";8XSA=ZW4IFqL^j>q,rh4>fE9UK&OQ=S7SQ*+TZ'lOL+D,bLSeo3r>^t6Qos:T8:-e^cuaA.MWdbM@!7-B*?EDL
%F`\%gNp^Hj?ES_;CUQJ;](QH,RfGbNm`59djpf3k]V9N81MU"HPj!hC[lKTUR!"e!rHX^U`(*1>YE"ODI>h$jm-WZ%P"pJWrSGT@
%c*H^15!EFF5/5I,ZpTH=[X2Ae?`195%?Vp0'tX5h;MLQJ3j8Mh4jKjm++UmFk-?7s2a="Ked!BRT$K-d["m/K.nVc#$cP5GIO%_e
%n-]HSG/%EqZ++tl@*P&/oF$t\e[o2X7"U9O03GM8J+s0l/PCHe"\\^8ESDOAg7`)0TWPi;HZANr_kgo<$^S0l]3d6Xj;6%=q$#6Y
%`4ZLZO:T*69]Xk)JgWZPGJ@O?dP$tb]D@V%HYO+[qZR'?++D$ZgW<Oa/L?&Lq3V&3"l0'.Z+OT<$cX`Y&&2Kt)B$.on.]LRp'[0D
%qsY!m*6R#a#I[pa/_MBTFdn%L#MUMS*,;u.#ns:hgngBuN[0ZM*km:u"t]$8*bb9j9n04+npJQWX=-F?E4^ai-r@"SDP"\-4?T3a
%&b_?>B%f'.-AgE:#\?Sk"OJ3KM7tT]g9^he1J&^Cc+8oVThS'f,OsB"P!JRb8c;9!KC)cZB:]@.lJ7*G&>US;RlX7V"Hc9-:uVX*
%b&;\f(_TFf#t@WVNuZ9="#naldS@?p1Gna1$U]/ZZh5G`\OYF%!Q`b"A<R">1clp98RUra7%-]!Teo=Pb#<qubA<ZO.%)=toa-Nq
%M2.269G"4I5@V11g;UnQP'l(2+\AjpR$UJZ;Z`6a8V=sGlLCc$%)a:):`:Sbjf.@8I7N0(&s?qiSB]n-dB<C.HlVM/odqj[]Nfk/
%O0rM+1#&F\(CN=A[lFU(8R1_&I5F)RR!3Hf`ot*D)#ShMVM>6nna-09804OI4r$n_.`SWWCt^b]Uai`fn=c.'qr=$F8A/1OptO`X
%k<ld]%e*3[Beg:Qg`6s2=X8&Q&f<J:XbNR00jO8t9Dmnd<]Cgg]S#Z$D.'7@cTcdKp?r5;ff'TQj-f-/"LD33fC\AIp&@FY12($X
%7nLhj]L!EXL-'Q.K[rnAc25RV&PB5cHGrU1ZF5^[2hoeI_,09/<<W)-X33M*-+mbT*4&UrS2T0FQS#i1NCgZK+B<!?C=juQK*i-i
%k0+3IWk8Q`L]6Uf.pef^/R_IL,]_?8ULm\+W8/e0M1E=EL`I\MEP^0oC:Z5)2B?Mc&Hm5Ndfs0Qo.^?b_MV"FH-R4]F'4SH?O;n/
%@qu@*ACJ\jM1ICe0eg821=,.Y-VS+VL>C.ZYa[bQ7$(U)#Sg$j>V]A:94u_]-5HsT[YBLlDS/\JK:ngr^dq'OQN5:c^_k`D(uAjC
%<:Q!_)]YYmL86laI*37*q7th&fBJ_F&E$mT$d8>7oIjQjF2Kdk9m.kq%#eH)2qXY;V9>l.9(s@X,]Y@MOdA'=1n2oUUW^uoS"18r
%R$W_$Y.J1g>@^^HW)!d;_qRc[m/+=@W9eieoD*NJAEFno>!ddUfLcDjY-)g4iPMTA^uD-@:JW4>SPdIck&VP;+_[n-W(Wg'Q7>:W
%9o$5BFBCYdlO[Xkk/0PY`!>X4`!nU^U<Kq;7Tr1$Z$2]Zg_*Bd*(?>YS7oetYuYaC--ESHWsn5*"noHpe0Zem\F.ntM=R@SlP!i#
%m3?pjm5%^FASX:YG6G7u'1<0r6:mllW$rDaWr4\1]4_l^)sVCI4Un$*\+'u71;5r:MD@2)V+n=_V-Whrak#!DgE=opDQkQ*AI1M6
%O!tJRG(kQKWYQD`DM8iihpum_1/r_@OWRqU1X[m28\'/0Vs4&s%8-lbgPWX,j5gQi1jK'Q(hJBt5O8EX^eQ$V9oBE#E-:W/cBr"2
%LaLr."Eq8DoE/:d1g-D2R%A^P56Ma.j64o)BVG+dH<]GFU?r0&8__dDEU.&=p\B(Pc5oQ3\<G5RHeabFL8R;C$cZJ((j;OE27&uc
%-s^CQ,*<d"+X!ZaGK*hOf(;ATp1iY6IR/ph@h>F')'hB%F7\[^O.5pef0Qs/6=o"Xe!s3=#VT+(pRq1JkkdK?:mSI\fM@$_O#f9-
%K+(MTeG[QC6;m$ie\0XX7L5dBN#<inTa`p=@:@t*PdpUOI!o*&C,u^(JbJ`Y[[&aEo+ZM?qMVE$>!N@!R[,IPKbg(`0#*OL&&T>P
%B.&2En,>YM+OIu-4lY`EG.&HZ>Oe5c#BlNi%c,s^e`kdl*Y.0bbTVu`Gef6>0->.U=81Y=91L8fgdM*m:MBOmG']74=sMe$BkdgA
%ZR:\lH\/`=TS:G3+#%d0":&RH?r,E+k\F5pe.H2Oaa.!NCjN_FF"m;i-qh:kS3>eM:3Rcrc5r@`o`o,*(j#BRD_k,1p]LMJ[kEPB
%.$s*g0lNcq2Kp@],S=hg'+&iPSeLOPk?o?7Du)1.KMidcQQgu4WSS-FS9NT$Lk;>En7Bf?DpIj4UoSMJW>iOF.It!;A_gXM(aJ2f
%L0[Y#?.qQ-Gi@b6SPS+0#"hV9rs[3q-N^tTrDm6fS;[TZ0JN&Q@[L+UZrc_[Mk^l.7@lsZ=S3=i7eJVOW*7caF>f9g>!Sa+)_EJ&
%CEX3&"Q$*70\NY\lCO<l.9b.@`p5om\f>Rcq&Dt]Y!R3S;3@5q:JMWs->_;FnAa>W`3[[:7l#)YpJ8gS?'"=4!68q*9hW*,l$N'2
%)/hXs=f,5GhosFUo3j`Nd+/!*&f=B%kLRa:9Xa-o2QQ0/pk[FRIP7:%AThp#>bT5?m<iJ']sYLVP.ZbH4DuGY[n$mSQ\S"53li#!
%<guoZg**0,%#JNF@I$U>V+dj1_<ksc@caZj%C>]D]&o@XQgN3/Y-'rf_mCP8CgrA09@G`8qr4B:O*e=J_S!/'aZE2ikr2dl]F<tO
%rT@.H4k;<W@R,<q#n$#gr=(C<d-MYTN5P:cIP[R7>b9!R6#"/S!L]F/!C\I'FN6;O-3th""2V-JO<j4>EJ9,J6T7(NCD_4S1^jf)
%L&kDRe.BS"1e;8oB0nX&Ltm43)P.Pemi$oo.7l,1-#"4#*0pY^2%8]BW6QbI$t(XBK-;:#nC!VUL>U,MN\JOfHFH^I\4An&.iAV)
%/H`nnAe7nAKrM\Q!Na4t#5X&Kq";LUCT&^u)*l:KHS4RB(,H9H=Dj1b#n7!1Y$_glr/-_\RMGiplQI\ojC"rI5+CCT*->K&J5Nof
%Q4s`q;5%C=$&3n[+Ask?Y/KYLJb%XQm/\7L?c8>,Oa.]a0BH4&:tr#Z-\B(s&P1]pd*0<KRk>WKjE,:I@k<8n2qXkcV9<9rAi*1f
%5-BaH1.kjW?M,'-C!.KUhtB&*%Eh"^L-8GKi'I&A0TH10NT65/7%jocBP16XYrk$M^0k)+?V6'r9@L5=:G,am-B_mLb;^#RTkC7-
%'8+i`YTt!6Ys*qTZc]/Db@M[*7EmVX@IkFSEV%ssE&H8k9*7JBo/_<kIu2&J@I>tY8lsk$+Gu_&[!?WlWO";27neZt;',XS_hDaK
%HZ+4-W22Z4YS<E&#bc`0)UF0MM6O!1GOk5gO*Y&q>[g!a_iaU[T\>RkJ(bCYP)q4]03TuWdh@)Hfcc=#%`*..+C(>hPb4Mo4XtV:
%4X6I/oCP;oXKcGaH3iQ[PAm+b!<qr*l(q5)U6#31N$Dgk+7sA1mmpJ#Ve<k2`hV_goH;oaouqNai3hUC/,AT)bd^C<8;o6aCo7ND
%D&A\SBm%2=4?\O<Vha1i4kXD<*k5HZA-AMGp_R^^@%JF82Uh/O4?eU=kD.tT5Y-X+WB0TLT`!(1EILBq2.aZ=3@XC`p^@GmY,'2"
%o6E;:`s:-dm+AW::ghITmA@T*3VT^/'B$_[[n!^rn2_]RWGInqf9TO)b3Ul;[N73jVET*9ff$_nGY,FGbp5j26Q.@1c$<of+*0@u
%/-aJ)aXXmZ*G-W>hja"\o(E3m6LUc>kFRpB(9f&UnFi7`C6,888LOlmgr2A!E[8OT,69S*b7G/eZ]H:HEo_P%rc=Y/d520ej[`c#
%]0^N`i6g=i.Ki>YcBu*aM#jOm/e6!W&qfA`fT/b+e4mS\=B_Bq4=s/5"VJk=(O8`C+F1fdq/UhA02c7)8.rS=rXju2rd]9(WKVOn
%"j%QYH4h0EQ"G:[aoP.lWEis9I"u`ui5="uKHPP+%;BN8>Wf[ISUq!dl^I>t7nZBdH3JsEaVY>I"M5ee3&Po5$UGCmQdY33+M#B5
%82BO`,\Ca/HC#-q<6V^Y%4OiNpX@*>C`(GT+\6)!@h0QG&ZqTB]/-RJk_@Qp#<\t.M%?!_*O#,^<E$r%/\YTq;&ss@X^U6#6'<o;
%,RJ'KP$o.PJN5+AJg<%r'M!c9$h:JEM*K`N_NH0VfNR5b27gMj36R"IJlnIPfYpF`j-d>1OV+k+GH$i]rV<\iRFtK4DVHL4@d)sl
%^sXKj<Ci<1b7H$=,C/ik6/Dae`JuOU3!VVDZ>T(%<*RW]?]Y]E-nh)C.Q<X(EPF8K,\OG8N2CQqeg-'f'Ji3P0uM9NUJ"6RlV'#s
%m[4`E.DA&h]lW<nRAG6+4%l(L0uO(s4+&1Qp=c#s(,heA@"$N8mr,0bA[MPj*PV@j2)0n-p>T%52iJq_DYnBj(`tfV9@aR^DSn'R
%^!:7fs#K9!Z>)fk@YP2!Asd">L8i@(L@OfX=<#Jg9O:)Eo'CKjT!:#fKJ>:,YVX1!%Q@J-RuEg]%5dU&\(a4NWT>#VVX\tb_Fu7B
%h!iLlGWpjiUUs#KLV8[U\$lB"7cF.@KcM3k_Y,l%;X/U6s0ogCK?Z@?!69$JrYsWL7oiaHY)ukcJi4t`>$auVie<nCHbSWo>$L,g
%&_8kWf\/f6=PM3!`tQIf4lIkt5Ml,SBJpl*9Cr+Oju1H]^)KSUIG'3_QC'A8&PRp:g8]Ahc.kcoZ+4_,e_J/S1ijTYF($D2)^]7`
%-+C=Vba+#o#>YFN\3In.&_Oa`^UCI5\VXa4,E0i`N4QP/4XL8?Y7+l,NE%*B)tkcaY-$rWcE16__VBm&\')0W@;_8T;QE.@-FB"T
%DI\XLD(hCKp;Yod'`9X\&J*8&G[;Aa=&=k!;Q@c@9!PA5'@On+hb0%JR`%=XSejDTCTU0-m]mX^iq*B!5RRtL/#[r?2ih^aXOH0s
%f&J*pQqm8-Tf[1tgRc)'Ri]h"6$ErON5I:c[Wjr=Uq@-Jp3CIXdiY(,3HbVu7X@%8ICG<O%Ek-P%JJBT=II(Vr`Th60QjRpYe@M/
%k$s=?Z)i3b\YlZGh(<`P8-q?K'Xa;jRBl#&cKMqF,F/$.b9!%(C[la4[`Fp'!ISfqHDOs@?F)ADD#Co_2i:nDV]Ck7@_,TE''uoc
%/UD&qBS$SCcgV[b`LcGhH6!ng-*WYKg<^lY5+5)871,dVGqI3fUEIjg:g$*OZZDXtVH;ulXfu5"Tr5eLHQW5P'0;Ces0b*c55,m8
%_91;&Pb,pDl&]Y$3Ee*S&io&B;p;Okb=8ZT44[m_jUnF<nBe[\0-D^2a/=f(Jrh>0;Z)m-Uh[Q[J&##,P?F)RWfMDl16;9BfY]lV
%dnCc'pF4I7>u/c,QM@!H<%6W9j&\saC=QYo^!(>Ld458%X=-b.EB7_aJdU(?DQ[Oi_0AgQDMmGQC2`h8:WBj'QLM>Q0Mo,h.8GVs
%36VSBFdN?')Gp9K<.-2Da&]+-L[UT20"c.ToVPJ<cn!&UnsO3`9#M#%q/`W,N*u(mCIM\j/?6WB\kP#\iXbgF^qq$KM/u=`p1nXG
%Lg'kJjZ3^fmaj%.!O^4sIm-uM)h*kqNY8gG,8p4jn!u@*a_o:9(@O"eU^\O#[6^b)As-qCK5Sd;HoqKIFuZip%(eD'e+<]sVW:nX
%<Raf9D9rp!4`tg&m%';lW\t.S2RaXV#2P@l[J1JPK5P3S[nNd(%DmnS\Kqb>W.X6OSbUjRcuO']#4'&?HOrL]PS!/4&nP&STrn\'
%Pj,/I<!DtD@J'4fGhZ/X%@Dd-@S2ub7is(-dCWaVXpH;.2*hY_-4"C3Nono7^!9+;Wa;b566SB_(.M"1k1e*]_&aA:@Fi[UoH:P<
%"jo.o'uUrgJmML=NR=]G%BVB=gCaeSMnd-2np2XrgL/H+F!pE1>8%is76.Sd4r8)\=KMOPcMG`o\DZd(7]GWkYqE*a_#!T[Pm2KW
%YW9<Q!O,/c@84N;qUg5@.Uo'qO@HlC`c'-ce.doZ[l_B^6D>OAH91mI;\h,&7G0(F-eo9h[$#1*&n>HI+IJK;eLW:&f3^3rp!h)F
%biXQpC3hub./ddiT\)2p@J>`tbY1Ur)_[HYbJlE]m\-Y"IjXRufI@03'0KY1Vq]R,Ac9J%*d.G:rRIMY<;!TW6Mr<5(ll`u\#)\m
%m+ugK(nVB:`@&6fWY.bHrd`ZRT&=RGQhl`]mp%pfYco"Ao'q9E3pNJS%rp.uiiu,3S;tZD*q0q3/W4G]jP^hL(jj48]M14siXbep
%YB\R/o=/6BSd9Mu$.,Y(@3Ia5.KW>GE2?a`4IRh`b[OJ8loXW`9JH)?HCA)bWqT#lOFgA_k+'DoEiiKg+Ia-jg^WKS=IOh.Ht&K(
%-bu)'HrYQW;MV^d:9$tjbS-/&pk7U]0$%3o-"*(2YTWo6qSOI>8K#Y0aY6\?P'W=X-c+ml`_qC4F?B3,d=8t#1=WmMf*nqL(S\j`
%iVY1*.I:JH(<tDhct;^54'F5kC/LpC(SPeJ%nZEHk<8irqQ.k='@9oR;<u@<5RgLP,k;C9]thu<07s*Y^ga1$$dKq/s0,f3<<-IG
%RY=>+W>RC5oN3lTcd'o1ZlaAF0n>/6!8t?5T\6u2UY?n/%CC/;r3N*H&qL#dQ\l/R*(5]4$I%fi+V^[h\!#`n5UWI")o"S5X=4!,
%jM9dpWq3eI9A[7!6rthb.03j2'3>P_gHb5F;m"'+#soDc-/)f^KVB7\;7//?Tm"``dX7q]Wb>dRDXgQ&K1P7mQ,&34`<rZL%(9$=
%@gVt%-7b!q!VeWWcD",=j4-'oFrBC+#_fGc?>8Vj<Lac4MVbVELLl5O865.6=bRbpMnDrCMKPn,bY)bfqV=>"BPOQPMs!"jc.sP(
%DgbcA(Ub(T5Y\>601b)uh[Ma9AIuhS`3E`dj<LC?Pc+fC)X-:_A3&hT&T+'u`h>nZpGB80+_:4%]c]L]JIfMRA6@iTI`$0de/KSB
%5P0`+Dn![E9J%1b\s)DS";Md7\l*6m@(tu*7u(CB3Id\-GQ9\7UPmEO_F2EnlA\G<!!<HXeOko3Hs0kSC^A`+G7.6(h"8',e#^,d
%YiC2sHEH4K)G-SK2i;8V$SQBH;N77jO_9FKe52`BDZ;f`Up:XJoRE_^Jl)],jHn8rZZs7b6:!\ZLN3p/BE<mi.OIIohZBAhjm.u&
%hRp/gBmp3>(>M`jD9ZtA]IMc;\-i;9LSM@LR3h!]fR_b@lGV3LX_<i=`'D:V,Ka7___'r[Gd$usjot.nO3ZaL&jOe1K%8d1p'":D
%eLXN&A1b?AjHj`s_Y>DI!79-%'a^[lq+Aan^ho4-=8:R46tu7uK,=#F\I$`a]F`5<P/N5;m2`pQRL';>g;>lY<K<N'o!h>mMS[V'
%eccr]6n$03n=pa^.4u^i((aFrf+<D#k[B?MFBA@iq)(R-XJB+^B+s!o->k6b0W,N/k3%,Ani;>[Zr\?74J0AMWXm*$F[VaOgL<-Q
%0pGNE8-ZI]n8$n9&6^^V[mP(C$=_)nZY`$h*r;<kEAj&8W+r'=V+aLp#a.?\c1@GDjs3WNGa[sF9?Hl0eS`=S(d?mS_C(0:=0`?c
%n#/B]J=?6a#+m'M#a%UP0jDMO-0XC0%&d257#te!2RM^_B@-6ki(K65$ke&lZS<oSgX<rW1^iVgh&':._L1NAod:r^i"f5>nh#mc
%7UtHVJ_nm;PE`T0&C#R.OXpjtbrH'K/F8osB'3Z\A!jC\.D-o:o6L.XWC]+sDao/]^>F*q3&p29nWB+@KYaAaRQt=%!sDaBLb7>T
%-rErmkr,L>i]:$p%#pA)*(T[]BpQ(]+Ba_6p=a=B4C&ekqUXe>W0l,RGL0/#=g-Imna!Oq.0^/rK*J:YZu:Sl9MAb#Su+U!e&Jl5
%Q3B%KCgeq;e=l210n`N4kP<as>P]/EYt@p&;_N)5O^A9Yr-%=95MLM6WoO[)=Wd2:FOdcaZ4i!$LOSaIgU05un8c:1ln4tI"NtJD
%c'@-2i'@uoYP/3-eb:jBq.1$h)TL"6YNJmX3l4tK,EubE6Ko6'G=K.C!r6U,lucZaW-Bld)DPBODI9p3,p<f9+)&CQgqtX79GX>I
%;Uk$:360sKTO-'(1<a:2;b2tZ27.]\fdr)eSk%Vi/>-9Xq3fLEcWu*0C_f5%g&pH/l@g2;4;3j^*%pK%ZZB5,AS8?B]$l8eb[skS
%j`aF.Z_7'a8&5uf+_%eah,YHAX2;CFJ^P$+%rWlf=tfO=+=LnK9o^M\DM[TCIOCOa#3ZuZq*^,k,tqB=iFEkQVS$.KQKknE=@_T1
%>%+tE6DN*agNot^:Jg7i#]s?HKbota$Og;M7]_G,=BDi(Y,`_qFZ$Rtc;(tYVH.5Sl]!$T8@8freF:m3DP=)HClO9!<=RH/>r($9
%Y,57GO;b^!.dl.@^YfiaCJcDK$XR8&l2"q96R^5+Z7J16&F!p8-!^tTVQ0`>l8a#'$:a5Vb(GEEUb@2\@G!-6EH>+hVH'Gq=/]l<
%RX.thWeR3HeI_#G)D%DZ%S[%X>u^iA<n5]C+PeWETRcWA9aqXk+-WRV.EXJ)4>kU;m#Z!t?In'%a^$RL/M=T8W?F*cgF8Bpr^fNf
%&.PPi2J11[<m_!PHZaD3S?$1NC?i>M*H?C";,]ukjRIMg7krcEG4HsB@bhr[%sPMNj=2B&'f?-bo`m/"UHGa&6qL6CW%2UtT4WDp
%GA4RFeb4O0ks?*Oe8Vo1eJ0rl2!0r82-@h-1tUP8J[:5k=7nSNW*q(h22(PeEqeJ=G=>51=-SDu'+^3RGIC&Y@__q0o<mR!?;]]*
%#kdAd*F>Zr<joia/AVD#"V(;&`,LtNMq>'<*WfhNIs'lsJ80oXjrs589ahq&"?pi]DpXSr3>DqE6=:_6QE;%+adlOiL4sE`K8!te
%\^HL(/-I)toL`m3&?ue"1:&Z]ki:Ptg-Fr^%:p=7Kj5\kF>cdkbU`mj9F[Aj]n,W#%>T7S7uOs<DWlpN<-XJTFlA1&;>,<AX%S2O
%h%G1oZ<K8`)7d\/M8W,Mh&8t^lLu`qNn1Kh<l:L!*0T4=ne.F%2B;/9.UM#G$04e4),_ALM`ZU"X&QX!g1;#0iC8?u"J;pfD29Iq
%%knc?.WS)"!gS9]d)^s\]f2c-ek*q/on)g.AX$5!&fEkl,sg6LqY_p:0?ag34NIg=N5A?<6^OI\F0/#?\sja%5^qecTkfe6@iGUh
%;DmggPLcPp`\F'`BBtJ2Xs&#/c+9;IT>0sDiO&JLZd\?[ndNMo7o2Bj"S2-$c?haYirJ>+9@2S+ot6B\61<&;$Gt)/)b(;!oBKOI
%6kecHm"oM68F6?"fFuj^I>D)KnAI2`GuAR,iY]fcN_l<Nm/&=.`re7O21>B.'EfAHXllf](k?Grcpj`&"@Eq=oVK=qAO8^]FnK0b
%BO!tnH"3g7G<nf\G@WZp-6>)q]JL<7Ol44e7i?[&]9O>L0!j!7?7eZO5ko&#$u$O22B!d8:2`qs%F.aI_u)jW,^VBo-pmgKdqFqq
%Y4g?UTDDl:KTeca"%7N>0GIFc3[@(\ju&50LDRn?6mEh4*"Z)B2AQA?E"E4g;UgGePVi$&,F.q<r.rf-*W"1*RE-'O&R//5fgAO0
%M\&9kImT3na1idVZ>P7/^8h`B/:h5@2!QA+U(X;j(QhV[<mhODGbMid`u_W;-%I2dDai9m+!U_4SWd_59.UB=+Q#a:RGT#BJXBIY
%TbcS%!*p4S*I@N7h2$6ShQs7)R?2qkiN=2<aJ5d#*)`P`W&-C[)^:pIW-ZnaoE7Jr#6L$THK&<HM[5Ho-q=FI-JD#/2W;/LULqCW
%%-B.MApUHf#tgK<B63Xn\457MiZH)HLKn-PhOp`9lg&]L?c9L0pK5,,8VJYX,`QG(*C:2_E4oqSac<2![E[GV#A1lsF"q6M$)KPD
%;,qq:\$BdGnQBoa-OhPd0,ius]XNs4WX]acY"uLR0rFR8'f4.JU\q8ZqqN"&6[#E.ISSQD;>rhIfCZ&OAMeZQmbnm,fnWDeo=Gjg
%giZ"kgg3=D5YlHVCAVgO4&e(#XIY/2(nrI08FurJU4%n_ppmurL$4.Bf6U[Ne9%Ys1[d_\F;hKs9j3u;EU@LYn]"e]7GDo$PNK/H
%5FSF9&(tUc8=$_-f-DN&I0eXEqK2Ir5>^'!lJW1`g#n&o*qTR;Me).>kL8EM\hH?@L))>iTt1X;)DT#-C3>sURcrHZ_%ZgcLKcKA
%_88J,U[#!Z(\m\6jm]C4,Z;TK3]-;YX6=9qH6)!T%e,RarEfB6QkYqj4;5rNmaNqENW:e4R%*'EUL^)E,[h(%LI8F'fA7(,9?u;e
%D:,LAF<Kn"n4&)J'j)jb*g%(1K=b29s7ibe?I&0Aka45;5cE*lEh93R`aTVq3NtG_)%gJK#!+LHNkr`_%bFafWodNHnS/,_Cl%A+
%@0I:qJduY%5!<l(=)JoCN(nq;_51Jp>oZ]P]1Tk@GJo?Z"WE\JN2;PiKcQ(lU_[.gXnA;Q2b+\?3?ocY*C=0nm5!M]%I,!R/D,bV
%eEKF1dJ`8[1l=<#[2g,"Pp=8kM!u::B)XVP8OA*dJSVEQ)i.]%aWFX(,/]+ChMj_Ql>Ua`Xr[l)jpIkqM6BuYJ"-ZZ1X+%A6>R@f
%PE';l;f+n!`DRfklSS9o>SeENoY#O<@\h(2&U1K<N%uO$QujUAn&u5NX@jgX8(O[`m[t%XD&k+d_UEle\%Q/Bp;^XDTpTXcCBdeI
%`7@C6.7nX9GK$,'TMdqYMEitidt._M\)@i(T+5gPi`2NY]-f;N!S#S\:q;8?jeiDG?$2O%067U8UELb>I#\[5HJM&"NNiMN3Q!!V
%kq,1r5]8H0:,R'"AP^G30DE>CkI,ZDiIGHUDbKdi%8Vla&P3V8"BdV(Nud-VH6(6<_`3ZIFd*q#$*qSZUS]RSBXgj7W5enKZY_0b
%`c5)`&i3@4K!_)`G39X6UUmQM;>@V*p*ntm47mISB)GjL^lmJ3rBHS[;-dfPg^nMTEDECYKZN8O,:9WQ]1g3,"l4<DXpa5V2KQ:h
%16m_)`jI`F^+8XCK)+9G"d.+=;"NHgT9hsf^#a;GR4,D6oQallHsU=tl@!;/00j@(aQE^?0P>PnZs[<AWcK%o>si%%87AX<HI;/=
%)o?f(eIM$=64it*0PWd)kcT*\f8D-e^8op?g#n't+WDacREl7:2go"W=j6&_(XIJ8(eUEec_Z+QJ5CX%_k^%!j796aCUFe4NJ8Ba
%Yp1Arn$p#f6W!J9@1IT3%#<p-]=)l//.ol]-'EIo@Ya&6)E<32Wold0:MOS^VZ$U5GMRZD0`fa5Jbipp=6e+0>qrKY6):pj?r;P$
%ES+bUBB?,("K:Qg6#*,G+8=`o0^"<19!'),(bS^<IrG5VNm^,efqZ=A$:[aeh]:6X'S8l9?9*A*-pY2Np-^G3?V1;:pEPG(\p1;s
%RtkcE?k4;,Q`V`RLP,f!qfG7o37U\$(sH>2GmL.na66\TYf-]n+_NZp;=]n.],#>EOHG*.T!Det6fmHKbkF#%>W'0$Fp_1UJ@h&T
%o>S$e.1@@'qM=#mf)G(/6)-Hq6.N(=KZ6[:4Kh5Q$NXsI\*^"Z[\1eYpAWJ@XWI`IT^Gk*.(!O(1n.qi(f_VL(S0[C8D8[;&/H3Y
%F2.OI>L.AhPKbdH:`9NDjF[T'_[b*F8u;VUh)6r0T6/XKN9](;=oU0`Fh-2tMH/$qfV)7HV"H@]1k7G?f)R$8+JhghDMi.YTem2i
%b&bbNIn/CU!sA5`[!E0qh?;A&)QkV1I<Z1'X4.?`=g\:-l>7Y`J1smNmdfG@fipeB"CkE7Ep9\bp/Jt3/VsM-hKX:m0W4'HI8![A
%DtqO6-S*>g2jBYNI7Y*2rdjY9q<[j\r6n:KDBGIA/s\ZDJ3%C!g;4:q"hT?(d2E$!LIks[js(:BJ2oWu6\kMui?9l6)+3A#7\IA_
%%7G`'m5NhFL8ZAQZ"rcF[\N8.7]<qg!BO0)LDSX*l8u.CGBYjec@!gJ?2C5(],;rBX#s#BAckWB7Q8'4h9?-ZN#Z^8er+WuU[/>L
%!NrQ3LPRmM_aF&9SRS!ODu):VjDIF8\XP<gmUl(+Pr7oK'EJEb'eE?il_!gg%m@QKPd;Zc1X&KJ+bZX?lPUM:pmX"&raphp^Y'Hc
%Md6&]NaRYjJ@cH)o>&-b^&0XnL+OZkIrHd`q_hr_c/4IOb5BM/C?BHC6gemdZ3DrmmZ^6dA\>'a'#-^#E'ZGM_n:#r<3<AW-2?Zq
%6pN&]nL[-j1rBc@qYO3Y84&1;1#nUW/n36>K\&:6%d_OFB7'<0+T->$h<.cb2nX%/3Z,Fg9NCCd8="BC,W'<QVjki>#qkX.m@<-L
%S)SUb7o>N#4;<EYrjO1qVM7N.&@hfeQQ&4)rBf^/,nbc^m\V%8(R=Jqc+;"PQ#)MGn&gA_rMSAdbBu$I1Ln!Es7Jtd4/GX3*U/=a
%R9H7!TcU-iOToRP!6j2];=b5[Dbiue%Bn_VNuk5g&6WfUog#W..Es=MpA"'GfCKVBi=GTWNeTQR\AUSoqidAi7.I208*,;*N9^50
%d$aW?)^X5..=N+f+W47bW88(GBN/%(5V7`=Cs&]u,ngTu9F#G"@JT?H@^9MXUqV35)WiTp,5a4PT9jo#[0Wg5Fo1V;2X#_C#?l1]
%d_jKd!4nD9G.n&HM*S[R*p+E7fAQq,29R&>g+YFl=K3]&`?V"rP0kNFe@-OtPtDKZ-ZDP:S2Jtr1`jn2/s6]1V!'%fSu)g2<k&dU
%T]M-F0SDc8$>];S7hBRe9ILQ?LVm3fn<&@RS>!XEL;bX8JANW2)5'>A08a<MZS`i&E^/\1!6@O#Mt.GgR3S:$et\sRIRsS/W"I55
%^-UU[dj1cdC4cIKYO+M@/=4&mIWE55hB$t(8$!\-![HWWSX,*h<%],U`[Z`!=s[ICRu!Q7n8X@N-$.UiRCu)Fk:*1E'mCSXLbM+k
%)QXc4Mq(3T?eJ[]ekci,;p.Q[UGf4m28(S[I6<GrX&_69XB*biB_XEtN!m@)8Sh1tI)k%/r?@@I'fBCgPqt"/$sbl/%lI:qS$!T"
%dhSQo\t\':F=#hp8nMVGdTO%OS0+cC=BXf@?>\>j*s_)n.p3$-BG#V%UmQ*RG'4-t*!aN4K8N=S\M3f8EgdaI'c*m;,I!f&-19S9
%0!YdV?k'aV)qMm!XYKF:#X@D^"inR`O\GH/^iFAIEBfZ=c%8Cf'r3-k_4E?A9j,oUW4CKi8bnHh0tK%H.MUiQ$RkW2m%D%RK,=bH
%'ekrb;FXA>cHDDA!XapJn/@kYmKQ]%e7c4Vq!"\(Z*\7_BTV#d7e70&Z"PP_DKo^EHJ;_gDq<R0^[Yjg'%kD[DVL>>mc-3K5\sIV
%j$U.sOEG>eZrq!0C'r7%?LB6k-/<'N[C?+jHQ1Im`3Ek(PjqYh^0m62?$3d;j-]mUEKe;He2[34rop7iR*T$\42Ph]RU3I'c_>bN
%0d`P]?/<4YFLW>Ral3dBDkiu[X!L]nR[S1o\]]kpGfa7S0(@Q7+Sa]!G8s0!BYhqC[!faAiIPg>Go+[-@DCJS/9UCiPFA':n.5:_
%rQ]m>rVHe'2J=6<(%5E10:5n68Hgbd^)!.O'+=78PYAP=HXscJC#Kkeng.'&f(9<i;qJoC7Z-sM2GLi+\_[S?Z>,89I(`[IJ*Q$)
%TWVLZV@k>&g"!9_/<>`=9Qe"NLbg?T29`HbIJehr6N1g\?B6TV*K>D;PruseP8?on$AVMc0J1GblC5cj:!3(hN8]ADhiOXb(V$NR
%EJHVlPid-9Re_Y;G(7m1"`AOmrm0VBJ.3YbgU&EZf9R)l[.B6QHCiOO]Kn:NTseU$2"V3gMLJtYJrMCt+hD29ImciLAGp5fVEM6-
%R%dp<cc(jie-i;0r1'\gdX$P>X5C-\ehas52!O!1pg%66$6I^7:K#OW_*M^c<KF7Y3WjOpQFNTo631afB7Sf$S-TJ+CR@'U[W5VE
%B*E!@qj*FX%A?^J=jkt3OXutGe5C]_P0O\M3_OR!d-6ess+30j9/u/EHHA1j7QeajH9K@YF6sQ/X"B5h3F&)_9%Ks_H`2aN(AR5q
%#0??["dLf3<(8Q;PGmIOpb+*I9rkI\RY!h(;[@Ins6Y,iKrl*'2Uf)C&Sbd_nSMdP#W)Q!.4#a&G=6ts"s[0D==QO4<Zq<^4a:Js
%1l=]54g\ChJ;Ke#esD)aPaZX#VQXBd))m/V6ZNq5Q@)1o@mR&//7_SC36jAnC\Z/X*7A!29WKYgWTbV-HCC9uPI=ukh!m2N('<C&
%9%0ZH&8Z?rQ8:uE(E8[/$\l-I#$&=2YGqu[41C-.4jOGkM54ID?278UrLC>lhI1FhB@qX7(H+hNZ]eXTB:Q*j$!=EQ9B!.[PHl?H
%IV+Q3m*?pu!a?oU\Y2Y,mIk=!r6XOu[aQkh'tD+a6u^;#R$$98dBJ<;>/f_06&L-RnpnmcGo_a6RUE:<cQrpWr6ZD=efM4]Y%OEg
%#4oQ,-a,3cV8&/@PM"GjDaF-PS!e60R><uSk;qME5/Q3Bhb4l2Y;)Z6^YlM,mJ/^C%aR:icZo*Ac'6#DS';'$3&NJ[`LC",$[cb#
%;N":>4PKdH&k6ddU"_W;M"g]Iju8L^GV]`?8OhAMY(G@qkOEP@qI,*GW@:HGQ(9iarNbe)gT0!\pDJii';a\,]2:9#De>Zs/<_L]
%JH'pN`uWiabU2hk_apb0AV6,AXLX`-19*UQN/)S+_8?psD52Xm@;XS0_c,uB^O,d,V\RI=-Vg9>KO4-HaU>0;KsSI]''lo-!sCDA
%R[Xp+k&/r#!]M@/"IiSO^TC/<LmuI<=B\"j%eB>2BTS7P=FoLK34u%9KNj]FJQ]]Z3/\tqmE69_nkbd!UHjT\/pM*I%>ln]M/EP^
%GPD^$l/=o_-PWp+MF(P`UX!HXB)1,MblX2Sg7XgSM;@>b3[B:D76@<>T7a<--8;j_jq=r'&*m"OTl;UFW=D&:l8`1M.I%u)`]Vh/
%jAP"n[CNBM%0%;JPqcYae/;^gW#nbg:22NfpC"a0KghF<#U@kZ[hEnEC)gtcAY%H?M03m4-r+?r&"_5r!<a?sH/;m'=I)N/\L1FR
%,b^e1Jsem"`51t#FYO;F[#,HK*`cU@TGU#[DY9+8N&%FT2?q!HC]Q(&NLI"_B)6?fCr.V)%pZ_(MUup)/_s=4^k<!%'po.<(XL+8
%@r^Q8hBiTkGNo,4(u-JGh`]n&!8+6ih6pI;amGZI4;S"njkNAI=q[O@7L[p`;V7]9(;B-/R&UL`Zb1:U3+Z(<]h*["L/-8(qN3UZ
%RqNl85N$b:)-%@(T%DrQi9TV`->;qV08(+m<gt\;TQJ'DOM6hkrtscFW$D9?21"/K6Bu5E7W&fH/6p44Fl0GJoqjQradpHZatQot
%&UBF#@!<]&f_rhnEt,?6L(tEcBlRb?K<.U8!0aLiC%t!)':DOBEDMYnncdP\N0QpeZ@[B&G&5rn9KqNW0QEB-&XhkYej7Bj"Xlc;
%U`M=I)_\Kd)#9=L9[7/flifP&XTQG.jonsBl6@G6NVHUuNB\NZD<bL&.$GO;Ro*:5A9fbQc@!bm/=jp#G-<Z(aG7BpCi5[(9pdQo
%62:hh.;C&pZ-B\s^pN5Fq3Gk#B?k)C1l":c)s6R"D_(CU5).[h'ZnF/qq#47/mFbS_0RUY@S*/O%3r1^_3Cp/K.U(n5n&c&V(Gch
%Jfoh^qMNMJ;9gmYrLG7e=O:nRjrt8T_SQtT&pC?OOLqR]9ma5+1"ddV:mBe^S/i!>/ojh;%f*emAm3UmrJE@[Sr?#@Ut%XhD9%6t
%LPJgW7=CNlf:KM4J%,0T]q-LiRGW>lr!qm!!Qt,[<o,WLbR8E6-.qG#$Bg`&@2K(%)T]:t8Rk/K0].?NpI&OleiEcE%=>Gp0\G47
%At5lN<TPM^/l+U7b:_q;S+IohOEcIR2ka@1*4>$7%Z6L`]DqbTDWDi7866&JV9khOn8Zj"m'7'0[YkrQa-<uq<9Mab,UY.$IoAfd
%*kTtFk^-@$R$2dY_l[Y9/P!iZntO>k7u)>gf\KYX\J]9WVI/K,`T;(Qqgib3_\qr11>V<doYjSfTl4q^`l7)6DmlfFBAqI,-#^`7
%Q\]@hjcdsD0*S;G(8TW-fd5D"BfE<GH3>-XG7b+QGQJr#cKLJE6VD)5Zfd%uHQ6?%1`noB0@*cPD@_T1H#ehuj#3(GmW"FroH'(U
%ifSO[a0D5A\N7?E\N5naCUdUiAC3uY2ckbB]S4YFHB^*I.:piP1#g]SUYgZ$q!eQ<$eU*X0\es,CO$DS%%LT2drShfor7DFjmHrj
%4f#`IG8lVe?AI9FnK(Zd`+N%Pb:DJ#E'a<X\g[*oW3R1d?QCHj;YV?NE3t`rQ'E1NI,g__AbfZQ%1FVPf-HkPj^#:uPrJ7#9<XWN
%%e4&`=A07iGr^e>Xi]\)5RC#<P-d$c"K3QXLZhde1<%MEdefm6bBfu=04(BaXcQ1jL^F$M*OTO^MOnXEa'R;:Hcbm-m2OY1^AMe;
%i[/fJ3Hce9m9P+o3f+DhHDgBn(GC:6q.*;AY3N9o8:-Qg<SBD%$H=9jq::s!ZGeB.fqkZS[+Y=LdYdL<hOHjj3<SAs33AYD<NJ>p
%`sPA-c;#jHQJB0J6rUC7CJYQTmFY$<&/nu]2VD-7D;sIc4k4?6(TT@XT=RHj]shO=m\WLPK7hKCiMR0d[RE(.qJ`p%[\@Vq(UWM.
%g>9bPL%^.5h%/]9Vlmo(Rku[uNm&YP<k9lFO5X-OXY3fW9a@UC3WbW%d@<i'$KD"p:?75J6>s%XWP*//+]\@30&(q-]@[M$oon(h
%3F5+HGo?R+gOai[Y"Q6(k!e(7&&5-SDaWSsgpa!L3prL(.cc%4(D"i(qJ'0tg/bYdMc\_$TVkl)f4bG3R&eQ4*iEB%=4Q>RBd41t
%g_#/BDR/)'h8H@?@EPH[+.f%2'QA>3n\-(F"G_B^&(_&W^@QtqJ%[LITHDbQ@]NqIM9Snfn%h%F=g\F'k1sK<]1h[J+m'^0]Mr.:
%bOngX_bISmMS%O2?()T(Mb[ff>2aa1r'D/pnZb'PY"Q7mELZaNVn[\bGj%[WC)D.8T:rV);ua![0'Q)#?U+&jnQjCE9uBn9<oLc1
%2t=Fr1JLupXZ]iaUTjC'&fFA*ag[bRcf%jAkITJ[qmtV%kITb&laST;21+r6\?4LZ!;=F3["$E4C`e'$^23$<[tqo1A\3kKfk/);
%a(e7UCQX/cVg:FkD$Dh$mh\`+cU.EiU>9D8U><e(d5!.d40OpjYT/ZKh%hTGH$DgL]QF%>[:gY0pqoN.^K$<+&,>iN5#ZUFas\<+
%<iQYWik=-[&K7O[Uj8'S=nMHYSD($7eQJA$T<3B>W\3K.,,:;Mg[Y^%IJM5`[GSoc3ShoIWlpoI-bOffl?;EXXQ'O$E+^K_O@;Mr
%X;i4`jH781=Z:cjF7#S9k!dk/Ecm0J$T@F0!sZkG9Ij2"W-]_8-0t!)1L%>FDgLN6j`cO<Ofllp?=mU3PluolYrGmfOs&(\h_FY6
%1n9;2<up4%8s!iG@[;Hl79s?blC=S_.\*GhZ]lTM:@%Vm<_C.<XDXc5P^j#+'c)?1AA5E0n-GYM0?sc-=OLp:/h;+/D*[Sb\dYu`
%Gci>q:KI8FlCHgG7,H[pm::`-.g\,e<_9Mg=,\#"WF`QH:$/5o>:%+<g"jp,I.=@WK`l.okELk)OFV>rIJ)$ol2Wm+Xo.Qe8<E'E
%j&LQkV=QiNc_OQ3TQbIaiYFY$q+d!p]*q>7*7!-DWl1bOaEDV;&!_tT3q%>'`22NDocIiFp3@RTpMT6i9Dcim]a=sefiBN0M9eMn
%gtSjS>(pF:c>AJ^n#@)NbBrMl"kBNP/[CL=/%3X(@^2EPX2X4RW'fhD1Rc*_H(GH,eJE9%]Ft+B/PZRYV'B77P#X'QKjNoR(Q6ZZ
%D7*C8@PJqa4TNb@DnaPl0\R%-U4Temqk\O?`D<$IQ+`%NB!>P"<A1f\i`RtTKR9iu<\VPfABQW4RgtScgAkm*fIe,th5BnH(h4uB
%WO5J#bh(N/>;&E6mHGKLZO:!p'!8u,5WcTDSlK9]p;Aau?`8h(.m%l'Hc3o!(mhO0J$g>8b+:e2CY<XK^;R8>K!%at4Y8uNCEKb<
%_oX15F?M4Xk33hWl$BL=rLfIZk;ca.@)bYFeh-rj%q:YY2WB0//'uG0:Mmkg2Jp3#QaYekkM.%>3??.](JS9$D8+=h.?3n_kL0'n
%Ct&*iF=k-LK7-mPVX5]$W;!1V+&).+mHHIY:CP+>mNm$'\>AVOq@]]q%PKXrXuDaXG$Hn.gSG8HXi-d[]jB":%!Hdni2%LZHWiT:
%4%4A&BG7"U;9<M,j-IcYY0RI=mqr`njr>7[>mc+XX=0O`eg9),U.p$H7;?U^.gFJ?]dL^7WMi)K?;%_Tcfl3.q"3AoU,SZbJ*h.$
%/p=_&,Qb^EG.R3]NfD^&_K&NBDO:('nb[?cG1l!pmGd4E'gdI!iLhWASpok.[:(AFEEE,9k:FC3_3[CWMs(9*p@`ARd(h9(2,%U3
%d,rW7M!MARCpiul<%+!9)o9=5Bj6OlVl?oD2H+#tT;DZSfo1.51_n/e9\<&CFl+/(e'1kM4$DbJRL5O#1DP)t1)9#2k(qQ'2:gbL
%mJF2k(R4R'E,;LJh_Qi8ZGOd_..(,c_/:]@^UN0*Q3*-;rf5SSW)m);?S<?jk.5YPpsKu<0"/B*1DMh<Be#>d*61_V*pu&Hbu?+B
%')JK0Vt[L.(+r6gQ]:Cp\Fi-E9;+VUHSZ&:"r<K]G/t8K9fl^/-sO<![hO]J6L$@"iPChi/)>Rm/%!e:$f&KSBsbV!90-ua@k:.R
%/J[EQnO*B*=]@If@8fT-i,_5L-(82'qWS*P(K*&&)<,?@=4YePMO*>R]r/6k$;9%/"u3;*(nXSu.pV9NDM3P^/EQK/iOtnI0P'c4
%ZBB58lOh)_D"+il^t^SWPJ/fOPO[5a$o)9=!Hm<`PBrWZ.!Kh`,3LS[fm@j[,2XbTgV#6$]3$_iDKGJQ]$8dYDuBG^$^g.ugRFG)
%.bN&[)+'O@8HJpT1\K^SZXLSV<T#c5ohCgH3jW,*FD*_):7NNQjD_WMH/2^A:-r8-0Y<1?LVsVo"gk)M$;cn%D4N0*R)XYd>^YkK
%`)hLWK?hZ[C;r&2ShQU\WtQC<$g7jAm/oATD'"o,\i$'k9(%in6G]iI%f6?<-c7"PUeU#2$&&3L/fb-HR.%A;>_",/H=\7U,]Sg\
%@mMS7g$MH/b+ukR/@mW4\^VQ8hP=^O3kHmNJsp!hZ*nPIL;DB^[`8\]cK"SH@9AVPma/F;"A$\!A=I\u6ZflC0_8d'_%;c5c_Mu&
%WJtsY^&3=]A1aj_K&Sd``1-(':\P7?lAF6,5_ouWK-+6J`@rQ?$$(aDf?24%eIKDWj02+F%*`^5l2Gt[r'-LM[IR"Te)S57A4kF@
%nCE8!Q3fsDEfs+#"[a;o#7a[2B8H13I^qiT9'RqTFC$p9bA?S&cC`iZp/p-s$#-']kMYlG(,Vd4!kon?%<h:q&bg23G@#NBgA8>r
%?Y^E#:\Mqk[0,:BV#-89\:Bj*V>D<[q7Ft-rrO<Q2mJ%mhPJ2!jq>5mNNQs<=M_WB,-28j'5K&)^RbFn6JL(#q,<VLUT(jsag8'=
%#pPt=l.K"G:.3&$lR$!H0])NP'nJk9e<Os@.#QDQeK9<;FWeRSS^5Ti8p,JQq[o=BS16-Pjt#sKhV)n)GSd<s%)mKtQkqlDZ8/Cj
%,*^)]6<#ZT+2QF'k)8S4kjl+\TsE[bgdT&B(4NG[pLS<gk@<bFqe(h^[m`0fYKA<%iZb+@g#,+&,?h2A-7rQ/%DEDS72D%>mZnYT
%5jq=OCZVOI4PbKn8<4'-:uk$o]!t/1).Z_@?;`nFBfH]OZG><:BKM',V>B<U],m48fVRCD``I@5R2+9g!*7P`/7QCG$KQr12N_<X
%X<R]9_FA?2mtYH[5a]mjML@09F8B`ZAi8RY*s@*R>*TgAbSR[%ij*Nb@:/gM>A9X$COZ=F9RYeeA"CX*TpoQu'?j[N1'2^er)^Ll
%e2FZS8>;5[G7U>inh*]7EW:&^mA:s7jilt,hRcaFmL38WcW)F8BUokVa+Y&j&j^#C#Jqf-(91l[Nb3&D"RemM]P'4o&o#G4Q:KP\
%i.*+7XY?1t)S23%oi0SPBNg]"^OKFpYgZmbd[C]di.2nL%cE.H=]BG2@;g)4:&gNS04`*bUrh7R?ep4jTsS)/^UnTZ#3`>oq1==N
%QW6ArE[ph>:jL=!%01^h?.`1+C5QsKGt"p'Jn:%.mFV'k:1R.fg>Ql'D55[g=ku3mEFaL*#7'1%^@MuN[dS/Vs6E!f]B6Q%?r7+)
%fXM3Q/'/t9Si@3e3l:jX6'AYMD-1rnBVE?<eg]Fp3`?],R*g+K\!(t3KniPu2L9g1=_kk/QPBOCmgsUZ@u@9j4m92C'O3PWJ([p-
%/(uiHArI=uGH9f9n0CoHIdRi><m`OAlUeilj^0VZ991)Pqb6`jmrr)_IG4L<cbJ%i0qRa&_mX&nPO:L<ppNWO+%nO%pY^7f%6r*W
%mEAMiV;$a=V!J)[AP,"7*U@YqksV(ZVeCnpSTeC1ikkaUNC_Ai&.N*B)c%nH5@Hj,/&e>ed,,1L)V"%5AVcbc1Uf!K5%#Be&&*.D
%),J"gof$WG>(1gb\s??HgQj2ORH'o`Epggkihb([F$21p?oP;nF#'b$KJgG,a(6ci:]ss8*Y0Be`C$1]b9\(DYm@#RA_._LKBp@O
%5)9deBZ,kLU&s!Y2B\JG)u`YXK:P7=^pkS/<qad10C\HL`c5@pkR))=5C[Zm4Wk31[HGu%]8`[o>u+P6Zcrt':t\dYgZcY=QS79`
%[Bng1(4V@V6mfC%gJ,1r.suu2h^+Kti9/!,,a+.:WJIZ0eg,TtE,.@,5*tcYV(]9?FW#jU_qc2M75@JA5t^K+-QcuG]kn@'99(-8
%3rNc&"X6ffOeV&gY=nUC]4V#HFKLX;\qMQ%<M*\?4%:<+ZLBBc;6"17ao>jf+BdBO&h9Y.>9X7THS:^k>3OsLLBh2p)1jX7+q14i
%EArtV)/&!t*`#gp,.,&&1Su*YCkmdj\$bg4T#Qn2^\n0$LJQ!:?)t$0'S4tso%QQ6TQZM3)V!/RNQYM""S1PlO4<`?DX+=He/4pi
%PDA8)8Q`^*-Jc4*A^;R#TtApN3d*os19O4GqVbCkp2_*aj)j0=Dd@&(#tWl+f,7]r]htoU=;8p&qG!cJNN4kcFlBUj>R:A<C%5lT
%9H@pgp;OX+0Oq#'F#q.?MWhn"iG=1i5`DWJIt`!GY*O`!W=DDIN,j0RJ<`fo_;Ehfc^-qd;B;8!PtBg)^MXQ4<.$l_lA4Ko2Yol7
%8U=t]e:\<Lc_Vn&N=L3f[X@1FJW3r-jdKa$p0W&):A</Cme+aH>3<^L?04KhdsKbrlflMD0'CK,W.^3?n9A9,dK6#0rNHY^qdG[@
%qk6?HOP=pon5/9[^@kMX@F].rbH<L#p;;MYh<YAQ4'?lRZQF@igCH06Q&s0?i16%sTZ_e_:fE'IpC"5Wc1Y95__,-d_^8U]"2gbU
%a`54KLZX&l*bm_d"P6)oq_.9o_1t4Y*bpC;;E@bjn&'/<Q=&'A2sJ%!Y?uN*h0rd>OAj+X6-PWCfVP/fON:]Z:DD:j]ue_=3N*oc
%L;;['"43A(N,0pD)Uf3)d+kF-q3N8'7)<+jekkU7j!`R:T@qXLG^$!.?H=rBS,UPDCn`LWYY"R0h+f3SO`8JVCdLo1<2brW@!(S"
%f(.?6;4Eosk;c]:FePN?:KNR,_=C=0jTpr[!s,JC!@"FNn/T7s\T.hBFT8dbl5rY@k6PbXhMk$Z4iHc8H^@Y$;22Zp3u'9#-hUf%
%4KlAb^NAT2VK1FL+K_Q8X$ijYS_3<Vc"CiQd"A<udC:!s]&o`"q/MY2K@E4nr'0L&c6//VB5^(`M3`S*Xd=,U:$JV59%dK9)S%rO
%lF))L[lZ5g?Y_WZSh/^L^dm%6m/\&`<a$fa/pqdTDJ@pD;BAK_"E#!up.M!7I!ZZ5`c?D`QCcfD+*aal00j.-e^]&5@3--F;[`B3
%\5/Hj8lp0(RCLqWFJAM!g?41AF=fYjM`e`OCgP4.7IJEY.qiLSH#="Zi3i6PG<"#n=^I*<"`gkdFn?ruR)`;b'DdU<WnMk?\EY)_
%p9DPE0'1cfqQN1<c5O]])')q?EKfhFLXRXkiSDp4QF6b06g5@rgnc&cCG\0E\=P4YVPZs99X;$4"7Bc3o%/S<@4lpb,O$_RYsOD^
%p[Vmu&0mNfFkMX,o&+NU.m/k^1Xk"A-@0O$iAG$+KjoM2IbH9i3%`M-<GMss2SoUr1*0n@WW[3djE28E+i[6f%lNVAC_#K8kr+7M
%00GJ*+iXcQjh@a.[m$l2pD."$l>H0Y5!k]Zma%`OgE`@nV+._K;43rc/[knOfp*]UfD?F\4*Ejbc7OO&[]In0oj(?tph5(e<a*W!
%afgrc8h9;W/$60O4fuZCeTOEF88?N@I`.^HDc>7K\Lu*qUSbC2hs2?VQ<%`#5,5*R/$[U&gr[s)0-up/M"c=%7o^T<%_\EH1p/<:
%$g9E,0!-C84a.^5WMN>!jd%gh8hM9--G>[L6I`(agL_Wn=C:r&1]Qa.[k5//7oeU#=beS=R;;K*>[,+X6t^OS(OC+Y6&U3A-tC0u
%c;iXXOTmBg#+Y9O)PA!jEM\tGiT4?NWMOIjG\Usm0Ma:V74Ye<?j%OMIGAriV;Ki&-/J6E*PKeLr[-InbOu;SV7YI=UeANuOlHL=
%D%8q4YC]L9X.OgRWVpNfGTVj?p)>H=r_2^gZJZ,&g;aE^jeh`UqXPDTC1mbY'(/s'6Bn&XU&kaLF)$,s8].mQ;?K<pSSV''&'E@K
%a)b'8dAHRiks!P&$T:c!G=]1\gj\4UFOU(>Qch1e:R'1?Y.!P(PL\>+XJG&)XkTCOqUENl;=tsC=_]05OQ:QCS553)HM"J%FopC#
%kT^PmSQKrk515nV$G0@.Z&QE--Co3Jbu)2$'OTUMGhMeu)Z#l\n7^9'\tY7TF@@:\EEW,PW`A@i\Z&m0R#d`j*Q*6<HgpP<CpD$M
%d'Ohgd]g"g$9]Sjk"9Ka`s;4GCY*P=KjCBB#n8K$6B@)+kLs!*OUlP8Esk,hCAH\\3\O/S'\5X4)D2-e?D5E+n+&`gFhk.$f>$l+
%]@?F%&ingto.#R%eZNbLAO$$cb25)ddKQ5bVSuj+WU60s'r.t=\Po&'Q@`\>]<\"u\LiRH,C%lPlRnM"]RWtL7dP+P,(bcMREe0g
%9AbE+XGqQd/J0uhSY@KAVM+#mA-SU\&'or`jY,%FrW8PPAF7iJ*-Qe7QV5@Ki7bmg,psNiYA-I5(Bt)>q^-%o>NdEic@%R_n'Z$5
%V9K<BmaCB:koD_#E!sN_d8rHIN`.mYC]!%WQWrY)AOf<(;$5%gJ?C0Vgpi_a?e[9<8;)%J+\KK%]iKIr>sPYh\pk`2AnK:MQDtd2
%4;Y.r%X8nkm%6W/J4FIbD[p3LGg6]#V<\\.,V*ZY/5"ok`/2W.MP5S4Xji!0C#)3=X8H:jmU(0TfuMO]8[49rAbuatQLd=aEd!H_
%4tMFS,PlTG\eMsD"nq7C2A)\cqD$PaI,*E1ouol6Fe-98c7l#?0.Dun[MN\^(AH3,5g2E9L@;Ve+FJ%pHj:(&:?&&En0utrMgRX/
%lQu5`R/(%Z/+sP)*<'Yt4Tgr=_Qf."Wp4E1;o&4XlP0U4F'TfD4E/u\EEqJ(Lg"H=34pPAGnHZ5HIt"?]SBSV?*SFI_YrkE)$M;-
%"*r.gl]cqD/:QV.`8aBaq_*4WKc*T2\@P6cfY+^hE.l=o6p#2;TT,\n@JOgc\))8r.IFt%-kT,`"LnKKX3A8lB0Q9RSR1TmOI0JL
%[4cC:PV+YZ]?">D>j]kGK+am?iEfP';V*\I9'c75N_jr[X()rMX7je1USiGI\')d#c!*)0=*:t.J$[N`M;QhRh*t=IF#Ukh8E1;R
%GW\K,rlnYcmR,T$`9)=g-G.f_/gG3L>t3Np>t3O+/8OqQo]=Jm*Qicbm7^P-G!S^-7kVnqUtqlU^hC>oahhVc8X/L(@p_Hja3@5O
%>J-p)2Btr%]V*%qdMURu7bMU]hW%T@'@*<9BC<pFC1h+oZI&51mAqfm$gko[4>>+d3R9L,\a$hhqFS9K%LptO%_(`b6OiRbO$,*P
%7((V>#giL*EP)Q"F]uAfRCq&C-JI%j-1s=&ks'XMb;STI[,l:3)+/e3FjmUCJ0-PIb%lZo#@ab)6L(q)>F!e_fPI@nS*;p]h`S4S
%]C^n0;5./R/ac^=L+D@kFB*U'dOiDPc.$7fK.=(lY?R:D-='VX&t)h2Wk8mgF+LI9M]q`L(!?_gS@r(KZ==,-6cSc(7H):,`YGZb
%O-Me2AR:j>/+_Jk?KO+9)nDiSqCNc#5VHc<(U*"-_:E14Gh?:r.gj583mm=qk+up&?&VjUf05qJJ*iDhF^>R_rmBjQ(#JlX>1qY)
%kfI$S3<n*b$A'JmQM4TsDWJ.hIP]E6\lRSVZq.l0FI1DgU1\]HQ+``p4^[4REL],.8KIOG%`rD?OUQk+4e>@@jR";JP.-p&ha6o>
%f+rZ\h9rdEeFU/uj^4k>.mc*k?;rI[-u4p"\7[K4##B2`rYC><SZh\Q:jnRRotG/P3Qnh.Dg0<g^>5U^a.7;O;#!"q4(r87c'0kT
%0g]f3^-KJ$i?Y+U*@X*YHo/`_K+ni"Ii8((FlBStpTIr96moEe(HMb&^Lk_m(K-X@(2H":6&N/'40Q7[m/49SheI*=T&Q;?\"q%k
%h8cjd'6*eE]'l2V^\_j:$"!MW]`K1ce,p[''mHu!ha$2TAW(I8XI^4GI&%7Uh%6;O4mBQdBaN3MOs8QB^_4"t;X5UpB><Np^mkU#
%Bfl;rIE5.-G^O"b>_^6FgrE0+h9Rf-RreamDUO4Y*E76I(#S.ZLLOaDip+T^^<Op^FdX_A]%=S$3]^4N1u(`1cr$V)jEB`8U8;oN
%3dMSokiaAL5OP!7a3r"7E]@a;q(-\>iMufp[p[A$C*C%pr[Aco,ec8CiP=)#S*7GJeg+a:B&t#2mC.k-2X`n?Dt:WQ#?+mCC$knN
%T%#@'^$L3]<4Jt,h*[RhGc(LH4@WOmfQ%RId:EN"dcD\>A)p:+MCqR!>h]%E"[QE1L;)TRmO7Frbu8j62DTPg%^oTUK#tY`pi7-V
%cL,;<BhIaE]UT-3<s>UN$WE?,=2]+^oW9RtA2_SC=FIe<Sk'03)Jo'DBK8$Cb;X`T\V*>02hGO)<a]Qto;X6BOW?<6?`>61fM#FT
%S17`Z-QFQd:6k.ne\:$`'5k*+]Q4a5Hq-EcS16&)USiIt^_YnVb<+b%MXfml9C*]9<068i]:qDHn_ueo6uI.CIG(IWbOU%'@Sl_p
%DjLKN=9oIBSNnFjZVV1_X"44X`HlY+ia2+^Num>G.NZUWgGf8m$MVcrDQAHV]T@l=ShaG#>B\[7o=9]0l>uj=eMQ8^ja-EM[c0LI
%*k/i.]dBOGEgpuLTCbj$7=KFM$N3Y$>)XqtI\PDjh;IYnl=Ft8CmV$J;YKV+P_CnOH,Y7Sm>C(q^5Q'\Tqk:8Nn/hBRJ!ete>fM^
%:>,htQP.W_rVkN]\;>H9M(]Fk[]t!:].BOYVOMZrde/60AI1aMILu%\1*Xe]Z\gM=\bE[WYH#(.$eLQ0ULI?r-:C@l$F?o[mVD4<
%nAqP2YI0;I3E@<FFKO!iSQobKe.tj5F_P15jarM0U(,hg951B%6RMP]f`<BDp=_kNRBk#eE%E!aF_P&"g6YP;J72k_%UD?k?U%j;
%ce"5NBudo;d%o(ub</jEq.aYQ=n,EKXliNPPn;ppcV^_&IOQ=aB_S.3A>esGPK%_rf+WABN-RSAM-;g<s7W&9V:S4D5Pb5pc19KX
%a4P7T[l<P`7I*I<2&:XrGVe(qr:9I$(h`\TF5UtGGMsiPA2EYk9@b]a]fGU]$t&Nk03iEOn?';!ZccdD\@!%O]#=QC/RFJ8PdRj?
%aBeEe9++k+q=<L;i4['T]6&[=XEJ0ED"Hh6nSOd&[iDNa>J.N=2mN8Po6$)tKNc)N6T*K?f_p#B!b(E!8u:+8@f^e?A$5q*%QKqn
%0<t7$?bX3aX8Kc'qjZg?mW\3g9<XWN%e4$FJ*re6b37u"hSehpROm8Ml&n("ioXuNES6<1X,ZK\YO[OnYEX8lK/`=#OQHK(P`<Wq
%]'PgrdV;(Y)*[#RV*?Vd9[l&YgumH]S"7,^pO*Zf+7XA-DrT%1gr7J,S2-%RYdous'NSDuE]s)`hYuiROH*,.lZ;5fZK7fehP\A7
%3'+n3:Qq3u[J\?`ZK6W)inJZ`9B$uOGPIg3A3eMmg(7u1ppNZ?=A3]&&mt.+gQ+H4Dm6U<fHF?qQ5>2Q\XN[\itKCVDYsLV:qu=P
%ONq0sN_P_9>IF-Y:=C"=8biQdZQD.-834f`I-9TSc*$;i/RmSm5i\'"jj9kU/-c"#Xpjsao,<2gVDae;=Rl$4Fq,n\\UrHt8=/PW
%WGU)<fM>.aWJ#JOpNaH$j.Z*3W]aNUcW;$P=URF`29fs)9mR_Z+^a/$miO>sAPlM\R>*-!eJ35=[%Gm>f2%tnJ%4<_8Wtk1fe:o4
%'<F!OLXuoM\;j4qVZDFZ9<YP3Ie*<$^HRG8^Z&E=:VZnLTD_3,qScf*rVHPUCoi-d8cSO0qCfF?'8[t?#%_[N,p4.$7?&c;V1U<N
%Sg=.)Dh%HsZ)MDX?915>U[3Jg'MdUN(G&"CV!=kr%o+V8;um`5T0Vkp,'%2XmRZ#k2F9iTj6fY]'$Gcr!#7CA3r_oO[Zt2k/57p)
%pJOimZ@*39mB$2t%e#ok6sA@G;OEWb^fC6]B%`\VEPnb(<%/G>'o<E(XAA:PGZ.1EN3ks2T&[JkW[]B"830X+-?J"#NTPWP4[uEe
%7EKH_+Sh6+^6M0B'pL4+16eP'b1[828<]Cgr):uUo9eMnk'H#)]K1j]r=.cQa;n=<L>h:5VG["R8$QMdF^C/#JO_j*#=C_RPGX'0
%NthN&"(Y&nYDbh3*Hp;#*W^>BkD4MB'c$%LPM#//<LJ"\"ong.eL4\cRYZh-;%09XY1ATJiMqsU!7_I`FsuZGg;f`N.5G"FNg\Y[
%`PogubhGGMl*f4\k'*iO*d"*nU`)qVW8U9%7kT0$1kW#^k[(8QZG+%U93UtkJRY'oH8UG:c6Aoa!<UTb,h]k"c!T2a7Z.9@HXLs[
%[iM@-XrgS"$fsnT,i&cp0nIBE1b?lc22'J>;&N6`S.U.R/I52O8+MYg4GPD>3Yk!A%9,7%8EacM3MO$7a+b5=^T\Xl9q<SU7%rEq
%CPf/-2<)U.cRRa.iooR7p?<LANL2;P&pZZWhfBMOD.<\k01AntJQffC>?6ltl\Zo+<>c@Fb%Sp"I]ic$eg?N*DmaVD<9]2bX:gDN
%M;NfVK>*WQr:rSTLVN]ZO8n`oYQ+C05Q(MihgYUt59p%/."jT6m4Y+2_r(LagY_u/T:UN%b?t8!ldpW4qfdPbj);L%0;&4kY5DZ%
%cW#jE8^7iB:DAtJV%FHp;#hI/oBT82EI*mKLE4=[V?T>S:8L'3n1Xe/X*Qo,bu^]lIea`0B`-&Q=MrUks$(ZqE<`13AK/(6oOi&b
%MUN2-D3Wpkj#/^=(nuY'%S;Kb(0!SC$QEe]_fhCY/U]_be_39!21=phhruUFhSc=n;EGRY18cN@1^p!<nb\(pq*kJaV]U5"9JbOo
%GuU/K.,'/$.=kY:;dqi5f8>['.dG'p<>KD(lrE,pS/_<2ee:He@_SPK=[*p@oJPfk7=5r!rY,MdaJrui?l$6>c,:2C]'Z7'H\fPM
%kV<ls9MmO2XpR0%UYf:7@Xpgs:-B0n=P<-k<BNfDe7jah6BQ<CS^!nND"`l^1.;no:1]I2<NCo]HYgUlUW2Uj(/Kf3$taZdXN!u9
%_+TWRP,Zf%8Knf3TIS]rX!a]0WDEV^.&s-Qa\iOJG;hb2IdX;Lj/VcW("H2o2\3sq00$Fn6lC.mI>6)iL_b?L^/p#18EZV?%;FuZ
%7T=u#]35TC\Bi'*RNNr0fAd"]4>taHUh'<lZe_aBchi(S:4.+D)G1/k7Km\eq#n(0G@R2<.f;'"6CLZ7hjP"m_do]f.4U8p2*[Vo
%8YTU;TI(XW(k1r4Kb4lEGE-\50%A6IkH"<H;&Qn%ji52.M%UYP.U7LhiT-M=kN_i8-n?e%1?N4bi22KJpVKQ0*"h:92(5\?%^>Y^
%d9cl,1fKkF#0UsRGQ7kqBl]T(/u*/Ff[5i?Ra[h5i&F+bc0\gmnH0^7DK*hmW$\ZjmKt&^.&!>WA?!\4Dk/#f9HDh=TbeBMH8mDP
%QlI0iKFO![qN$kflIL&P/,U]p@F<)q\u]Pik(rt6<LuWpA=FAR_oa+\kbRrS9_pr33i1^*qEgMagQupT'-TG<ESVeA.G,:Db^5XM
%`lssI?p).aP3<"KVtNHYG3Bh/J"X8N?YFP-OYrr3abL5O!L-P*h\`G1')JFlHPYiLY6IR#Q#k$0ND]fIN]jJNR*BD'jAH-i48?8D
%M?)J3Z7=+@a#8Im,0$pSdNM/#:"eYidP4]ln;;^]V[`=4QE-4ETu^Hb(8a1'e8Fo)^^'0(lZIYqKM7jX0a4*,e'="t^?4Y^l6N@!
%U[oRt0R<;#>0le6NH9OJbu\m;1ChrY5?+U]_-.\U5*RS]6?;PA_j4_;KN?bKCP,rU7,Wg1e:X#T]_jYY4Cs::<Yk3P'f<Srj&iFk
%La86QAlpbM,ET5OVl><`JSS!ns(g;Xebf&<+MbWY<'sTe$\cJa/^*#bXTX/PIHN\\:p"PdCM'*$UB;F-f*6tMPWD\s!QD\mW/MbN
%!M#!Faq%C$V9Em5HH+SC>Hltr>@7sG`LP?3ku>R/\^1hbFZ9X:9'#m)`L:^W(g3KGT"(e,P?tJhVA$tF\%YZ6Mdb#'k@DUqqi\li
%XEZe-:/\a1c=mU$&6As%nb$u!MRPPpYfenP;<3M,IM]91G61=@%ia@,VV$=H_WpOrbd#8ZQJFFmQe[NDs#A[Nc4)=1r:RsgZDE=L
%J*>Y_5I.5,6PY-p$6P:Ghlla3I0s]^1`\kU__Tci499+#!1i$&#XurG;j42?^bjYS*&7lmhqg8aEYPJfK^9>s[HU7+C,.ILEE,6,
%7C,I[$u)*>c5C/JcbR3=i@D6tZmpiZE'EO^_5(djV.9_3he?HMCf'>j+&aI*r[!E8\Wk<<TEZIXPtX1(oasnMN+""%T(Q=?DTm,6
%%TT3U(BaF1qjiL&odQbf'@)6c"P0e>dc"tJA]%1\m?0$KW.bf5!Fcli?:%PSS:W$)e;c=OlCs4dmF(/o(7P>IX-]M:B9.a3600pb
%;5-tB:VW#N5oBmid9L'V:'W*]8@Rq(9hkrW!0X1s!@"Q@`HV7BI8b[m(bqA<SH:D3WE5!0mpRs7839@bQ\"'n^kZ!/*@oJbT;Tfr
%USa3A:fTN</P90PHl6R4SgKL;>O6FPUWS[L9*?qBUJFid/)$4YX:njS+-r@Ob`tdbZ3':^5\34Pn=H64[tDF=m$ZkZO7U&bD"*Vc
%W.B#_\o1YJZ5?hsSYgB(X8`qS%;U=EO@Y7s='-*ln-_2"53\!jnY*K=$m_R8`C`J'L4N"]2m*.N35G\[cEKe[N;X"DG)fTra%(&$
%[RqNpp'epeF%bDLL<KNP$-Mg`qNmgCFWjBL8Weupm.>c&\nK<f+O/[`.=%@L\n_eoS=3]b&6S4/fuV+7eVlUW<[NW%#"K.-do7F'
%a3hT2Ksi&L@M,K8A2X/Y`TV;?2-3>I^C%1_*1&^BE^Z@P\)Cg"]?kZ(qe0+VVK%K"++3a.[G<"DV1*fjj@Q<KW9K[]-qB;pK@*0o
%:1':M+u(YQZ^?cgFM.O'[kGLhBgK:F!"XO\^/H;rONLNq"\U.8Bu_TMU'%S=n0eX^3?<0#3BMs`hA_e`$h8L(_DirW!B;Z:Z]F9!
%J7^ZCK9YUU2P2eRkKI)IL\Z8@fb(?)7&LXPZT5(DlTUcDpJ+/F]()Pn6AG.542Pr4j1F$UK%[t69NOJ+pN.WI^pK+O@Zf?i'f*&W
%ajZ8qn8O3O`YJ`d`5YG+NG,bd*6OG8H_'McI:*Xm@djPlS]Db9H.aIs97\oD`;+hmo@bC"HIds(_sJrMX>c1]rT8N\p''^<p'GBN
%T:o%'S'?#$_s+1R6i'3DUB8bXZu-D:7Y1];dLr3orlYF56PKSpbD%3uNtQ%*]'[XX^jDnFGW_^b7^oNg3BNA42SN?&dhb9G:!sS!
%R,8F0F.ba*,W?r1-j70R:s-NA8T+/GlI:Laqr#r[X#.Ou%CPH$J%Ud5j/g^;o.k.P'j=3%B[];=$DBgNdLRi%`)p*?lEaQa2<M'D
%n]@[>7/9"03ZY7N6)S^Wo&90@*gB[^iPVGP"[!^TiJ+\5,uMoMZ[A!JL(rr>n5=R\$f<)=^!RpZXqT#*<k:Iid3A8_V0TE%j':-J
%=ghJoYS(?"d>b0jkbj%n3s`iRPps\HEWqiQK*/[O?A^s7&qBhd,GM:G=mSsuLPFQeQ@eVa>*DH$:l6q2/%%b5`fc:h7[g\][U/1,
%Ss2$gcJ)n>kc1-<Um*98.o_W$`H>?"OY@\QV<1IdR,Rd/s&kn<C4oADdse6P_0/+G.5pK-#!c7[YG!Kj"6Z20=jAi^207E-g4@>k
%=Ym"4*0"$ss1i_fk:`K@7E$+m]$nNnl[VljYC3tImrVE'3StN>$ae>qQ$5'u6pH@!SqH9RXC<DNp7&AolB6;/+osInniK'TOJV45
%L]4R=^IJdjol!Vobk2nbKo)[i8G-kH/B_N6+_A2bLP:iXMIUt3h9ruY]:[*K1e.US;2Cm\Y,r%d"H#TJ271/]Q=Sn;_Ig>@c:&l]
%&ojJ@<$(mZ)Db;)=2aelo>6Yoo!&1PVWZb9?P6c^=Ao@=S"d'BCQ%>E>7][`?rn5n,3127Ql]'9;@UmMO>+uq]dF)UZ6a1J^f1Z@
%ML5!B]f_S^Hg`hm>6W7;jfi-Ih:aI!ealUAbbX_=JT&%Dn<<!9GnpU@0SfA(`M/'7(&cE^ah7@_O6D.!X!&I]OKZL;Rl9]-+5oAM
%8f4b'K+T[Fq1Sn2o;ZJ)811'ZIVWur<(GE"qb0;\U0o&n]q7VOm*M?E2#2.''cXp64*l(-ADKju5ej2KE<?#7O)-X,+OBFUmhdGr
%l?`:>*bb#<?A<ogF;:3EGYI6@[T`bs&qT>1eO\l?:^C=NpZs%@Wc3jN;'AgbYJ_JT3!Lul-C2)RH9HZZ0m`Y6qC^n'8DkstU3hIR
%YhkU0$!P?9`r(abSGm^hOr0r\00W&p%Np3dY;@F0o,G7anoG#(A3&KOqs;!CSJj-*\bNWFJC1tZS41b(-#BD&L;UUP7\ElWG"R[\
%>6;A_9;62"/"KB=G"g.gdMKZ6@j7]^V)%+'k1oG8XTec<#Ajm*r.ETA5p&4U)JL<h]KkG4d:U^CQsUTjErDK2k%+D\X'.I:^/NZW
%&f06,:H)"G(7ZNLYYZYVNCd*K02"I3#2:JV?c#3d*BjSr`\cQaWF^makYuSj#c,NL,;kiDm)VVu:>0^',h;(8,*+ZG\@H#rP!Fke
%`gbi?<%J8V$5.eU3V3/82%Dd\P7!L9'UBmC[hH.oXUnM,4nld$2)6&$2!E)retPYN<HC5ZJ_H><hH-nU;,M#-N.BqG;#-l5Yoc!O
%EA[oa9n:jB?Bo]H.#.odbj$sb6aQcs#Gik:#RDJIkLmC09qT6hY@AqWJtqUW/0P2?oX0@SJ0I<t+(1#!Q?t<c>^3BJHK[iI;IlO4
%&+`lSda7Nb:c3F(K:gn!>noqg]Nc';4l9tG48kY0%cICdH`*hs^M/_ba.$ht)JHq^9en:2rF;;@=aOZhkaXn0a=\n4?oWl9^!j>s
%B,#1kD>/.q/#@@/593gQTC&4O*dNhC95;-Fb$e;TM8l19c<npkT%&7q?D-']GQUc,.tOA?>ej91)f?j=8HF%P8>1B^i&<2F60L!1
%)Eee:EH5af*Z/KhI$^^kfL<M00i&uu!ZgWIf%DcZAV;&Dg=@2fb(K.?di&a:?m27:'<RgiO#UE$)8rD&6r5iJ[7Q2ZR9J[.[Sc-d
%N#m<feX/Jh8WVNg0[9=o%lpPIWl96]dD7j*AAJD*0^I@"O^jk4&f-\b]^RUn3fkRVU&N&k\[dX9;kO68JYdpN!_ee[#/ZA6WGOZ\
%\too=q;%q4-t_ul+rc(]3-J#nM_I3m5K.fKh(Pd(22oOk;#u:18JX\Xe-=/-&^c6T;\?[;A$_S*g^mb%/Y]]\H8)"`2O]p9a-u-?
%k6@6=IjUY]"2@5NniSbE#L7&LR^Tb#k-W[E:KiX1UnbW6;Mo8<jJ&O4m-@S\[,-Om*_]aXa8d];"Nt3<#EL33hqe,s'\'aA(ic`)
%U((+@kNLW'9Y1YiO^7CkFo_daBM_9i9Yih"jGQQ&4&\P3"lj)f:\X5m7-8kR"][<L^-k8Lgj"hh$O%W6+jc`*7u&Zf&`Xa=d3j0a
%UB.%NmDX,C+<3d=T#g,Q`%A&e0Qc%N4Ca1C,Ld,UQ#UKt+3=e75\a6$69Q]k^f_@C@SV.B#n'l6N4:fI1>>F*\^`l6Y]pK[(,2;?
%0;nC6ateF7j*PD"q>Ij3o"JLN6^jNF;Lu`uiM8+LDOROK`?:cTF,5E$K7Um^dgj<(`[;l]+1l-+cB?rteH9R-0m$uJWc2P!AVn:'
%_V%LLKNo*/#";GZaQQbg7DVGPPD(ZEgdl6b1K7nia;4l`T=bQ0Z6S6kr4;V@Z#IP(:]KtElBc]V^\=(%otJb*1'sao)HDu:-AZ_a
%9G(>J[R<]dP/kb'4_TC+ZR92T5)]kH?D7Lh1_H>%0KqW:&(A#6a3Jkn@>pVm4)37J]m.M']g!qbo!F`I_+scq/,N0#>2j&O3A.V)
%V$OGHM3k/2Cf4Cd9JNoK'3Ocd>o6:kQf,).b!s').j/r?5:O`VX)RWh[JBYMbMn7I&;+T_D;<q%e@@=::6sb;*,6c\MnsFbVk%]'
%hh2/1"@-g7nDo7KIdh>!#k!)o_OaP]#-"BL+(ZM%(oL>Y@jO4W#kej>N[gd[*&?B/23g[rNpPUT_(JDaUk,bX5.(lWL7&>\a_</T
%*]Eb9;m?HT6-PKKnB"$)$DCopbMAM#JOmHh?i,C!4pQf<]7M?J%PRs,Ag=t`g<VgK5FPY%$cPSdC`.cm[k:ZAZiJ!RFX@jk6;gSi
%f1IkpCRiD,-kbmEL`3+=H#AMBKQe`JNuAa5!sT,B(2Ger/m0<T=KtEGCsu?Up4aPt):/n#nO'9M@M(h2VYL<TKCGs!@3JG^YOTQJ
%,BhrN3)(!HH.&6uhH#LOIB&'"!m+QkZqk[OZ2G2=[=DBOW7JIQOf(M0R[eG<[hD5]Wg:YaVCYZ-XlC>g-7#j\RG*mg5+(qN#O?pj
%3bYQ"^+UM4;%Lj4.MRiDq;>19YiZn`O,o@jI)`\b*:74COC[">0f1K#14_rp=X;)4\^#s&Ki=I((?0NF=*V26[=Vm?b3tYFU*:D@
%$mOJ>JlbcgU)H%G3\UZd3rlj(_#;`7Vts)c=c1[N055d5/#[1Hh0ao9<+#_H*.!/E&d3Y:,LFa@$08Y$H6./KJ/Df[(R5hkPHED"
%/"V]D^iuN'O^hBMouPL+2,GA9T-e5:O>+O`W"^P?ASA"e9R/*XBdt4sS.a>/iPZ!0^t\ChJ7MNVE8[3RfL[g!q>"`=>=P@Yjl"4l
%nA>TN^]UR]*^$4f%F^7no,>R;da:us/@d4pHbucRk728peu*A+#`/qkX,Lbkg8@MQ86d!C/QP*!Km"\GQjO2"reFt/#b1%bMl78W
%6aErqY\gCA(7b=IJrO&(*":=NP&WU+A%5?/[Q"8s(G@=WA.jGBc!SY+X7C%`UG?adjYrh"3QuY"mg#t7;n/<e&L<]`.iTlfl:c%I
%\tI;Ig\>h[#aU^Y6F`5VL43%m-Jfk#g+lTUNl,dD_?Yoi!)r*83B-/dk`#L/r3V0lJ%4=kT?UH`_"lcH57]uN_i(DoO2l>RB]D%+
%C[>q%=_.A,<(bBT]D=u3EY#!gM.B45KBZ:N!Te-$(tcaA:AC(g\UuK3FYY>C7s@-QmVb&>mB>R_'uqo3JN5M.]]+/(*DZ9GS*&Q<
%ai#(0"JhKZ\o[6@f1+k'9A=MKUQQ.K#u.lp7jaLK.-?d@[<!9\D9bncYCWP&&ccs,W&E:b2QUL$0WCZrfos4Y7;_#Q'9,+3PZSZ4
%ZJJl*Ah0DZ<br]5S!4^pEP%"dIYO;;c1?i&<>>G.HAAqu,VkUCT)6[2ZBQ'jCQAu^pp63DG'"*m.?o1"Pa?'qA[1j9V1bOqT*p"e
%cW$($;+TOY2=HPYU`r3(-t;\_SdF^K'O#L?>`CR1eY\na@jM%`5]&>'d?&WuR,MS:N?5-<`n,dI(Q'">)<B9ebFh%2OXd[Y4XLbq
%`J3P,6PQXNQa1ic=!6)iE`V(El@0t:0o,6gc,pD*dOB;`glVb<1hr@J[i`f1B@K7&TE8h1Q+V_YMcMK7+GX_J&l=4YW:P,6$_64W
%K![Qj0YX\\GG<AXeX=MpkRo0DT1@5)fX0!QU(Y[O$#-e9#bG3OcPlh13m_"uIobiElJBX:XRoDkXd[#"<#q)oSN@0IdEbeV906^:
%W@nf!<nIRI[BS;R'X;@&#WYY8]VHa`ljH#Yp_bR$W_H%faI8h5&"Lk*m;u8U4V`*pZ_Pc*YD.!"GV&KpISPt;2/RsY9F%k<_:9C'
%jE35(CIBsu^t&2G("[RfU:;SKX?dJW"*(o2Xa(t?#B+b@.SUBi=`qHi8sP,\6]K.?X*o,L!gcYGMae?En]Ng`V>4@(L/,jEloNr1
%"WtpDUK5pP;$lHfdA&r8]8m.%AuI$G4aRq9quC>*_p[5oas*nQRF!)PbD6`T">0e[[YAtkd-@S<0WZW5Su'U/3/!Ud*qu[Kqq.bG
%"=OKF%li$8[tHbPJ<R?P_)tgs793]ana<Aqh;W=rD,bLGpN-V)8O?6_-X*6.;au62EYR"9rBj[FBN`"#[dOA4Ij+.>'9I]n]#n0R
%8JOq$<'j]2[=ZS,jE!^S'pk7gWk?!KkDPQ;(tm>]c$6XnoN6H!(pdVEABq%]RfFGL]X@WC__,et<DP<l'GZJ@M*b6kSo'dN:e*mS
%d4+YAPA2k.Pm:&u1f'cUTC`h%1GBqTX``HX]-tiBKM_649#N2Vj^T4k6V_-e)-"0rRn@pX-W!"*3_G4L'\FcF/(7H+IQAaIh4cH_
%_KbWV;ZaiCL3])_Ae1`l"OmaM6#q&GemX$+b%4,7n.n#d(Y=nq<)7M(I8RZY3%[,'fduN6.92h2_m4*D,.?hTNN)Zd*6PJ5A-V3e
%cR;^.Mh!!NK)^4_8hoSCXRUQ&T3;oDIeB,UFl)TP/3'4FkKKaU=QEt8/#NM3'%_U]bR`lSPNk3qaO0(iGiYknkb'WE$DQctQ'?B!
%\c@qE_9GB+okV]qYj+QrSg!=S?+hkMW/ip,da2+bh$<D)69#G?Cnlihc4tGiRrcT(Fn;Eq>h.uZ21f;UZcnY7`oIE$R$/iie^*+#
%R5h>0Lo*LSf`K:OBQTDnNTOnW3ZpI#L#2oVPG7?(T@Dp6%Kh<0FoWm1M["j)4)L@a6cFc/#Un+S.5I@C>eo6W:YMO`\dH,a]72M4
%+o("6kQ&84LI^YeT.?MYb<>l33$Reg]]Z';E1]!$^^qs(>1K4C]7*ZS8^#q8_qmpfN0'?"?s#*8<9L\>lT/4NO#kj('f9305WqSu
%n1*'=H"Dbi<2_Q=?b<bH6bNB-e-fKIWZ+TX2(q/PB85/D&&."^-TcP@KP]A?GUJ/2`uMIchL>:N\ES)Ml33rS3LU[gc*sh+jqgr>
%d3RtAUr<Zo<T)B61WA]`bu$\TM,Eu>P+($r&Uo5s0'u_SlXj8R=%g]oRP_M]+,<!('#4C1?`2t\>rN1U&2Eu+(!0GIho+FrCSiK\
%VpH,X.gX(h)bCs/cE(;Q"XCmk\#d;EekEdj:;VpAYU2Hpr$@?#e?V:a*<ctR,'kb4RZ,s!S3KB!-7mnH4X.rT^RU4cYKZ*@42iWj
%N2Du-]%)1d5oG$;n4h8TaD6@>@G=J6b]R:cVB65n1qU)b$,Y;oApS!EWYL6r^6>Y\>R(tnqc-n+>!:4>;VO])T0St)qnXnnR&Vd=
%/Xd:gjVNtp?mEGXodJH94/eh4kJn$&FR1-.'Ys#NeM7>lPqahKpgOpg[%Qf!gaf$8\hQ)N3$L7f$CDP<HfIV3)p(e0UF=(lQl/(/
%V59ZrAdaK32o.,0Cn,C-7:N43G5>N@&^aIbB(i!C>9pp,K&r1j-$=!LYE!-o*;&16h`Ri:rXlu!Y[g4$of(Y6M%S^`K=NM9jC,%]
%+1rSm`*pNn>7WiT0;A2n=1P0)mJOq14abOX7Jn$eaq/cYJ&KC07KXtW?(aeLb>U,"aopJ2_09;K,$sq76,RBP74:D^TS5D'hGXn]
%i$_HaS[]+S5D2>@1D/jPBF)#B,GtIXb43j<80qAdFutY9"0#%03Ubs'(Pd*=HqeWo.,P^O=SIDJ!@j73L4f)LpF^KP'YJ^O4Dok:
%fk]m",Fi'06LJM.1bS0(eJG"a7GAPkRjRDl,"#mYet'qa'_h:_a#ZX,"q:$0Q/3,q^kVXd6ocnU!/dh4)^Xf)S)FJ\[Q&\8dECca
%M'Jr)W8oUh<b`5h)T83\FqSP!Cj4g0S@035N7ItPJ4p<o*I3-3G,'QjpAE11`UW5K!DLe]MF$AR$?=EfimKe7I8OH)\@i5sckr%A
%RLt=NQ;FG9$qaal(?,$SrKI>KU.=Zc![3"'/=HWUKuLd3(JQ"!Os:8GI0C54]uMh+U"B[-mlMN@:EE*h27Tm^q&$L>k>hAu3AFes
%Q+js0]FS#QV%-)GIh*bZfR+[YVEdtZ&dcs5!&4h<SS:k0ijL=_V+QGQ24+,$hPh_Im'bR#kGSmFibVOj,:0o3(fM1HR?BI^GmUr0
%*g.!/L.kSMe4>_YIk\aSGrW[h5r:r/'r`+E_Xm9fbC9-IY$I3o<9B:?egdo/3\1>k`t:ip%<-+XH300:4*%7m/&jMIeCS#@_H<qT
%.qiK?TbqGX;ZYZV:@SoY*0Xn.nk?/A5JiFP(Q`D;_&rrNQ!)+R""&V#liJkmSIdhl/G>X$+8)=Hn#*9i9DGguJJpps?>huN*TmB"
%/WtLoq7=J(&!B^h-m=+#H4!MnHHl7#h&o=;D<;4[X]A.(78[&E7MM`hI['^YNGeJk$X?MR?\e''gJ7MX[<ZM5/s/QY:@PmT$A@D4
%\3*$J9G;:\PYc2MUl8!2]_pUs%HoP/VQHIeF89GqDetcG&rB$g3OEq!N,"GMU"3(@!Fi>c+JL<<dQ.k5+BF)opK6o`AGIo=f*HbO
%mhZW6TdFY6Eh.<sig3=0p2]'del<.fQ%Bd:I.;Y-W`o@&a?Wkl"-tkr2TI[iX9l!C=J!s@O\kF+*ArTb<Zk#._:88@\8VPpi0*T6
%j$"oe05d(,[O]KtLFB]de=]j_8Y-.]51NmB,qnXH!N'#e()L"U2M*0*,rkpj3kAH+XOk\B\+<pY/D)1\U0`65#7CX3Xo6Wq^71hq
%\PG'1'ftJ+heR0EW=288<rbA(\of<A5V%X+&:"',+3nj=m9!6X6:(Pd5PX*r/.pSU_[dZE(O=`\QN]mk#4dRX6ork?Dd@+[U^=\7
%UY8LYHU:A8gcilY:$BD>g?GU\ZD7WtUSQ<2W_%ub6V*XQ<?`klEEL.9'g@A=>G/Q];?."h6;0]qK8H:c\=-(=It5$C#g'=g3F4lH
%Z<-Kp(D%Q.o+:mH5).D/H_h-3Y.7AOjN.PWZ77\LNlm02;7]bnFZ7.ep/WIM$ZJAJDd'nDBAijo!!MXY]]FmCc5(uM1*Hnj5=h7o
%g8C[<];dR,83jI8`2Q2$-5&$Z?@q-9g>N']>Uh.:L'hCirF,nP6Xk(lcr<;2Z$*tDPrq7)(ntn6B*mb4,6)_:d0KD"<Y,)H?tEqU
%/H$?<'=,0PIJdIa5BPi/nH^4$ru+(*G4H`MD&n_`",@1rOut66e@%CAP7$_NqYV-n8:L)#YP>$Yb[Ob$KpAPqkksnOC^6a=4Y`]]
%#qR\59d9DgU$27?)9pS(s(J$=R3F`ni`@A(+mbIB:^O/UKAt#;_Q"*Ko%=`A-QC6caSM8NP-6/;?0JS^]oXndZ?kSP6W`]0#RKk<
%:mQUm:C'"fK%.0V$B']IJ@-6DB9Ik;U1B8ea6$JA+#FWC-%r#><t7XkL(&VU'8]m#'m'tR,1d2iqE\).6m8V'PfFA2)k^2,[OR,2
%cI6>-O7l[6cKQ2l%7UK%YZW+!Xd6gF18jh^)?k5\PrYi!>6RY*^e6eMY?*=]V+U4<kp6);Xf<"V6Ctd>V*NGk"rVA*,qNjb[.]\3
%%#P\jMg8E+AK?]44W:>)kPUaeCHn2gYm6pb;U-mHWc'8l&Rl#(N1tRYR%[^'8n!r!7X;u>P9QWY4+eQaDd5j0]N[..4ZQU`U+X55
%+=aNEAL])n5&/H?4J_Nj*$a"'<)%)7?of])[D^EFK$bd4e3t@)ppY2VG+DCGZ5Vd*Xg3Ko!j.I';b)4o=PEBeZ;Lg=U`g#KlPD:T
%J-AM3E2lSP47!o>=L+;N`V2aRV3r94^R-V*apOD@o#@MPF-^jK>.<Ehd&(W!;7=0nocM\HN<Jl$Qne's=(%R+4pPN[VTFWW"P,</
%Fok45X>;pSI0[n7='=^.jg=[\?d/$pc)_>P<i/ClL`'d7QZH@-WjL8s'Ri"%Wn2PpGgqG@NRfLXO"&rMZ;Y"_=fo^E]tf!t\5cpp
%R3HO(5=#2sVfrms8#jGk.RUE&<0%YZZnRc9Q(J-gQU*.[#f0K(<^2&ciBc[d.;GZ>4!$d48'AT?&4%S-)LG5ac-ckhdRW\a5@(uK
%'Em^7\YPM++KQ>M(!f9^7-;oG"qo;ecq:!;@:.;d/1h2LYn<2PBDZApZBnBTMBUL-)kUJ2%YVm,aVgCEDVCqp4ZumMmpFbJ7BPUf
%&WC(H`IEBQR`/Y3q*06=PXq[`>>Ve^[jG*q"Qq72:HHf%RBc[dcSJZLi+bA6T?sdV"O$")QRu<NYQ%&$D05u@<9]TPHfOjV=#k40
%o5p<WSS6Nf67G#-d!YiSOPr'h*`\u_deX?F+jhP=:<c9,PQ-=^Q2$H60#;aKlb/m<];1m[?iQ2bpZWL/qW@Gms7#F5^]*qNs7\JP
%naCu'\$n['ml#?mrZ.$T?iMs+5CDhsleal:%Xn=tMZ;S8o3[!ns8(X8^]*-ds8HTDkL4p0qEP"`j67Y82ZNPrG3SB&V*%DL-C*iI
%!:W7=1YB[brd(gb%a>.7+3`mVe:L+]8tJIB,&KoN.9<>`:*h)0&aVA4f]ql<S[1-o:8&2cX`\[mW+.Q@Yb]VO9MorO9Q%<FY7(mB
%^]],^@D-1XLg#O`Z5R2]p6=Na9Sc\OdTJoUaW$PYR)6,!'S/\0BG_^DZF'H>eN"EEP[XP?%;&csrn:4G1S_rS]\`p:T,O!CIR1O3
%.2p3UXp`4c[u$c=mJ[qo@rMp(412kQGW?&#Ybr#ldUm$m8BJ(u8Q9+QJ>RNuV<M;$T8;;b3QRO'[sJY\jc\"iA"0KYRX#krYE-oY
%#Xj*(7.5`HWcmp_*-A(D`>X"$Tukh=?iAW4-=N%/Nm=8WcC^-BJ,<aMNhc2eSl^tKcL?rDkF]k=o.4!:lP:);JoOkf7=_Af_m@7j
%7p$FK7edY^nN5ho`'@""rJ8E]+p&p%E`fS+rJoqu3l9kZ>en5sFE*KY)EiBO;D5"OVb)f_F=D/Cgdk>3hW$^-&_2S6W4*I;J%BVH
%IIV%?%AAui"1@gl.Eg&m-U]eP+G`*F<F!B(ciqC]`A`Bq3N=GP^_dHYM=WA]pK%ij@pdVWC[N[->#ISNLN3*?.@-'=`Z2BW<UF8D
%U7FUN5X,2u%p=gkN4Ocac:<0;&?7TS(d;qM:C%T=+HAlUp%$#W3u_O'Y;0,+a/A")g58d6$JFFG?(;@^\9tX.6)$?#@h+G:lmJV1
%+Uh^I_r9[@/sPe)Ln[^t`E6#u-`*nI%<P.:PDqE`$5KL2:%?'`fl6B3Csh^,X<2&T-C.e13iV;1ROEl#81I3KlKQ>R+NBQY5(Z-2
%&t=T'?9K9Z%h8%OXRsmDQ_-(7.I7?QAoUq[U4B@W2$nP39e^Qu@RRL0.IRigNMO\#&6'p>0+&:_qnOi._.Q8t0Bit^<S"RW3THt&
%cOp\_`p+j.Cl_`<k0O[c$1c+J_Bc:2.-chpRCeS9&X8IO)Bnqim2;Y&qHFRl51GZ,K=6&p]I9d2\4d]kYXsWAJ0&7..5YMsW\&oW
%'U(O$F\C.pXNmdrlmhHp`2JC-r=/%=Bpdb-`3er!=<=e+ilY-5W=F!c3*8U9(;]NuUs.!V]d'Q"5a$j\!RLJm@I^B\LaFP.VsSQ"
%NDU@*:aUKMN;4?Rn3ddf_$@+9;3(M3;Q??U>sI$.ruT2J-[YfugZtL)V#'%iY0RK"Z-FU?QIQ>IF=YbFDAQ=&:?oP3>U`TPTkI(4
%WmhM<lDuFH+F?E+@(S+>s%_j6Nl,e=eOZTOg`(3Jm/H1oJ$nPU?DP_-?eFo"mmEmt<0L/US:e_+WN1rAJ!#$iM_2+_f0GuL$ClXC
%8kOpuoo^?8:5=AG\+FE9?pC>9.89l/JL)u,/@@ip$4EDI+ICdT@YE15".,i&U)_S<!Ql$]Lf7SSd49W6[F^Y:5-32r_7.,0L1>2c
%:Ak;&P#$.0*Ea9)'C5:7n6S*4CXeINjO@GV_'$q#R.F25ASr8/"LBJ=$-N*K5+7$(/^l9YFjW&K2T>%KCA-mD14a,;WjAaB,[-9@
%=FeQ/8_f5%;U:I[h#!;?b(sR6H=U.>#%c!)MhqJ5$Woi+q;U(8^*lq\R5",KoRe8I5jC\*'TVHFp./m!D$[d&A76l/N2Dc7n3]J@
%%Z$N78+^,sK,qq$!gHNo=?ed8@:6#AG$*1m^=C)"(dSO$F52qPe?$Aqi1*L&`^f9ONUUNs"+l^8e[<5d\&bp]WU&d;\A*$WWokc1
%&c8V+_pEJ,QdodC`<,grJX6.Soq^MZnbll)l^r$n6/-"a:YUFlpFI>Ph/M'1GmQcec:d81\)XcoL01r!DuJ^G:a9%:bCOlM)/1L*
%N[mYYY/:l-Cca1^4KoonoHUZZ'%W6EY`qq]_ihlqrNHEYX2As+)fV@5pTOR,'CB.VcsH[_)mgEifh[7oY8'I5&sY[/<;M6s8L.2F
%KG^gq/[qGe.P@DK\9U.>q7V2fSEaNj3D"dX&?`&`",JQ5M5P..0Pe(\UrHBr=-FGXR+.%_+l^=c4VN^QU8@saOD_6aD(0kGk]oeo
%3(D-Cl'n\Z76+\"C+n#17,?6gp66N[_N506hW`7#;X[`io)taaGP%Hf7eQ/^\?rk*"OG8*%*\=hn2+.H(sRcf+pHKeXsKr_dgBcN
%\J*BdX+rM$!Fof7i8N]`L7ba.o<Z4J75r(GnW?-Y=dq)5CL;pl&.=IdB]3JJcn25li*ka5ebN;lCgD`m#L%:JEIh*3U2D0F,'&*>
%8a:I+Fcja'F>%d-$?Qn["C;tPH:eg&:N#:6$lP1-69?>%pHejrm5\0SV2h+g?^ul1C@(lV;a82D46H89p^VPAnlmEJE?pZm?N57J
%G8n?50E8j&,q'H%mk=M*F,qrb;Me5<65RKg`IbRBXO*\t#CqI0DFK412D$*[[B*:-(FD6Js!$.&E@]VJ>6IH2XpFd*(#q6_#3^h.
%8P>bkTD=rTLfNTOGaAplpl_>@r,\noreJhTYj/C!jgL>U1$C!\!43[Vc.TH])itH+l&O\J6QD??`;t`1#Lsbb^!f@cC)?3MBl9ja
%TN7K01lAC*B[Q6RNE]^]m2$q0*k3n#:9)2l,'"L53b$G'c(pIEr9Hfh)k.Hi5kqC&&$Qi\eoXY`hdq&Al<H4iF)1ODH$JUWQFFYa
%aVqLda0?oZ'k'3D,qHI5i'%*H9(dh`'+l#c.6LE"@"$i=[=@+k'<P1!hB@^F0NnbBeS99#!6g]/TGLrYg(@^)2<==m(1WUMC-LKR
%[-jnSWoKt.d@44tcN64X14U"r<Sh;c_2AD6GUKcbJ4E[<UW,WjF$cW(Gh7J&7>ZBAOOe&fRS_+N;.'-^!qmkk\X8Xgq,CE^k(As2
%e>:h"Lur`XL`aK0M5V&=s41:PRK'ha&5b8n$;O5i?uCPf@>1p-XOcE9rG@/bi34\M6r#Mg&$6kB:8*T)'TLPcH,MEC8,)KV3<Sqa
%)Ba.;lK^0H*"PA!_lEeW=YTf+5edB<!jR;cG>]D1-F4N:2j/Jj(:-g7(a`]3cs.dL")'btVGPu=:"WYd+'0r9%tABA]-Ib-_X6$^
%CQX"=GZ+%Q9/M5.;:(0qG*!dc-qd1bkUp<gl:N6D&p5JYhE7f:>eZ<R0+K3Q&Ws.c'dSB1R$FDkiOY;Q%2As+B[3FZ52D>#NhP'_
%_pM&8F6D2Y#"fY6AV[8m%?QQ;+\"g__2,/P5kh;V;lkX,0$_2K&u2Bg&_,Kl42mZ2Jfk[<nXL"17+U:&gr9olFHS0(l`PN@.Q$r=
%^364p#e[UEF^OrDCQ%0@9?Fp<#no6\56"mRh%kN</5n<+`@E>T/26/3q\+gj7mm$f04LN3ij6GM1Pqh<-@`&'9MGX5+5%nM%YYGG
%%eC*r0Cc<fSQ_61B$hG*WWrCV+ha2"/[=M_Y`\rSdt2G9PO@ZoP]AF+jg3kBOBMEOYPm;f<1ik_J+=pc;%3YaXl6I.F]=#?g%t^X
%YEDrT9M7W['#LrRhX-;73(1ds]JC<]7,nWeFcgBG+/tMA3mW&VST_7d#0!!dZL)rD#&W\g/Z[MHWm*$J,SfVgN\Nr2"mmj#7V'ri
%[M%i-3]dN`;Uc=^n_@QKJU/l;(,5N?XG31=H!sU>QNG)K3a+#K+V(0,AfgKNQ&;qho9'tG^UtDs%lB9$&2&Ib.QaD3T=YO'kPoM,
%P1,X^<K`5==GbOT7\JrZD+jD0[L6M9@(PN4h)V5t''0[e!k_3S:V$V,p'/ffUJGW3>-N2,8?i5Dr5InV-k]UtL;K-?1TAD@4md$&
%K(;C51e+e54"rJU=$lHfNUS[e=b/%RIorH]:Tm0GI21<=;D>EJLZcN79C29Hop.-C&V@&@RAs7n%+fD]/XZ7\GlPkFrRX8npV6-@
%^GE(ij#Dmf(>AX!Y&\MdS"i5:*qJ&S]bdefY+.TOOY7jo0iNbl%#rXL;;hM4AZRja[l0qSa.g1H'Ka#;2#o10nPb[SE"ak(ig(u4
%l^D:Z;5j8Q8@]t.M5j4tYB=YHgf;n7gV#l<.)r(/"-%1Cj;D]:_M.'+&7qVle'G/1'uY.`9&IR;Rmb)^G=8;]$cXgTQrJ.RQ$%9]
%<[DMmETqNX#@^_d+I4bHqS#?aV(m4hi)o`R*gs8l)AF6eH3P[!X!H"=kk2i-Hh.9u8a6*ofG$R[g.AYoYr!@p&+t4scEBg"ItP3C
%"I<]@LiCc)&ScaqZNp_.2.?SD"^.n-lGIjh@\nsPr*<ZPd#i5810?5VL/X("kgEmP<Po6tJKj1+l2s:A%O%[G-sBn8,'jUM;nGJ3
%]*MfTPNiAf!CNt<cN#k.'g:K;b\qLTCV9<!:UP5%Wa6Ta1m1jLnjP`h1b`Z>V-\/%?t@)LRI1)drqI!X$kZ&C8^!#(If3s4J(.%B
%LQc]9[&A8DbZbESeDV>bE*QIu1i5J+d^5>ULW^tAWR=p`kG%IVMH6c8*8ils'm`d+SKDo65uRCH6S8-n^SY!-4n1KEd5BMVG>A!:
%O[JFe6RdB-eW&-&_Wnj[U1M>F(#Bjo4#,A(+8bon&H'$_0%O=l=/c6+?DA);b6&**d(Xq+)U,Ds7%'a1[lP*4VkR\jU6FaFj^kHR
%3GZQI).fquiD?hP4,f!S'^8p<(c1>QCji_&c3B7DnV0GN36p]qCP`ii:[kcLDr?6$]g>6;Zq"tJG_5Js@+!`f!7E&\@B8+Ak1QEE
%l*:U"F(@2`bE7,LE;Y1?ko'\o!Q_0H4\7M:O:ZSRii[P"=AY@:NM9m"jMMi$^mKuUcF13W9%@ZA3ot>7':-=`PEE"HiWnEd>"#ka
%3ioSG5H+-cdmlg`eB<AeJ?DeN'R!\=M?EgMljF(WUHQ$[,?"+#([*E&eNb9AQ6IQ75jKaXlBSGhD:W[5'>Ph(5=Ltc-X@4NGBZr#
%+mj9s>R&dJE253I68e9Y+*X*N?im1Ro+h',0;nXKh5`#Gk!<21_:6,H3+5&>qLFNc0b?K;oR)q*)@J`T;_!X(Z&Ycp?T+rSPe@2P
%b7ROF7QkdK(<Yd%GpWG^DJ`e4,nf.-+S"DQq[l"H"l+q`Wn&:2"e/)\W?[u!q+V,Be8!F=+BeAHE>^VVQNf#qX=I*j.%,0'r1G77
%kT1WWh7A:!;LXcOde+98OdZP>(oPsr8+4KhXR'2h@hG-4@#iNI7:K,4&h/u0`;CGdJZ:F?m!$Bjk<&QUUTHsXi\",1G*AT?Ll@f,
%>(F`r#DXNo@9L3"RIs1f4N`n?R8M7g/u2RU7+'Y0V@i.JP9!X<=$MXm4[L?l1^%f3.3",&$jUg7jG*n'BDDc3%26SC2:SZonL359
%B8'`2PMLRF5nr$@.tefB\0_J+[q;B$$pf^?de=k<YT>&)^.dPiWg7!*CZU35H2V^1IUocDqKigeY!rdP[4MSFk>[T:(7^O8HGdLs
%H\QZJ&_U"S'O"AMQ0/G&;ut%]PV`oMR:HV`YJeVB/_Z83.`,!^iPDhP'Z]N7cUX:u5fKhoiA<9+KY"Wg<NOPJ*=0-IN&+TiBapqJ
%=Qm$T,Z_OYif7%'::3,^c`O,lK]RMiMJZ0ZH=LN%#mCPEcnbe_:dIMdaj-/.8pN0uaQB5o+FbeerIa;*)%66&/-1]/(2<*m+_]=T
%7*Z3-=tGGM/538RfXn]/,C?9gd"_<>4052:7?YO$>'/u.Kolb$Zb`Se7I_cfq$2iX<hk(%.87G&gehI^-B3Nj/9i]Zb(S:_DeS'2
%L\Ju<nR_.ue:23:i4C=Ls7`R$c>3IFIkC]iT76g$YC?BI2rB)S`>&7JDh%X[hu)s#rq:PS^A7J8J+6>7r7g\SH2?psJ'V'-q>]WM
%T)S!/DuTQnJ,&`,Vgn\qrpVR3\EUZbk<JuBs5gG6p)!`<4X*8!~>
%AI9_PrivateDataEnd
